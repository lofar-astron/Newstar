%!PS-Adobe-2.1
%%Creator: DECwrite T2.0-IFT
%%+Copyright (c) 1990 DIGITAL EQUIPMENT CORPORATION.  
%%+All Rights Reserved.
%%DocumentFonts: (atend)
%%EndComments
%%BeginProcSet DEC_WRITE 1.07
/DEC_WRITE_dict 150 dict def DEC_WRITE_dict begin/$D save def/$I 0 def/$S 0
def/$C matrix def/$R matrix def/$L matrix def/$E matrix def/pat1{/px exch
def/pa 8 array def 0 1 7{/py exch def/pw 4 string def 0 1 3{pw exch px py 1
getinterval putinterval}for pa py pw put}for}def/pat2{/pi exch def/cflag
exch def save cflag 1 eq{eoclip}{clip}ifelse newpath{clippath
pathbbox}stopped not{/ph exch def/pw exch def/py exch def/px exch def/px px
3072 div floor 3072 mul def/py py 3072 div floor 3072 mul def px py
translate/pw pw px sub 3072 div floor 1 add cvi def/ph ph py sub 3072 div
floor 1 add cvi def pw 3072 mul ph 3072 mul scale/pw pw 32 mul def/ph ph 32
mul def/px 0 def/py 0 def pw ph pi[pw 0 0 ph 0 0]{pa py get/px px 32 add
def px pw ge{/px 0 def/py py 1 add 8 mod def}if}pi type/booleantype
eq{imagemask}{image}ifelse}if restore}def/PS{/_op exch def/_np 8 string def
0 1 7{/_ii exch def/num _op _ii get def _np 7 _ii sub num -4 bitshift PX
num 15 and 4 bitshift -4 bitshift PX 4 bitshift or put}for _np}def/PX{[15 7
11 3 13 5 9 1 14 6 10 2 12 4 8 0]exch get}def/FR{0.7200 0 $E defaultmatrix
dtransform/yres exch def/xres exch def xres dup mul yres dup mul add
sqrt}def/SU{/_sf exch def/_sa exch def/_cs exch def/_mm $C currentmatrix
def/rm _sa $R rotate def/sm _cs dup $L scale def sm rm _mm _mm concatmatrix
_mm concatmatrix pop 1 0 _mm dtransform/y1 exch def/x1 exch def/_vl x1 dup
mul y1 dup mul add sqrt def/_fq FR _vl div def/_na y1 x1 atan def _mm 2 get
_mm 1 get mul _mm 0 get _mm 3 get mul sub 0 gt{{neg}/_sf load
concatprocs/_sf exch def}if _fq _na/_sf load setscreen}def/BO{/_yb exch
def/_xb exch def/_bv _bs _yb _bw mul _xb 8 idiv add get def/_mk 1 7 _xb 8
mod sub bitshift def _bv _mk and 0 ne $I 1 eq xor}def/BF{DEC_WRITE_dict
begin/_yy exch def/_xx exch def/_xi _xx 1 add 2 div _bp mul cvi def/_yi _yy
1 add 2 div _bp mul cvi def _xi _yi BO{/_nb _nb 1 add def 1}{/_fb _fb 1 add
def 0}ifelse end}def/setpattern{/_cz exch def/_bw exch def/_bp exch def/_bs
exch PS def/_nb 0 def/_fb 0 def _cz 0/BF load SU{}settransfer _fb _fb _nb
add div setgray/$S 1 def}def/invertpattern{$S 0 eq{{1 exch
sub}currenttransfer concatprocs settransfer}if}def/invertscreen{/$I 1
def/$S 0 def}def/revertscreen{/$I 0 def}def/setrect{/$h exch def/$w exch
def/$y exch def/$x exch def newpath $x $y moveto $w $x add $y lineto $w $x
add $h $y add lineto $x $h $y add lineto closepath}def/concatprocs{/_p2
exch cvlit def/_p1 exch cvlit def/_pn _p1 length _p2 length add array def
_pn 0 _p1 putinterval _pn _p1 length _p2 putinterval _pn
cvx}def/OF/findfont load def/findfont{dup DEC_WRITE_dict exch
known{DEC_WRITE_dict exch get}if DEC_WRITE_dict/OF get exec}def
mark/ISOLatin1Encoding 
8#000 1 8#001{StandardEncoding exch get}for /emdash/endash
8#004 1 8#025{StandardEncoding exch get}for /quotedblleft/quotedblright
8#030 1 8#054{StandardEncoding exch get}for /minus 8#056 1 8#217
{StandardEncoding exch get}for/dotlessi 8#301 1 8#317{StandardEncoding 
exch get}for/space/exclamdown/cent/sterling/currency/yen/brokenbar/section
/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered
/macron/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph
/periodcentered/cedilla/onesuperior/ordmasculine/guillemotright/onequarter
/onehalf/threequarters/questiondown/Agrave/Aacute/Acircumflex/Atilde
/Adieresis/Aring/AE/Ccedilla/Egrave/Eacute/Ecircumflex/Edieresis/Igrave
/Iacute/Icircumflex/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde
/Odieresis/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn
/germandbls/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave
/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis
256 array astore def cleartomark 
/encodefont{findfont dup maxlength dict begin{1 index/FID ne{def}{pop
pop}ifelse}forall/Encoding exch def dup/FontName exch def currentdict
definefont end}def/loads{/$/ISOLatin1Encoding load def/&/encodefont load
def/*/invertpattern load def/+/revertscreen load def/-/invertscreen load
def/:/concatprocs load def/^/setpattern load def/~/pat1 load def/_/pat2
load def/@/setrect load def/A/arcn load def/B/ashow load def/C/curveto load
def/D/def load def/E/eofill load def/F/findfont load def/G/setgray load
def/H/closepath load def/I/clip load def/J/fill load def/K/kshow load
def/L/lineto load def/M/moveto load def/N/newpath load def/O/rotate load
def/P/pop load def/R/grestore load def/S/gsave load def/T/translate load
def/U/sub load def/V/div load def/W/widthshow load def/X/exch load
def/Y/awidthshow load def/a/save load def/c/setlinecap load def/d/setdash
load def/e/restore load def/f/setfont load def/g/initclip load def/h/show
load def/i/setmiterlimit load def/j/setlinejoin load def/k/stroke load
def/l/rlineto load def/m/rmoveto load def/n/currentfont load
def/o/scalefont load def/p/currentpoint load def/q/setrgbcolor load
def/r/currenttransfer load def/s/scale load def/t/setmatrix load
def/u/settransfer load def/w/setlinewidth load def/x/matrix load
def/y/currentmatrix load def}def
end
%%EndProcSet
%%EndProlog
%%BeginSetup
DEC_WRITE_dict begin
loads
version cvi 23.0 gt {
currentdict {dup type /arraytype eq
{bind def} {pop pop} ifelse} forall} if
0.0100 0.0100 s

%%EndSetup
%%Page: 1 1
/$P a D
g N
0 79200 T
S
S
N
7500 -73600 M
53700 -73600 L
S
100 w
0 c
0 j
2 i
0.00 G k
R
R

R
S
7200 -7200 T
N
0 G
8193 -2100 M
/Helvetica-Bold-ISOLatin1 $
/Helvetica-Bold & P
/Helvetica-Bold-ISOLatin1 F 2400 o f
(32/64 Bit Portability Issues) h
23400 -5850 M
20387 -11150 M
/Times-Roman-ISOLatin1 $
/Times-Roman & P
/Times-Roman-ISOLatin1 F 1400 o f
(Ray Lanza) h
15718 -16600 M
n 0.857 o f
(Advanced OSF Software Group) h
21266 -22600 M
(11/19/91) h
3900 -28749 M
/Times-Italic-ISOLatin1 $
/Times-Italic & P
/Times-Italic-ISOLatin1 F 1399 o f
281.1 0 32 (64\255bit architectures provide extended capabilities such as support) W
3900 -30348 M
231.7 0 32 (for larger address spaces and scalar arithmetic ranges. These en\255) W
3900 -31947 M
281.0 0 32 (hanced capabilities introduce a number of compatibility problems) W
3900 -33546 M
41.1 0 32 (that must be addressed while porting software. Many of the compati\255) W
3900 -35145 M
97.7 0 32 (bility problems can be avoided through careful design and attention) W
3900 -36744 M
(to datatypes.) h
n 0.858 o f
( ) h
-7200 7200 T
R

showpage
$P e

%%Page: 2 2
/$P a D
g N
0 79200 T
S
S
7200 -74700 T
N
0 G
22511 -1050 M
/Helvetica-ISOLatin1 $
/Helvetica & P
/Helvetica-ISOLatin1 F 1000 o f
(\255 ) h
(2) h
( \255) h
300 -2485 M
-7200 74700 T
R

S
N
7500 -73600 M
53700 -73600 L
S
100 w
0 c
0 j
2 i
0.00 G k
R
R

R
S
7200 -7200 T
N
0 G
3900 -1200 M
300 -3800 M
/Helvetica-BoldOblique-ISOLatin1 $
/Helvetica-BoldOblique & P
/Helvetica-BoldOblique-ISOLatin1 F 1200 o f
(Overview) h
300 -5400 M
300 -7400 M
/Times-Roman-ISOLatin1 $
/Times-Roman & P
/Times-Roman-ISOLatin1 F 1200 o f
19.8 0 32 (There is a set of issues involved in porting applications from ULTRIX to OSF1.  Another set of) W
300 -8800 M
110.4 0 32 (issues exist in porting applications from a 32\255bit OSF system to a 64\255bit OSF system.  These) W
300 -10200 M
17.9 0 32 (are two disjoint sets of issues.  This paper deals with the later.  Porting ULTRIX applications to) W
300 -11600 M
(OSF is documented in the HERCULES Porting Guide.) h
300 -13600 M
223.1 0 32 (64\255bit architectures provide wider registers to hold larger scalar datatypes and memory ad\255) W
300 -15000 M
69.8 0 32 (dresses. They also provide arithmetic and logical instructions to operate on these registers. It's) W
300 -16400 M
64.4 0 32 (these capabilities that differentiate 64 bit systems from 32\255bit systems. Unfortunately these ca\255) W
300 -17800 M
(pabilities also introduce portability issues. ) h
300 -19800 M
13.6 0 32 (Most applications are written in one or more high level languages. A discussion of portability is) W
300 -21200 M
107.1 0 32 (only practical in the context of one of these languages, as applications written in assembly or) W
300 -22600 M
80.5 0 32 (macro assembly need complete rewrites or translations.  For the purpose of this paper the lan\255) W
300 -24000 M
(guage of interest is C but variations of the problems occur with other languages. ) h
300 -26000 M
74.4 0 32 (Much of the information in this paper is a direct result of work done on a port of ULTRIX\25532) W
300 -27400 M
11.3 0 32 (V4.0 to a 64\255bit architecture.  The port was done as a research/advanced development effort.  In) W
300 -28800 M
143.9 0 32 (addition to the operating system, approximately 280  user level commands and utilities were) W
300 -30200 M
14.2 0 32 (ported.  While this represents a considerable body of code, it's not clear if this is truly represen\255) W
300 -31600 M
(tative of user applications.) h
300 -33600 M
(During the port we learned a number of things:) h
300 -35600 M
/Symbol F 1200 o f
(\267) h
2100 -35600 M
/Times-Roman-ISOLatin1 F 1200 o f
(Most well written programs compile and run without change) h
300 -37600 M
/Symbol F 1200 o f
(\267) h
2100 -37600 M
/Times-Roman-ISOLatin1 F 1200 o f
95.1 0 32 (Most 32/64 bit portability problems can be avoided through the use of good programming) W
2100 -39000 M
(practices) h
300 -41000 M
/Symbol F 1200 o f
(\267) h
2100 -41000 M
/Times-Roman-ISOLatin1 F 1200 o f
233.7 0 32 (Most 32/64 bit portability problems are a direct result of changing one or more of the) W
2100 -42400 M
(datatypes) h
300 -44400 M
/Symbol F 1200 o f
(\267) h
2100 -44400 M
/Times-Roman-ISOLatin1 F 1200 o f
(Programs living in a pure 64\255bit environment can ignore most data size issues) h
300 -46400 M
/Symbol F 1200 o f
(\267) h
2100 -46400 M
/Times-Roman-ISOLatin1 F 1200 o f
120.6 0 32 (Programs producing/consuming data from 32\255bit programs may need design and develop\255) W
2100 -47800 M
(ment effort to solve problems) h
300 -49800 M
300 -51800 M
/Helvetica-BoldOblique-ISOLatin1 F 1200 o f
(Datatype Definitions) h
300 -53400 M
300 -55000 M
/Times-Roman-ISOLatin1 F 1200 o f
29.0 0 32 (A 64\255bit system provides support for greater addressibility and larger ranges for scalar arithme\255) W
300 -56400 M
25.9 0 32 (tic operations.  Providing this functionality for user applications involves changing one or more) W
300 -57800 M
203.5 0 32 (of the scalar datatypes.  Unfortunately these changes result in interoperability problems be\255) W
300 -59200 M
(tween 32/64 bit systems and are the main cause of portability problems.  ) h
300 -61200 M
(The primary consideration for the choices outlined in the following table is in fact portability. ) h
300 -62600 M
-7200 7200 T
R

showpage
$P e

%%Page: 3 3
/$P a D
g N
0 79200 T
S
S
7200 -74700 T
N
0 G
22511 -1050 M
/Helvetica-ISOLatin1 $
/Helvetica & P
/Helvetica-ISOLatin1 F 1000 o f
(\255 ) h
(3) h
( \255) h
300 -2485 M
-7200 74700 T
R

S
N
7500 -73600 M
53700 -73600 L
S
100 w
0 c
0 j
2 i
0.00 G k
R
R

R
S
7200 -7200 T
N
0 G
300 -1200 M
/Times-Roman-ISOLatin1 $
/Times-Roman & P
/Times-Roman-ISOLatin1 F 1200 o f
83.6 0 32 (With these definitions it is possible to define data structures that do not change size from sys\255) W
300 -2600 M
(tem to system.) h
300 -4600 M
300 -24140 M
S
0 18440 m
p T
0 -18440 27080 18440 @ I N
N
S
150 -150 T
N
0 G
600 -1500 M
/Times-Roman-ISOLatin1 F 1200 o f
(Data Type) h
-150 150 T
R

S
7259 -150 T
N
0 G
1378 -1500 M
/Times-Roman-ISOLatin1 F 1200 o f
(32 Bit System) h
-7259 150 T
R

S
16917 -150 T
N
0 G
1605 -1500 M
/Times-Roman-ISOLatin1 F 1200 o f
(64 Bit System) h
-16917 150 T
R

S
150 -2650 T
N
0 G
600 -1500 M
/Times-Roman-ISOLatin1 F 1200 o f
(char) h
6360 -1500 M
600 -2936 M
-150 2650 T
R

S
7259 -2650 T
N
0 G
4479 -1500 M
/Times-Roman-ISOLatin1 F 1200 o f
(8) h
600 -2936 M
-7259 2650 T
R

S
16917 -2650 T
N
0 G
4706 -1500 M
/Times-Roman-ISOLatin1 F 1200 o f
(8) h
600 -2936 M
-16917 2650 T
R

S
150 -5890 T
N
0 G
600 -1500 M
/Times-Roman-ISOLatin1 F 1200 o f
(short) h
-150 5890 T
R

S
7259 -5890 T
N
0 G
4179 -1500 M
/Times-Roman-ISOLatin1 F 1200 o f
(16) h
-7259 5890 T
R

S
16917 -5890 T
N
0 G
4406 -1500 M
/Times-Roman-ISOLatin1 F 1200 o f
(16) h
-16917 5890 T
R

S
150 -8390 T
N
0 G
600 -1500 M
/Times-Roman-ISOLatin1 F 1200 o f
(int) h
-150 8390 T
R

S
7259 -8390 T
N
0 G
4179 -1500 M
/Times-Roman-ISOLatin1 F 1200 o f
(32) h
-7259 8390 T
R

S
16917 -8390 T
N
0 G
4406 -1500 M
/Times-Roman-ISOLatin1 F 1200 o f
(32) h
-16917 8390 T
R

S
150 -10890 T
N
0 G
600 -1500 M
/Times-Roman-ISOLatin1 F 1200 o f
(long) h
-150 10890 T
R

S
7259 -10890 T
N
0 G
4179 -1500 M
/Times-Roman-ISOLatin1 F 1200 o f
(32) h
-7259 10890 T
R

S
16917 -10890 T
N
0 G
4406 -1500 M
/Times-Roman-ISOLatin1 F 1200 o f
(64) h
-16917 10890 T
R

S
150 -13390 T
N
0 G
600 -1500 M
/Times-Roman-ISOLatin1 F 1200 o f
(long long) h
-150 13390 T
R

S
7259 -13390 T
N
0 G
4179 -1500 M
/Times-Roman-ISOLatin1 F 1200 o f
(64) h
-7259 13390 T
R

S
16917 -13390 T
N
0 G
4406 -1500 M
/Times-Roman-ISOLatin1 F 1200 o f
(64) h
-16917 13390 T
R

S
150 -15890 T
N
0 G
600 -1500 M
/Times-Roman-ISOLatin1 F 1200 o f
(pointer) h
-150 15890 T
R

S
7259 -15890 T
N
0 G
4179 -1500 M
/Times-Roman-ISOLatin1 F 1200 o f
(32) h
-7259 15890 T
R

S
16917 -15890 T
N
0 G
4406 -1500 M
/Times-Roman-ISOLatin1 F 1200 o f
(64) h
-16917 15890 T
R

S
N
7209 0 M
7209 -18640 L
S
100 w
0 c
0 j
2 i
0.00 G k
R
R

S
N
16867 0 M
16867 -18640 L
S
100 w
0 c
0 j
2 i
0.00 G k
R
R

S
N
0 -2600 M
27380 -2600 L
S
100 w
0 c
0 j
2 i
0.00 G k
R
R

S
N
0 -5840 M
27380 -5840 L
S
100 w
0 c
0 j
2 i
0.00 G k
R
R

S
N
0 -8340 M
27380 -8340 L
S
100 w
0 c
0 j
2 i
0.00 G k
R
R

S
N
0 -10840 M
27380 -10840 L
S
100 w
0 c
0 j
2 i
0.00 G k
R
R

S
N
0 -13340 M
27380 -13340 L
S
100 w
0 c
0 j
2 i
0.00 G k
R
R

S
N
0 -15840 M
27380 -15840 L
S
100 w
0 c
0 j
2 i
0.00 G k
R
R

S
75.0 -18365.0 26930.0 18290.0 @
S
150 w
0 c
0 j
0.00 G k
R
R
R
27080 0 m
300 -26190 M
/Times-Roman-ISOLatin1 F 1200 o f
91.3 0 32 (As you can see from the table `long' and `pointer' change from 32 to 64 bits.  These changes) W
300 -27590 M
157.7 0 32 (provide the applications developer with support for all of the supported scalar types and ex\255) W
300 -28990 M
(pands addressing beyond the limits imposed by today's 32\255bit systems.) h
300 -30990 M
48.3 0 32 (The `long long' datatype will be supported in future versions of the 32 and 64\255bit C compilers. ) W
300 -32390 M
296.6 0 32 (It provides the ability to read and write 64 bit scalar data and may provide a degree of) W
300 -33790 M
(interoperability for new programs being developed.) h
300 -35790 M
300 -37790 M
/Helvetica-BoldOblique-ISOLatin1 $
/Helvetica-BoldOblique & P
/Helvetica-BoldOblique-ISOLatin1 F 1200 o f
(Types of problems ) h
300 -39390 M
300 -41390 M
/Times-Roman-ISOLatin1 F 1200 o f
(There are five basic problems or issues that need to be addressed:) h
300 -43390 M
/Symbol F 1200 o f
(\267) h
2100 -43390 M
/Times-Roman-ISOLatin1 F 1200 o f
(Objects change size) h
300 -45390 M
/Symbol F 1200 o f
(\267) h
2100 -45390 M
/Times-Roman-ISOLatin1 F 1200 o f
(Sizeof\( * \) != Sizeof\( int \)) h
300 -47390 M
/Symbol F 1200 o f
(\267) h
2100 -47390 M
/Times-Roman-ISOLatin1 F 1200 o f
(32 <=> 64 bit interoperability) h
300 -49390 M
/Symbol F 1200 o f
(\267) h
2100 -49390 M
/Times-Roman-ISOLatin1 F 1200 o f
(Atomicity) h
300 -51390 M
/Symbol F 1200 o f
(\267) h
2100 -51390 M
/Times-Roman-ISOLatin1 F 1200 o f
(Read/Write ordering) h
300 -53390 M
300 -55390 M
/Helvetica-BoldOblique-ISOLatin1 F 1200 o f
(Objects Change Size) h
300 -56990 M
300 -58590 M
/Times-Roman-ISOLatin1 F 1200 o f
51.4 0 32 (Data objects that include pointers or longs change size.  The following is an example of a sim\255) W
300 -59990 M
(plistic linked list data structure.) h
300 -61990 M
-7200 7200 T
R

showpage
$P e

%%Page: 4 4
/$P a D
g N
0 79200 T
S
S
7200 -74700 T
N
0 G
22511 -1050 M
/Helvetica-ISOLatin1 $
/Helvetica & P
/Helvetica-ISOLatin1 F 1000 o f
(\255 ) h
(4) h
( \255) h
300 -2485 M
-7200 74700 T
R

S
N
7500 -73600 M
53700 -73600 L
S
100 w
0 c
0 j
2 i
0.00 G k
R
R

R
S
7200 -7200 T
N
0 G
300 -1200 M
300 -3200 M
/Times-Roman-ISOLatin1 $
/Times-Roman & P
/Times-Roman-ISOLatin1 F 1200 o f
(struct foo {) h
300 -5200 M
6060 -5200 M
(struct foo *next, *prev;) h
300 -7200 M
6060 -7200 M
(int mode;) h
300 -9200 M
6060 -9200 M
(char *name;) h
300 -11200 M
(}; ) h
300 -13200 M
300 -15200 M
62.9 0 32 (On a 32\255bit system this structure occupies 16 bytes of memory.  On a 64\255bit system this struc\255) W
300 -16600 M
48.6 0 32 (ture will be 32 bytes long.  12 bytes of the growth are a result of the three pointers doubling in) W
300 -18000 M
(length. The other 4 bytes are a result of alignment padding. ) h
n 0.666 o f
0.0 538.0 m
(1) h
0 -538.0 m
300 -20000 M
n 1.502 o f
81.2 0 32 (The fact that this data structure changed size may not be a problem.  If the program runs on a) W
300 -21400 M
4.8 0 32 (64\255bit system and the data it produces and consumes remains on 64\255bit systems, no harm occurs) W
300 -22800 M
40.1 0 32 (except for a potential size problem.   The problem exists in environments where the 64\255bit pro\255) W
300 -24200 M
33.8 0 32 (gram must consume data produced by a 32\255bit program or it produces data that is consumed by) W
300 -25600 M
(a 32\255bit program.) h
300 -27600 M
79.6 0 32 (The key to defining compatible data structures is to avoid the use of long and pointer declara\255) W
300 -29000 M
78.1 0 32 (tions.  This may seem like a difficult task but in fact it's relatively easy.  Declarations of long) W
300 -30400 M
0.9 0 32 (can be replaced by int to preserve sizes. In serious database\255oriented applications pointers rarely) W
300 -31800 M
17.4 0 32 (appear in declarations that are written to mass storage devices.  These applications are normally) W
300 -33200 M
(concerned about storage efficiency and already avoid pointers.) h
300 -35200 M
152.9 0 32 (In the case where a 64\255bit program must deal with 32\255bit data structures containing pointers) W
300 -36600 M
2.4 0 32 (more work is required.  One approach is to define a  new data structure that encapsulates the old) W
300 -38000 M
5.1 0 32 (structure while preserving the alignments, and then being careful to perform I/O to and from the) W
300 -39400 M
74.3 0 32 (encapsulated structure.  This technique assumes that data written out in pointer fields is irrele\255) W
300 -40800 M
14.9 0 32 (vant and will be filled in when the structure is memory resident. These problems are not limited) W
300 -42200 M
(to files on disk, they can happen with all forms of mass storage including tape.  ) h
300 -44200 M
300 -46200 M
/Helvetica-BoldOblique-ISOLatin1 $
/Helvetica-BoldOblique & P
/Helvetica-BoldOblique-ISOLatin1 F 1200 o f
(Sizeof\( * \) != Sizeof\( int \)) h
300 -47800 M
300 -49800 M
/Times-Roman-ISOLatin1 F 1200 o f
(Of all of the problems anticipated as a result of the datatypes chosen this was the one that con\255) h
300 -51200 M
(cerned most people.  The example below results in truncation of the value stored in `buffer') h
300 -52600 M
(inspite of the casts used. There were very few of these problems in the port of ULTRIX\25532 to) h
300 -54000 M
(the 64\255bit architecture.   Most instances were in virtual memory related kernel code or the) h
300 -55400 M
(bourne shell, `/bin/sh'.) h
300 -57000 M
-7200 7200 T
R

S
7200 -70200 T
N
0 G
300 -1200 M
/Times-Roman-ISOLatin1 F 1000 o f
0.0 448.0 m
(1) h
0 -448.0 m
900 -1200 M
(OSF and ULTRIX compilers align data on `natural boundaries') h
-7200 70200 T
R

showpage
$P e

%%Page: 5 5
/$P a D
g N
0 79200 T
S
S
7200 -74700 T
N
0 G
22511 -1050 M
/Helvetica-ISOLatin1 $
/Helvetica & P
/Helvetica-ISOLatin1 F 1000 o f
(\255 ) h
(5) h
( \255) h
300 -2485 M
-7200 74700 T
R

S
N
7500 -73600 M
53700 -73600 L
S
100 w
0 c
0 j
2 i
0.00 G k
R
R

R
S
7200 -7200 T
N
0 G
300 -1200 M
300 -2800 M
/Times-Roman-ISOLatin1 $
/Times-Roman & P
/Times-Roman-ISOLatin1 F 1200 o f
(int foo;) h
300 -4800 M
(char *buffer;) h
300 -6800 M
6060 -6800 M
(buffer = \(char *\)malloc\(128\);) h
300 -8800 M
6060 -8800 M
(foo = \( int \)buffer;) h
300 -10800 M
6060 -10800 M
(buffer = \(char *\)foo;) h
300 -12800 M
300 -14800 M
300 -16800 M
6.3 0 32 (The 64\255bit version of the product will contain an enhanced version of lint that will issue a warn\255) W
300 -18200 M
(ing when an assignment of this type is attempted.) h
300 -20200 M
85.1 0 32 (Another form of this problem is encountered with aliased data structures.  We have seen code) W
300 -21600 M
(that defines multiple structures for the same object instead of using unions.) h
300 -23600 M
300 -25600 M
(struct foo {) h
6060 -25600 M
11820 -25600 M
17580 -25600 M
23340 -25600 M
(struct bar {) h
300 -27600 M
6060 -27600 M
(int src_addr, dst_addr;) h
17580 -27600 M
23340 -27600 M
29100 -27600 M
(struct bar *next, *prev;) h
300 -29600 M
6060 -29600 M
(char *name;) h
17580 -29600 M
23340 -29600 M
29100 -29600 M
(char *name;) h
300 -31600 M
(};) h
6060 -31600 M
11820 -31600 M
17580 -31600 M
23340 -31600 M
(};) h
300 -33600 M
300 -35600 M
0.3 0 32 (This is similar to a problem found in the `ip' portion of the network code.  The source and desti\255) W
300 -37000 M
83.7 0 32 (nation internet address are stored as 32 bit integers.  As the data is passed up through the net\255) W
300 -38400 M
53.9 0 32 (work layers the fields containing the network addresses are reused as linked list pointers.  This) W
300 -39800 M
132.0 0 32 (works well on a system where a pointer is the same size as an int.  It doesn't work with the) W
300 -41200 M
(datatype choices made for 64\255bit systems.) h
300 -43200 M
70.7 0 32 (Problems of this type are difficult to find and correct.  In the `ip' case lower layers of the sys\255) W
300 -44600 M
69.3 0 32 (tem used the `foo' declaration and upper layers used the `bar' declaration.  Running lint on all) W
300 -46000 M
62.8 0 32 (the modules in a program or using ANSI C function prototypes will detect a miss\255match in ar\255) W
300 -47400 M
(guments.  Unfortunately an appropriate cast may hide this condition.) h
300 -49400 M
71.5 0 32 (Another form of this problem occurs with function arguments. If you pass a 32\255bit constant or) W
300 -50800 M
135.6 0 32 (an `int' to a function which expects a `long' or a pointer the object is likely to be truncated. ) W
300 -52200 M
(Again using ANSI C function prototypes or `lint' on older programs will solve this problem.) h
300 -54200 M
15.9 0 32 (The final form of this problem involves default types.  Constants defined without the `L' suffix,) W
300 -55600 M
34.1 0 32 (variables declared as `unsigned' without a type and function arguments declared without a type) W
300 -57000 M
105.7 0 32 (all default to `int'.  In many cases this may be correct however if you attempt to use these to) W
300 -58400 M
(hold a value longer than 32 bits you may observe truncation.) h
300 -60400 M
-7200 7200 T
R

showpage
$P e

%%Page: 6 6
/$P a D
g N
0 79200 T
S
S
7200 -74700 T
N
0 G
22511 -1050 M
/Helvetica-ISOLatin1 $
/Helvetica & P
/Helvetica-ISOLatin1 F 1000 o f
(\255 ) h
(6) h
( \255) h
300 -2485 M
-7200 74700 T
R

S
N
7500 -73600 M
53700 -73600 L
S
100 w
0 c
0 j
2 i
0.00 G k
R
R

R
S
7200 -7200 T
N
0 G
300 -1200 M
300 -3200 M
/Helvetica-BoldOblique-ISOLatin1 $
/Helvetica-BoldOblique & P
/Helvetica-BoldOblique-ISOLatin1 F 1200 o f
(Interoperability) h
300 -4800 M
300 -6800 M
/Times-Roman-ISOLatin1 $
/Times-Roman & P
/Times-Roman-ISOLatin1 F 1200 o f
126.6 0 32 (In previous sections the data portability problems were limited to mass storage devices.  The) W
300 -8200 M
53.1 0 32 (mass storage related problems are really just a simple form of more general inter\255process com\255) W
300 -9600 M
108.0 0 32 (munications problems.  Any time a 32\255bit program communicates with a 64\255bit program they) W
300 -11000 M
23.5 0 32 (must agree on the format and type of data.  Therefore, the same issues can occur over a local or) W
300 -12400 M
112.4 0 32 (wide area network.  If the 64\255bit product supported both 32\255bit and 64\255bit execution environ\255) W
300 -13800 M
205.0 0 32 (ments the problem would be extended to include other IPC mechanisms such as System V) W
300 -15200 M
(shared memory and message queues.) h
n 0.666 o f
0.0 538.0 m
(1) h
0 -538.0 m
300 -17200 M
n 1.502 o f
31.4 0 32 (64\255bit systems will support files larger than 2 gigabytes.) W
n 0.666 o f
0.0 538.0 m
31.4 0 32 (2) W
0 -538.0 m
n 1.502 o f
31.4 0 32 (  They will also function as fileservers) W
300 -18600 M
19.1 0 32 (for other systems including existing 32\255bit systems.  Files may be created that can't be fully ad\255) W
300 -20000 M
50.9 0 32 (dressed by 32\255bit clients.  It will also be possible to mount disks from 64\255bit systems on 32\255bit) W
300 -21400 M
(systems and have the same problem.) h
300 -23400 M
300 -25400 M
/Helvetica-BoldOblique-ISOLatin1 F 1200 o f
(Atomicity) h
300 -27000 M
300 -29000 M
/Times-Roman-ISOLatin1 F 1200 o f
83.7 0 32 (Some 64\255bit architectures do not support byte or word load and store operations. The smallest) W
300 -30400 M
100.3 0 32 (unit of memory access is the longword, which is 32 bits.  High level language byte and word) W
300 -31800 M
31.6 0 32 (accesses are accomplished with multiple instructions.  In most cases this fact can be ignored by) W
300 -33200 M
148.0 0 32 (an applications developer.  It becomes important whenever multiple threads of execution are) W
300 -34600 M
28.1 0 32 (sharing data.  This can happen when two or more processes share data via shared memory or in) W
300 -36000 M
(a multi\255threaded application where all threads share a common address space.) h
300 -38000 M
(char byte[16]) h
300 -40000 M
12.5 0 32 (As an example using the declaration above, if threadA attempts to update byte[0] while threadB) W
300 -41400 M
41.9 0 32 (updates byte[1] there is a chance that the access of one thread will affect the other even though) W
300 -42800 M
24.6 0 32 (they aren't trying to update the same variable.  The following is an example of the code used to) W
300 -44200 M
(update a single byte.) h
300 -46200 M
300 -48200 M
(8: byte[1] = 5; ) h
300 -50200 M
( [tst.c: 8] 0x120000230: 43e0b40f) h
17580 -50200 M
(addq zero, 0x5, t7) h
300 -51600 M
( [tst.c: 8] 0x120000234: 203e0001) h
17580 -51600 M
(lda at, 1\(sp\)) h
300 -53000 M
( [tst.c: 8] 0x120000238: 2f410000) h
17580 -53000 M
(ldq_u k0, 0\(at\)          \255\255\255\255\255\255\255\255\255\255\255) h
300 -54400 M
( [tst.c: 8] 0x12000023c: 49e1017b) h
17580 -54400 M
(insbl t7, at, k1) h
300 -55800 M
( [tst.c: 8] 0x120000240: 4b41005a) h
17580 -55800 M
(mskbl k0, at, k0) h
300 -57200 M
( [tst.c: 8] 0x120000244: 475b041a) h
17580 -57200 M
(bis k0, k1, k0) h
300 -58600 M
( [tst.c: 8] 0x120000248: 3f410000) h
17580 -58600 M
(stq_u k0, 0\(at\)          \255\255\255\255\255\255\255\255\255\255\255) h
-7200 7200 T
R

S
7200 -68400 T
N
0 G
300 -1200 M
/Times-Roman-ISOLatin1 F 1000 o f
0.0 448.0 m
(1) h
0 -448.0 m
900 -1200 M
(Not part of the product plans at this time) h
300 -3000 M
0.0 448.0 m
(2) h
0 -448.0 m
900 -3000 M
(32 bit systems are currently limited to 2 gigabytes) h
-7200 68400 T
R

showpage
$P e

%%Page: 7 7
/$P a D
g N
0 79200 T
S
S
7200 -74700 T
N
0 G
22511 -1050 M
/Helvetica-ISOLatin1 $
/Helvetica & P
/Helvetica-ISOLatin1 F 1000 o f
(\255 ) h
(7) h
( \255) h
300 -2485 M
-7200 74700 T
R

S
N
7500 -73600 M
53700 -73600 L
S
100 w
0 c
0 j
2 i
0.00 G k
R
R

R
S
7200 -7200 T
N
0 G
300 -1200 M
300 -3200 M
/Times-Roman-ISOLatin1 $
/Times-Roman & P
/Times-Roman-ISOLatin1 F 1200 o f
23.3 0 32 (A 5 instruction sequence is used to load the quadword containing the byte, update the byte with) W
300 -4600 M
9.7 0 32 (the right value and store the result back to memory.  If threadA starts this operation and is inter\255) W
300 -6000 M
224.5 0 32 (rupted between the load and store and threadB gets control and updates byte[0] or byte[2]) W
300 -7400 M
(threadB's changes will be overwritten when threadA completes it sequence.) h
300 -9400 M
134.1 0 32 (Programs that work on nonshared data on VAX and MIPS aren't affected because they have) W
300 -10800 M
51.6 0 32 (`atomic' read and write access at the byte granularity level.  The same program might fail on a) W
300 -12200 M
29.0 0 32 (64\255bit system and must be coded appropriately by using longword or quadword data aligned on) W
300 -13600 M
(natural boundaries.) h
n 0.667 o f
0.0 538.0 m
(1) h
0 -538.0 m
300 -15600 M
300 -17600 M
/Helvetica-BoldOblique-ISOLatin1 $
/Helvetica-BoldOblique & P
/Helvetica-BoldOblique-ISOLatin1 F 1200 o f
(Read/Write Ordering) h
300 -19200 M
300 -21200 M
/Times-Roman-ISOLatin1 F 1200 o f
183.7 0 32 (Some 64\255bit multiprocessor systems pose an additional problem for applications developers. ) W
300 -22600 M
134.1 0 32 (They do not guarantee write ordering between multiple processors) W
n 0.667 o f
0.0 538.0 m
134.1 0 32 (2) W
0 -538.0 m
n 1.500 o f
134.1 0 32 (.  If variable A and B are) W
300 -24000 M
33.7 0 32 (written to memory in order on one processor they will appear to be written in that order on that) W
300 -25400 M
22.1 0 32 (processor but might appear in a different order on another processor.  Multiple programs and/or) W
300 -26800 M
215.6 0 32 (multithreaded programs running on a multiprocessor system sharing data cannot depend on) W
300 -28200 M
(write ordering.  They must use memory barrier instructions to order writes.) h
300 -30200 M
300 -32200 M
/Helvetica-BoldOblique-ISOLatin1 F 1200 o f
(Migration Aids) h
300 -33800 M
300 -35800 M
/Times-Roman-ISOLatin1 F 1200 o f
31.2 0 32 (Lint is an effective tool used to find argument mismatches and dubious assignments.  Programs) W
300 -37200 M
(written in ANSI C benefit from tighter control in these areas as well.) h
300 -39200 M
37.7 0 32 (64\255bit OSF products will include a 32\255bit to 64\255bit portability guide in addition to the ULTRIX) W
300 -40600 M
(to OSF migration guide.) h
300 -42600 M
300 -44600 M
/Helvetica-BoldOblique-ISOLatin1 F 1200 o f
(Conclusion) h
300 -46200 M
300 -48200 M
/Times-Roman-ISOLatin1 F 1200 o f
16.6 0 32 (Most 32\255bit OSF programs should compile and run normally on 64\255bit OSF systems.  Programs) W
300 -49600 M
44.2 0 32 (that do not pay attention to the proper use of datatypes my fail but can be easily fixed with mi\255) W
300 -51000 M
43.8 0 32 (nor changes.  The use of lint and/or ANSI C features will detect these abuses and the corrected) W
300 -52400 M
(program will be backwards source compatible.) h
300 -54400 M
79.6 0 32 (Programs that do not read or write data containing pointers or long variables will have a great) W
300 -55800 M
27.9 0 32 (deal of interoperability and are also likely to run unchanged.  Programs that do not have to pro\255) W
300 -57200 M
(duce or consume data for 32\255bit programs should run unchanged.) h
-7200 7200 T
R

S
7200 -68400 T
N
0 G
300 -1200 M
/Times-Roman-ISOLatin1 F 1000 o f
0.0 448.0 m
(1) h
0 -448.0 m
900 -1200 M
(longword is equivelent to the int datatype and quadword is equivelent to the long datatype) h
300 -3000 M
0.0 448.0 m
(2) h
0 -448.0 m
900 -3000 M
(I/O devices are defined as processors) h
-7200 68400 T
R

showpage
$P e

%%Page: 8 8
/$P a D
g N
0 79200 T
S
S
7200 -74700 T
N
0 G
22511 -1050 M
/Helvetica-ISOLatin1 $
/Helvetica & P
/Helvetica-ISOLatin1 F 1000 o f
(\255 ) h
(8) h
( \255) h
300 -2485 M
-7200 74700 T
R

S
N
7500 -73600 M
53700 -73600 L
S
100 w
0 c
0 j
2 i
0.00 G k
R
R

R
S
7200 -7200 T
N
0 G
300 -1200 M
/Times-Roman-ISOLatin1 $
/Times-Roman & P
/Times-Roman-ISOLatin1 F 1200 o f
67.2 0 32 (Programs that must deal with scalar data produced by 32\255bit programs may require minor data) W
300 -2600 M
102.9 0 32 (definition changes.  Programs that must deal with data containing 32\255bit pointers may require) W
300 -4000 M
(significantly more work.) h
300 -6000 M
300 -7400 M
300 -9400 M
300 -10836 M
-7200 7200 T
R

showpage
$P e

%%Trailer
$D restore
end % DEC_WRITE_dict
%%Pages: 8
%%DocumentFonts: Helvetica-Bold-ISOLatin1
%%+ Times-Roman-ISOLatin1
%%+ Times-Italic-ISOLatin1
%%+ Helvetica-ISOLatin1
%%+ Helvetica-BoldOblique-ISOLatin1
%%+ Symbol


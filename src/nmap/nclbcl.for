C+ NCLBCL.FOR
C  WNB 910809
C
C  Revisions:
C	WNB 931006	Text
C
	SUBROUTINE NCLBCL(CLAR3,CLAR4,BEM,MAP,MPHD,MDHJ)
C
C  Get a clean component
C
C  Result:
C	CALL NCLBCL( CLAR3_J:I, CLAR4_J:I,
C			BEM_E(-*:*,0:*):I, MAP_E(-*:*,-*:*):IO,
C			MPHD_D(0:*), MDHJ_J(0:*):IO)
C				Do clean of one component, using BEaM and MAP.
C				CLAR3 and CLAR4 are the map boundaries.
C				MPHD and MDHJ are the map and model headers.
C
C
C  Include files:
C
	INCLUDE 'WNG_DEF'
	INCLUDE 'MPH_O_DEF'		!MAP HEADER
	INCLUDE 'MDH_O_DEF'		!MODEL HEADER
	INCLUDE 'MDL_O_DEF'		!MODEL LINE
	INCLUDE 'NCL_DEF'	
C
C  Parameters:
C
C
C  Arguments:
C
	INTEGER CLAR3,CLAR4		!ARRAY BOUNDARIES
	REAL BEM(-CLAR3:CLAR3,0:CLAR4)	!BEAM
	REAL MAP(-CLAR3/2:CLAR3/2,-CLAR4/2:CLAR4/2) !MAP
	DOUBLE PRECISION MPHD(0:MPHHDL/8-1) !MAP HEADER
	INTEGER MDHJ(0:MDHHDL/4-1)	!MODEL HEADER
C
C  Function references:
C
C
C  Data declarations:
C
	INTEGER JC				!CLEAN AREA CNT
	INTEGER RG(0:1)				!SOURCE RANGE
	BYTE MDL(0:MDLHDL-1)			!MODEL LINE
	  INTEGER MDLJ(0:MDLHDL/4-1)
	  REAL MDLE(0:MDLHDL/4-1)
	  EQUIVALENCE (MDL,MDLJ,MDLE)
C-
	R0=CLFAC*MAP(CURMXP(1),CURMXP(2))	!NEW SRC
	CALL WNGMVZ(MDLHDL,MDL)			!EMPTY MODEL
	MDLE(MDL_I_E)=R0			!AMPLITUDE
	MDLE(MDL_L_E)=DPI2*(MPHD(MPH_SRA_D)*
	1		(CURMXP(1)+TAREA(0,0))+MPHD(MPH_SHR_D)) !L
	MDLE(MDL_M_E)=DPI2*(MPHD(MPH_SDEC_D)*
	1		(CURMXP(2)+TAREA(1,0))+MPHD(MPH_SHD_D)) !M
	MDLJ(MDL_ID_J)=3001+MDHJ(MDH_NSRC_J)	!ID
	MDL(MDL_TP_B)=MDLCLN_M			!CLEAN COMPONENT
	CALL WNGMV(MDLHDL,MDL,A_B(MDHJ(MDH_MODP_J)-A_OB+
	1		MDHJ(MDH_NSRC_J)*MDLHDL)) !SAVE SOURCE
	MDHJ(MDH_NSRC_J)=MDHJ(MDH_NSRC_J)+1	!COUNT SOURCE
	I1=0					!PRINT CODE
	IF (CMPLOG(1).NE.0) THEN
	  IF (MOD(MDHJ(MDH_NSRC_J)-1,CMPLOG(1)).EQ.0) I1=I1+F_T
	END IF
	IF (CMPLOG(2).NE.0) THEN
	  IF (MOD(MDHJ(MDH_NSRC_J)-1,CMPLOG(2)).EQ.0) I1=I1+F_P
	END IF
	IF (I1.NE.0) THEN
	  RG(0)=MDHJ(MDH_NSRC_J)		!SOURCE RANGE
	  RG(1)=RG(0)
	  CALL NMOPRM(I1,RG,MDL)		!PRINT SOURCE
	END IF
C
C CLEAN
C
	CURMAX=-1E20				!NEW MAX
	I4=CURMXP(1)				!SAVE OLD POS.
	I5=CURMXP(2)
	DO I=-TAREA(3,0)/2,TAREA(3,0)/2		!ALL LINES
	  J1=0					!START POINT
	  DO JC=1,NAREA				!ALL AREAS
	   IF (I+TAREA(1,0).GE.PAREA(2,JC,1) .AND.
	1		I+TAREA(1,0).LE.PAREA(3,JC,1)) THEN !LINE OK
	     J1=MAX(J1,PAREA(0,JC,1)-TAREA(0,1)) !START POINT
	     DO I1=J1-TAREA(2,0)/2,PAREA(1,JC,1)-TAREA(0,0) !ALL POINTS
	       I3=I1-I4				!BEAM L OFFSET
	       I2=I-I5				!BEAM M OFFSET
	       IF (I2.LT.0) THEN		!TAKE SYMMETRIC
		 I2=-I2
		 I3=-I3
	       END IF
	       MAP(I1,I)=MAP(I1,I)-R0*BEM(I3,I2) !CLEAN POINT
	       IF (CURMAX.LT.ABS(MAP(I1,I))) THEN !NEW MAX.
		 CURMAX=ABS(MAP(I1,I))
		 CURMXP(1)=I1
		 CURMXP(2)=I
	       END IF
	       J1=J1+1				!CNT POINT
	     END DO
	    END IF
	  END DO
	END DO
C
	RETURN
C
C
	END

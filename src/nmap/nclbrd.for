C+ NCLBRD.FOR
C  WNB 910809
C
C  Revisions:
C
	SUBROUTINE NCLBRD(CLAR3,CLAR4,BEM,MAP,MPHJ,APHJ)
C
C  Read beam and map
C
C  Result:
C	CALL NCLBRD( CLAR3_J:I, CLAR4_J:I,
C			BEM_E(-*:*,0:*):O, MAP_E(-*:*,-*:*):O,
C			MPHJ_J(0:*):I, APHJ_J(0:*):I)
C				Read beam and map into memory, using the map
C				and antenna pattern headers, and the
C				clean area borders.
C
C
C  PIN references:
C
C
C  Include files:
C
	INCLUDE 'WNG_DEF'
	INCLUDE 'MPH_O_DEF'		!MAP HEADER
	INCLUDE 'NCL_DEF'	
C
C  Parameters:
C
C
C  Arguments:
C
	INTEGER CLAR3,CLAR4		!ARRAY BOUNDARIES
	REAL BEM(-CLAR3:CLAR3,0:CLAR4)	!BEAM
	REAL MAP(-CLAR3/2:CLAR3/2,-CLAR4/2:CLAR4/2) !MAP
	INTEGER MPHJ(0:MPHHDL/4-1)	!MAP HEADER
	INTEGER APHJ(0:MPHHDL/4-1)	!AP HEADER
C
C  Function references:
C
	LOGICAL WNFRD			!READ DISK
C
C  Data declarations:
C
	INTEGER JC			!MULTIPLE AREA CNT
C-
C
C READ BEAM
C
	J=APHJ(MPH_NRA_J)			!LENGTH LINE
	J=APHJ(MPH_MDP_J)+LB_E*(J*APHJ(MPH_NDEC_J)/2+
	1		APHJ(MPH_NRA_J)/2-TAREA(2,0)) !OFFSET LINE 0
	DO I=0,TAREA(3,0)
	  J1=LB_E*(2*TAREA(2,0)+1)
	  IF (.NOT.WNFRD(FCAMAP,J1,BEM(-TAREA(2,0),I),J)) THEN
	    CALL WNCTXT(F_TP,'Read error beam')
	    CALL WNGEX
	  END IF
	  J=J+LB_E*APHJ(MPH_NRA_J)		!NEXT LINE
	END DO
	BEM(0,0)=BEM(0,0)+PRHAT			!SET PRUSSIAN HAT
C
C READ MAP
C
	CURMAX=-1E20				!INIT. MAX
	J=MPHJ(MPH_NRA_J)			!LENGTH LINE
	J=MPHJ(MPH_MDP_J)+LB_E*(J*(MPHJ(MPH_NDEC_J)/2+
	1		TAREA(2,1))+MPHJ(MPH_NRA_J)/2+TAREA(0,1))
	DO I=-TAREA(3,0)/2,TAREA(3,0)/2
	  J1=LB_E*TAREA(2,0)
	  IF (.NOT.WNFRD(FCAMAP,J1,MAP(-TAREA(2,0)/2,I),J)) THEN
	    CALL WNCTXT(F_TP,'Read error map')
	    CALL WNGEX
	  END IF
	  J=J+LB_E*MPHJ(MPH_NRA_J)		!NEXT LINE
	  J1=0					!START POINT
	  DO JC=1,NAREA				!ALL AREAS
	    IF (I+TAREA(1,0).GE.PAREA(2,JC,1) .AND.
	1			I+TAREA(1,0).LE.PAREA(3,JC,1)) THEN !LINE OK
	      J1=MAX(J1,PAREA(0,JC,1)-TAREA(0,1)) !START POINT
	      DO I1=J1-TAREA(2,0)/2,PAREA(1,JC,1)-TAREA(0,0) !ALL POINTS
	        IF (CURMAX.LT.ABS(MAP(I1,I))) THEN
		  CURMAX=ABS(MAP(I1,I))		!SET MAXIMUM
		  CURMXP(1)=I1
		  CURMXP(2)=I
	        END IF
	        J1=J1+1				!CNT POINT
	      END DO
	    END IF
	  END DO
	END DO
C
	RETURN
C
C
	END

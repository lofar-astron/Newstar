C+ NMADFT.FOR
C  WNB 910318
C
C  Revisions:
C
	SUBROUTINE NMADFT(N,CSD,UVD,APD)
C
C  Do DFT
C
C  Result:
C
C	CALL NMADFT (N_J:I,CSD_X(0:*,0:3):I,
C				UVD_E(0:1,0:*):I, APD_E(0:*):I)
C				Calculate DFT for selected polarisations.
C				 N is number of input points.
C				CSD the data, UVD the coordinates, APD the
C				weight.
C	CALL NMADF1		Output the maps.
C
C  Include files:
C
	INCLUDE 'WNG_DEF'
	INCLUDE 'STH_O_DEF'
	INCLUDE 'NMA_DEF'
C
C  Parameters:
C
C
C  Arguments:
C
	INTEGER N			!NUMBER OF POINTS
	COMPLEX CSD(0:STHIFR-1,0:3)	!DATA
	REAL UVD(0:1,0:*)		!U,V COORDINATES
	REAL APD(0:*)			!DATA WEIGHT
C
C  Function references:
C
C
C  Data declarations:
C
	REAL ARG			!DFT ANGLE
	INTEGER UOF			!OFFSET U
	INTEGER VOF			!OFFSET V
	INTEGER LU			!LENGTH LINE
	REAL RPI1,RPI2			!WORK
	COMPLEX CARG,CDAT
	INTEGER NP			!POL. COUNT
	INTEGER BFPE			!BUFFER OFFSET
	INTEGER I6
C-
C
C PREPARE
C
	UOF=(FTSIZ(0)/2)
	VOF=(FTSIZ(1)/2)			!OFFSETS IN MAP
	I4=2*UOF				!HIGHEST COORD.
	I5=2*VOF
	LU=I4+1					!LENGTH LINE
	RPI1=PI2/(I4+1)
	RPI2=PI2/(I5+1)
C
	DO NP=0,NPOL-1				!ALL POLARISATIONS
	  BFPE=(DFTBFA(NP)-A_OB)/LB_E		!BUFFER POINTER
	  DO I1=0,N-1				!DO ALL DATA POINTS
	    R0=APD(I1)				!WEIGHT
	    IF (R0.NE.0) THEN			!DO
	      DFTWT(NP)=DFTWT(NP)+ABS(R0)	!TOTAL WEIGHT
	      DO I2=0,I4
	        R1=RPI1*(I2-UOF)
	        IF (I2.GE.UOF) THEN
	          I6=VOF-1
	        ELSE
	          I6=VOF
	        END IF
	        DO I3=0,I6
	          ARG=UVD(0,I1)*R1+UVD(1,I1)*RPI2*(I3-VOF)
	          CARG=CMPLX(COS(ARG),SIN(ARG))
	          CDAT=CSD(I1,NP)
		  A_E(BFPE+I3*LU+I2)=A_E(BFPE+I3*LU+I2)+
	1			R0*REAL(CDAT*CONJG(CARG))
		  A_E(BFPE+(I5-I3)*LU+I4-I2)=A_E(BFPE+(I5-I3)*LU+I4-I2)+
	1			R0*REAL(CDAT*CARG)
	        END DO
	      END DO
	      A_E(BFPE+VOF*LU+UOF)=A_E(BFPE+VOF*LU+UOF)+
	1			R0*REAL(CDAT)	!CORRECT CENTRE
	    END IF
	  END DO
	END DO
C
	RETURN
C
C SHOW RESULT
C
	ENTRY NMADF1
C
	UOF=FTSIZ(0)/2
	VOF=FTSIZ(1)/2
	LU=I4+1					!LENGTH LINE
	DO NP=0,NPOL-1				!ALL POLARISATIONS
	  BFPE=(DFTBFA(NP)-A_OB)/LB_E		!BUFFER POINTER
	  CALL WNCTXT(F_TP,' ')
	  DO I=0,2*VOF
	    DO I1=0,2*UOF			!NORMALISE
	      A_E(BFPE+I*LU+I1)=A_E(BFPE+I*LU+I1)/DFTWT(NP)
	    END DO
	    CALL WNCTXT(F_TP,'!80$9Q1\!8$#E7.1',
	1		2*UOF+1,A_E(BFPE+I*LU))
	  END DO
	  CALL WNCTXT(F_TP,' ')
	  CALL WNGFVA(LB_E*((FTSIZ(0)/2)*2+1)*((FTSIZ(1)/2)*2+1),
	1		DFTBFA(NP))		!RELEASE BUFFER
	END DO
C
	RETURN
C
C
	END

C+ NGCCOP.FOR
C  WNB 920827
C
C  Revisions:
C	HjV 930423	Change name of some keywords
C	CMV 931220      Pass FCA of input file to WNDXLP and WNDSTA/Q
C       WNB 940617      Correct data copy buffer pointer
C	JPH 940823	Include input TYP in output TYP
C			NGCSPH --> NGCSPL
C
C
	SUBROUTINE NGCCOP
C
C  Copy plots
C
C  Result:
C
C	CALL NGCCOP			Copy plots
C
C
C  Pin references:
C
C	OUTPUT_NGF_NODE	Output node
C	NGF_SETS	Plots to do
C
C  Include files:
C
	INCLUDE 'WNG_DEF'
	INCLUDE 'GFH_O_DEF'		!GENERAL FILE HEADER
	INCLUDE 'SGH_O_DEF'		!SUB-GROUP HEADER
	INCLUDE 'NGF_O_DEF'		!PLOT HEADER
	INCLUDE 'NGC_DEF'
C
C  Parameters:
C
C
C  Arguments:
C
C
C  Function references:
C
	LOGICAL WNDSTA			!ASK SETS
	LOGICAL WNDNOD			!ASK NODE
	LOGICAL WNDLNF,WNDLNG,WNDLNK	!LINK DATA SET
	LOGICAL WNFOP			!OPEN FILE
	LOGICAL WNFRD			!READ DISK
	LOGICAL WNFWR			!WRITE DISK
	LOGICAL WNGGVA			!GET MEMORY
	INTEGER WNFEOF			!EOF POINTER
	CHARACTER*32 WNTTSG		!SHOW SET
	LOGICAL NGCSTG			!GET A PLOT
C
C  Data declarations:
C
	INTEGER NDONE			! cuts-done counter
	INTEGER NGFP			!PLOT HEADER PTR
	INTEGER SNAM(0:7)		!PLOT NAME
	INTEGER SGNR1(0:7)		!OUTPUT NAME
	INTEGER SGPH1(0:7)		!OUTPUT POINTER
	INTEGER BUFAD			!DATA BUFFER ADDRESS
	INTEGER BLEN			!DATA BUFFER LENGTH
	LOGICAL ILTEST			!INDEFINITE LOOP TEST
	LOGICAL LFIRST			!FIRST LOOP
	BYTE NGF(0:NGFHDL-1)		!PLOT HEADER
	  INTEGER*2 NGFI(0:NGFHDL/2-1)
	  INTEGER NGFJ(0:NGFHDL/4-1)
	  REAL NGFE(0:NGFHDL/4-1)
	  EQUIVALENCE (NGF,NGFI,NGFJ,NGFE)
	CHARACTER*40 TX40		! output TYP buffer
	CHARACTER*8 HSTR		! input TYP buffer
C-
C
C GET OUTPUT NODE
C
	LFIRST=.TRUE.				!FIRST OUTPUT
 10	CONTINUE
	FILIN='*'				!MAKE SURE NO CLOSE
	IF (LFIRST) THEN
	  IF (.NOT.WNDNOD('OUTPUT_NGF_NODE','*','NGF','U',
	1		NODIN,FILIN)) THEN
 13	    CONTINUE
	    IF (E_C.EQ.DWC_ENDOFLOOP) THEN
	      FILIN='*'
	      GOTO 900				!READY
	    END IF
	    GOTO 10
	  END IF
	ELSE
	  IF (.NOT.WNDNOD('OUTPUT_NGF_NODE','""','NGF','U',
	1		NODIN,FILIN)) GOTO 13
	END IF
	IF (E_C.EQ.DWC_NULLVALUE) THEN
	  FILIN='*'
	  GOTO 900				!READY
	END IF
	IF (E_C.EQ.DWC_WILDCARD) THEN
	  FILIN='*'				!INDICATE INPUT
	  NODIN='*'
	  FCAIN=FCAOUT
	ELSE
	  IF (.NOT.WNFOP(FCAIN,FILIN,'U')) THEN
	    CALL WNCTXT(F_TP,'!/Cannot open output file')
	    GOTO 10
	  END IF
	END IF
C
C GET PLOTS
C
 11	CONTINUE
	IF (.NOT.WNDSTA('NGF_SETS',MXNPLT,SETS(0,0),FCAOUT)) THEN
 12	  CONTINUE
	  IF (FILIN.NE.'*') CALL WNFCL(FCAIN)	!CLOSE OUTPUT
	  GOTO 10				!GET PLOTS TO DO
	END IF
	ILTEST=.TRUE.				!INDEFINITE LOOP TEST
	IF (FILIN.NE.'*') THEN			!CREATE NEW OUTPUT
	  IF (.NOT.WNDLNG(GFH_LINKG_1,0,SGH_GROUPN_1,FCAIN,
	1		SGPH1(0),SGNR1(0))) THEN !CREATE JOB SET
	    CALL WNCTXT(F_TP,'!/Cannot create sub-group')
	    GOTO 12				!REPEAT
	  END IF
	ELSE
	  SGNR1(0)=SGNR(0)			!COPY
	  SGPH1(0)=SGPH(0)
	END IF
C
C DO FOR ALL PLOTS
C
	NDONE=0
	DO WHILE (NGCSTG(FCAOUT,SETS,NGF,NGFP,SNAM))
	  LFIRST=.FALSE.			!AT LEAST ONE COPIED
	  CALL WNDSTI(FCAOUT,SNAM)		!MAKE PROPER NAME
 21 	  CONTINUE
	  IF (FILIN.EQ.'*' .AND. SNAM(0).GE.SGNR(0)) THEN !CAN BE INFINITE LOOP
	    IF (.NOT.ILTEST) GOTO 12		!INFINITE LOOP
	    IF (.NOT.WNDLNG(GFH_LINKG_1,0,SGH_GROUPN_1,FCAOUT,
	1		SGPH(0),SGNR(0))) THEN	!CREATE JOB SET
	      CALL WNCTXT(F_TP,'!/Cannot create sub-group')
	      GOTO 12				!REPEAT
	    END IF
	    ILTEST=.FALSE.			!CAN BE LOOP
	    SGNR1(0)=SGNR(0)			!COPY
	    SGPH1(0)=SGPH(0)
	    GOTO 21
	  END IF
C
C ACTION
C
 30	  CONTINUE
	  BLEN=2*LB_X*NGFJ(NGF_SCN_J)		!LENGTH DATA BUFFER
	  IF (.NOT.WNGGVA(BLEN,BUFAD)) THEN
	    CALL WNCTXT(F_TP,'!/Cannot get file databuffer')
	    GOTO 900
	  END IF
	  BUFAD=(BUFAD-A_OB)/LB_X
	  IF (.NOT.WNFRD(FCAOUT,LB_X*NGFJ(NGF_SCN_J),A_X(BUFAD),
	1		NGFJ(NGF_DPT_J))) THEN	!READ DATA
 31	    CONTINUE
	    CALL WNCTXT(F_TP,'!/Error reading/writing plot data')
 32	    CONTINUE
	    CALL WNGFVA(BLEN,BUFAD*LB_X+A_OB)	!FREE BUFFER
	    GOTO 12
	  END IF
C
C COPY
C
	  CALL WNDSTI(FCAOUT,SNAM)		!MAKE PROPER NAME

	  CALL WNGMTS(8, NGF(NGF_TYP_1), HSTR)
	  DO I=1,8
	    IF (HSTR(I:I).LT.'A' .OR. HSTR(I:I).GT.'Z') GOTO 511
	  ENDDO
511	  CONTINUE
	  I=I-1

	  CALL WNCTXS(TX40,'!AS COPY !AS !AS',
	1	HSTR(1:I),NODOUT,WNTTSG(SNAM,0))	!DATA TYPE
	  CALL WNGMFS(NGF_TYP_N,TX40,NGF(NGF_TYP_1))
	  IF (.NOT.WNDLNF(SGPH1(0)+SGH_LINKG_1,SNAM(1),
	1		SGH_GROUPN_1,FCAIN,SGPH1(1),SGNR1(1))) THEN !LINK
 51	    CONTINUE
	    CALL WNCTXT(F_TP,'!/Cannot link sub-group')
	    GOTO 32
	  END IF
	  IF (.NOT.WNDLNF(SGPH1(1)+SGH_LINKG_1,SNAM(2),
	1		SGH_GROUPN_1,FCAIN,SGPH1(2),SGNR1(2))) GOTO 51
	  IF (.NOT.WNDLNF(SGPH1(2)+SGH_LINKG_1,SNAM(3),
	1		SGH_GROUPN_1,FCAIN,SGPH1(3),SGNR1(3))) GOTO 51
	  IF (.NOT.WNDLNF(SGPH1(3)+SGH_LINKG_1,SNAM(4),
	1		SGH_GROUPN_1,FCAIN,SGPH1(4),SGNR1(4))) GOTO 51
	  J=WNFEOF(FCAIN)				!OUTPUT POINTER
	  NGFJ(NGF_DPT_J)=J+NGFHDL		!DATA POINTER
	  IF (.NOT.WNFWR(FCAIN,NGFHDL,NGF,J)) GOTO 31 !WRITE HEADER
	  IF (.NOT.WNFWR(FCAIN,LB_X*NGFJ(NGF_SCN_J),
	1		A_X(BUFAD),J+NGFHDL)) GOTO 31 !DATA
	  IF (.NOT.WNDLNK(GFH_LINK_1,J,
	1		NGF_SETN_1,FCAIN)) GOTO 51 !LINK DATA
	  IF (.NOT.WNDLNG(SGPH1(4)+SGH_LINKG_1,J,
	1		SGH_GROUPN_1,FCAIN,SGPH1(5),SGNR1(5))) GOTO 51 !INDEX
	  NDONE=NDONE+1
	  IF (MOD(NDONE,100).EQ.0) CALL NGCSPL(SGNR1,NGF,NDONE)	! sign of life
C
	  CALL WNGFVA(BLEN,BUFAD*LB_X+A_OB)	!FREE BUFFER
 20	  CONTINUE
	ENDDO					!NEXT PLOT
	CALL WNCTXT(F_TP,'!UJ cuts copied',NDONE)
	GOTO 12
C
C READY
C
 900	CONTINUE
	IF (FILIN.NE.'*') CALL WNFCL(FCAIN)	!CLOSE OUTPUT
	FCAIN=0					!MAKE SURE
C
	RETURN
C
C
	END

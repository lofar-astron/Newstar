C+ NGIDOP.FOR
C  WNB 930514
C
C  Revisions:
C	CMV 931112	Changed call to N_GDI_OPEN
C	CMV 940218	More info if fails
C
	LOGICAL FUNCTION NGIDOP(GID)
C
C  Open/close GIDS
C
C  Result:
C
C       NGIDOP_L = NGIDOP( GID_J:O)	will open GIDS and return the GID ID
C	NGIDCL_L = NGIDCL( GID_J:I)	will close the GIDS with ID GID
C
C  Include files:
C
	INCLUDE 'WNG_DEF'
C
C  Parameters:
C
C
C  Arguments:
C
	INTEGER GID		!DISPLAY ID
C
C  Entry points:
C
	LOGICAL NGIDCL			!CLOSE GIDS DISPLAY
C
C  Function references:
C
	LOGICAL WNDDIS			!GET DISPLAY
	INTEGER WNCALN			!STRING LENGTH
	INTEGER N_GDI_OPEN		!OPEN GIDS
	INTEGER N_GDI_CLOSE		!CLOSE GIDS
C
C  Data declarations:
C
	CHARACTER*24 DISP		!DISPLAY
	CHARACTER*128 CTMP		!TEMP FOR PRINTING ERRORS
	INTEGER FCAT			!TEMP IN CASE OF ERRORS
C-
C
C NGIDOP
C
	JS=WNDDIS(.TRUE.,DISP)			!GET DISPLAY
	GID=N_GDI_OPEN(DISP(:WNCALN(DISP)))	!OPEN DISPLAY
	IF (GID.LT.0) THEN
	  NGIDOP=.FALSE.
	  CALL WNCTXT(F_TP,'Error opening Gids display')
C
	  CALL WNGSEG('DISPLAY',CTMP)
	  I2=WNCALN(CTMP)
	  CALL WNCTXT(F_TP,'DISPLAY:   !AS',CTMP(:I2))
C
	  CALL WNGSEG(DISP,CTMP)
	  I1=WNCALN(DISP)
	  I2=WNCALN(CTMP)
	  CALL WNCTXT(F_TP,'GIDS file: !AS=!AS',DISP(:I1),CTMP(:I2))
	  IF (CTMP.NE.' ') THEN
	     CALL WNGLUN(J1)
	     OPEN(UNIT=J1,FILE=CTMP(:I2),STATUS='OLD',ERR=11)
	     CALL WNCTXT(F_TP,
	1	   'File exists, delete and try again...')
	     CLOSE(UNIT=J1,STATUS='DELETE',ERR=12)
	     GID=N_GDI_OPEN(DISP(:WNCALN(DISP)))	!OPEN DISPLAY AGAIN
  12	     CONTINUE
	     IF (GID.LT.0) THEN
	        CALL WNCTXT(F_TP,'Did not help, contact NFRA')
	     ELSE
	        CALL WNCTXT(F_TP,'Hurray, it worked fine now')
	        NGIDOP=.TRUE.
	     END IF
  11	     CONTINUE
	     CALL WNGLUF(J1)
	  END IF
	ELSE
	  NGIDOP=.TRUE.
	END IF
C
	RETURN
C
C NGIDCL
C
	ENTRY NGIDCL(GID)
C
	I=N_GDI_CLOSE(GID)
	IF (I.LT.0) THEN
	  NGIDCL=.FALSE.
	ELSE
	  NGIDCL=.TRUE.
	END IF
C
	RETURN
C
C
	END

C+ NCACCP.FOR
C  WNB 921217
C
C  Revisions:
C	WNB 930606	Remove INCLUDE SCH_O
C
	SUBROUTINE NCACCP(CSOL,CME)
C
C  Set interpolated calibrator corrections on others sets
C
C  Result:
C
C	CALL NCACCP( CSOL_X(0:*,0:1):O, CME_X(0:*,0:1):O)
C			will set interpolated calibrator corrections
C
C  Include files:
C
	INCLUDE 'WNG_DEF'
	INCLUDE 'NCA_DEF'
	INCLUDE 'STH_O_DEF'			!SET HEADER
C
C  Parameters:
C
	INTEGER NEINIT				!# TABLE ENTRIES INITIAL
	  PARAMETER (NEINIT=1024)
C
C  Arguments:
C
	REAL CSOL(0:1,0:STHTEL-1,0:1)		!AVERAGE ERRORS G,P TEL X,Y
	REAL CME(0:1,0:STHTEL-1,0:1)		!AND M.E.
C
C  Function references:
C
	LOGICAL NSCSTL				!GET A SET
	LOGICAL WNGGVA				!GET MEMORY
C
C  Data declarations:
C
	INTEGER NELEN				!TABLE LENGTH
	INTEGER NENR				!# IN TABLE
	INTEGER ENLEN,ENLJ,ENLD			!ENTRY LENGTH
	INTEGER TABAR				!TABLE AREA
	INTEGER TABD,TABJ			!TABLE POINTERS
	INTEGER STHP,STHPI(0:1)			!POINTER TO SET HEADER
	INTEGER SETNAM(0:7)			!FULL SET NAME
	BYTE STH(0:STHHDL-1)			!SET HEADER
	  INTEGER*2 STHI(0:STHHDL/2-1)
	  INTEGER STHJ(0:STHHDL/4-1)
	  REAL STHE(0:STHHDL/4-1)
	  REAL*8 STHD(0:STHHDL/8-1)
	  EQUIVALENCE(STH,STHI,STHJ,STHE,STHD)
C-
C
C INIT
C
	ENLEN=LB_D+2*LB_J				!ENTRY LENGTH
	ENLJ=ENLEN/LB_J
	ENLD=ENLEN/LB_D
	NELEN=0						!START TABLE LENGTH
	NENR=0						!NO ENTRIES
	TABAR=0						!NO TABLE
C
C SET UP TABLE
C
 10	CONTINUE
	DO WHILE(NSCSTL(FCAINP,SETINP,STH(0),STHP,SETNAM,LPOFF)) !NEXT SET
	  CALL WNDSTI(FCAINP,SETNAM)			!MAKE SURE PROPER NAME
	  D0=STHD(STH_MJD_D)+(STHJ(STH_SCN_J)-1)*STHE(STH_HAI_E)*
	1		STHD(STH_UTST_D)		!MIDDLE OF OBS
	  J0=SETNAM(3)					!CHANNEL
	  IF (NENR.GE.NELEN) THEN			!NO TABLE SPACE
	    IF (.NOT.WNGGVA((NELEN+NEINIT)*ENLEN,J1)) THEN !NEW TABLE
	      CALL WNCTXT(F_TP,'No memory for calibrator table')
	      CALL WNGEX				!STOP
	    END IF
	    IF (TABAR.NE.0) THEN
	      DO I=0,NENR-1				!MOVE TABLE
	        CALL WNGMV(ENLEN,A_B(TABAR-A_OB+ENLEN*I),
	1		A_B(J1-A_OB+ENLEN*I))
	      END DO
	      CALL WNGFVA(NELEN*ENLEN,TABAR)		!FREE OLD AREA
	    END IF
	    TABAR=J1					!NEW AREA
	    TABJ=(TABAR-A_OB+LB_D)/LB_J			!TABLE J OFFSET
	    TABD=(TABAR-A_OB)/LB_D			!TABLE D OFFSET
	    NELEN=NELEN+NEINIT				!NEW LENGTH
	  END IF
	  DO I=0,NENR					!FIND CHANNEL
	    IF (I.EQ.NENR .OR.
	1		A_J(TABJ+ENLJ*I).GT.J0 .OR.
	1		(A_J(TABJ+ENLJ*I).EQ.J0 .AND.
	1		A_D(TABD+ENLD*I).GT.D0)) THEN	!INSERT HERE
	      DO I1=NENR-1,I,-1				!CREATE SPACE
	        CALL WNGMV(ENLEN,A_D(TABD+ENLD*I1),
	1		A_D(TABD+ENLD*(I1+1)))
	      END DO
	      A_D(TABD+ENLD*I)=D0			!SET TIME
	      A_J(TABJ+ENLJ*I)=J0			!SET CHANNEL
	      A_J(TABJ+ENLJ*I+1)=STHP			!SET SET HEADER PTR
	      NENR=NENR+1				!COUNT ENTRY
	    END IF
	  END DO
	END DO						!NEXT INPUT SET
C
C DO ALL OUTPUT SETS
C
	DO WHILE(NSCSTL(FCAOUT,SETS,STH(0),STHP,SETNAM,LPOFF)) !NEXT SET
	  CALL WNDSTI(FCAINP,SETNAM)			!MAKE SURE PROPER NAME
	  D0=STHD(STH_MJD_D)+(STHJ(STH_SCN_J)-1)*STHE(STH_HAI_E)*
	1		STHD(STH_UTST_D)		!MIDDLE OF OBS
	  J0=SETNAM(3)					!CHANNEL
	  J1=-1						!NO CHANNEL
	  DO I=0,NENR-1					!FIND IF CHANNEL PRESENT
	    IF (A_J(TABJ+ENLJ*I).EQ.0 .AND. J1.LT.0) J1=0 !CHANNEL 0 PRESENT
	    IF (A_J(TABJ+ENLJ*I).EQ.J0) THEN		!FOUND CHANNEL
	      J1=J0
	      GOTO 20
	    END IF
	  END DO
 20	  CONTINUE
	  DO I=0,1
	    STHPI(I)=0					!SET NONE FOUND
	  END DO
	  IF (J1.GE.0) THEN				!FIND TIME
	    DO I=0,NENR					!FIND TIME
	      IF (I.EQ.NENR .OR.
	1		A_J(TABJ+ENLJ*I).GT.J1 .OR.
	1		(A_J(TABJ+ENLJ*I).EQ.J1 .AND.
	1		A_D(TABD+ENLD*I).GT.D0)) THEN	!FOUND BEYOND
	        IF (I.LT.NENR .AND. A_J(TABJ+ENLJ*I).EQ.J1)
	1		STHPI(1)=A_J(TABJ+ENLJ*I+1)	!BEYOND STHP
		IF (I.GT.0 .AND. A_J(TABJ+ENLJ*(I-1)).EQ.J1)
	1		STHPI(0)=A_J(TABJ+ENLJ*(I-1)+1)	!BEFORE STHP
		GOTO 21					!READY WITH CHECK
	      END IF
	    END DO
 21	    CONTINUE
	  ENDIF
	  CALL NCACL1(CSOL,CME,2,STHPI)			!CALUCULATE AVERAGES
	  DO I3=0,1					!X,Y
	    DO I2=0,STHTEL-1				!EXTERNAL FORMAT
	      PCGAN(I2,I3)=EXP(CSOL(0,I2,I3))		!GAIN
	      PCPHS(I2,I3)=CSOL(1,I2,I3)*DEG		!PHASE
	    END DO
	  END DO
	  CALL NCAST1(STHP)				!SET AVERAGES
	END DO						!NEXT SET
C
C READY
C
	IF (TABAR.NE.0) CALL WNGFVA(NELEN*ENLEN,TABAR)	!FREE TABLE
C
	RETURN						!READY
C
C
	END

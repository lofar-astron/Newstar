C+ NCADAT.FOR
C  WNB 900306
C
C  Revisions:
C	WNB 910621	Add loops
C	WNB 910812	Add ALIGN
C	WNB 910813	Add copy
C	WNB 910820	Add refraction, extinction, Faraday rotation
C	WNB 910826	Add retainment of parameters typed
C	WNB 910827	Add QDETAILS
C	WNB 910913	Change loops
C	WNB 910923	Add POLAR SET,EDIT,COPY
C	WNB 910930	Loops in POLAR COPY
C	WNB 910930	Add VZERO
C	WNB 911007	Default no complex for redundancy
C	WNB 911009	Add SET RENORM option
C	HjV 920520	HP does not allow extended source lines
C	WNB 921104	Full HA range
C	WNB 921120	Add HA_INTEGRATION
C	WNB 921217	Add CCOPY
C	HjV 930423	Change name of some keywords
C	WNB 930602	Add IREF, CLK
C	WNB 930603	Add POLE, DX, DY, DZ, FREQ setting
C	WNB 930614	Set polarisation to do for POLE, ...
C	WNB 930617	Add SET SHIFT
C	WNB 930619	Typo
C	WNB 930825	New polarisation selection
C	WNB 930826	New HA range
C	CMV 930830	Change decalration NSCPLS (LOGICAL iso. INTEGER)
C	HjV 930914	NSCIFS is now a function iso. a subroutine
C	CMV 931027	Some extra output
C	WNB 931123	Use RIN(1), (2) for complex loops
C	WNB 931126	Add COMPLEX_ONLY
C	CMV 931210	Add 'SCN_LOOPS' argument to WNDXLP
C	CMV 931220	Pass FCA of input file to WNDXLP and WNDSTA/Q
C	CMV 940214	SOLVE and COMPLEX before QDETAILS
C	CMV 940223	Add DSHIFT for differential shifts
C	CMV 940225	Enable default model file (use NMODAW)
C	CMV 940228	Default no Amp solution if 'Unknown flux' set in MDL
C	CMV 940331	Select telescopes to copy corrections for
C	CMV 940428	Option INIT added for SET
C	CMV 940429	Option IFR en MIFR added to SET, some added to ZERO
C	CMV 940503	Keyword CAL_EQUAL added (not yet used)
C	CMV 940513	Add some keywords to list of PIN references
C	CMV 940518	Add selection of IFRs to SET INIT
C	CMV 940711	Initialise TELS array always
C	JPH 940909	WNDPOH calls
C			For telescope polarisation, set XY as default, call
C			 NSCPLS with XY_P default
C			Remove defaults for SHOW_LEVEL (are defined in .psc)
C	CMV 940927	Reorganised SET options, add SET OTHER MULTIPLY 
C	JPH 940928	Help for NSCPLS overrides .ppd help
C	JPH 941214	WNFCL before all WNDNOD.
C			Straighten GOTO's on # parameter input 
C	JPH 950124	WNDPOH texts. Merge with CMV940927
C	CMV 950131	Uncomment lines in which STH was read (used to 
C			construct default model name later)
C	CMV 950202	Limits for gains parametrised and changed
C	CMV 941214	Do not create non-existing SCN files
C	CMV 940220	Lower lower-limit for gains
C       HjV 950609	For REDUN: ask CIFRS (interf. which should get MIFR 
C			 correction)
C       WNB 950614	Ask if MIFR wanted; more complex loops default
C	HjV 950623	Add option ICOPY for SET_OPTION (Copy MIFR-corrections)
C	CMV 960123	Add message before NMODAV call
C	JPH 960801	Replace function codes with legible ones
C	JPH 960802	Restore CCOPY function (at some time accidentally
C			 replaced by COPY)
C	WNB 981022	Added loops for SET--INIT
C	CMV 030101	Add CALCHAN for linear combination in fiddle
C       WNB 080711      Add SETINVERT option
C
C
	SUBROUTINE NCADAT
C
C  Get NCALIB program parameters
C
C  Result:
C
C	CALL NCADAT	will ask and set all program parameters
C
C  PIN references:
C
C	OPTION
C	POLAR_OPTION
C	SET_OPTION
C	SCN_SETS
C	USE_SCN_SETS
C	POLARISATION
C	SCN_NODE
C	USE_SCN_NODE
C	MWEIGHT_TYPE
C	MWEIGHT_DATA
C	ALIGN_OPTION
C	FORCE_FREEDOM
C	GAIN_FREEDOM
C	PHASE_FREEDOM
C	GAIN_NORM
C	PHASE_NORM
C	HA_INTEGRATION
C	SELECT_IFRS
C	SHOW_LEVEL
C	ZERO
C       INVERT
C	GAIN_X
C	PHASE_X
C	GAIN_Y
C	PHASE_Y
C	GAIN_NORM
C	PHASE_NORM
C	IFR_XX/XY/YX/YY
C	GAIN_XX/XY/YX/YY
C	PHASE_XX/XY/YX/YY
C	EXTINCTION
C	REFRACTION
C	CLOCK_CORR
C	SHIFT
C	DSHIFT
C	FARADAY_FILE
C	IREFRACT_FILE
C	BASEL_POLE
C	BASEL_DX
C	BASEL_DY
C	BASEL_DZ
C	FREQ_CORR
C	QDETAILS
C	BASEL_CHECK
C	WEIGHT_MIN
C	SOLVE
C	COMPLEX
C	COMPLEX_ONLY
C	FORCE_PHASE
C	CONTINUITY
C	CHECKS
C	CAL_EQUAL
C
C  Include files:
C
	INCLUDE 'WNG_DEF'
	INCLUDE 'CBITS_DEF'
	INCLUDE 'STH_O_DEF'		!SET HEADER
	INCLUDE 'NCA_DEF'
C
C  Parameters:
C
	REAL*4 GANMIN,GANMAX		!RANGE FOR MANUAL GAINS
	  PARAMETER(GANMIN=0.0001)
	  PARAMETER(GANMAX=5000.)
C
C  Arguments:
C
C
C  Function references:
C
	INTEGER WNCALN			!LENGTH STRING
	LOGICAL WNDPAR			!GET DWARF PARAMETER
	LOGICAL WNDNOD			!GET NODE NAME
	LOGICAL WNDNOC			!CHANGE MODE TO UPDATE
	LOGICAL WNDXLP			!GET LOOP PARAMETERS
	LOGICAL WNFOP			!OPEN FILE
	LOGICAL WNDSTQ			!ASK SETS
	LOGICAL NSCPLS			!ASK POLARISATIONS
	LOGICAL NSCHAS			!SELECT HA
	LOGICAL NSCIFS			!Select/deselect interferometers
	LOGICAL NSCTL1			!Select/deselect telescopes
	LOGICAL NSCSTG			!Read sector header
C
C  Data declarations:
C
	INTEGER ARJ(0:1)		!TEST DATA
	CHARACTER*24 MWTP,CMWTP		!WEIGHT TYPE
	INTEGER CIFR			!CHECK TYPE IFRS
	CHARACTER*24 SUBOPT		!SUB OPTION
	  CHARACTER*3 SUBOP3
	  EQUIVALENCE (SUBOPT,SUBOP3)
	CHARACTER*24 SELOPT		!ALIGN OPTION
	CHARACTER*1 PCTP(0:1)		!PCORR TYPE
	  DATA PCTP/'X','Y'/
	CHARACTER*2 PLTP(0:3)		!IFR COR. POLARISATIONS
	  DATA PLTP/'XX','XY','YX','YY'/
	INTEGER PLFL(0:3)
	  DATA PLFL/XX_P,XY_P,YX_P,YY_P/
C
	BYTE BB1
	BYTE BB2(0:1)
	REAL RBUF(2)			!BUFFER FOR IFR CORRECTIONS
	INTEGER STHP                    !SET POINTER
	INTEGER SETNAM(0:7)		!SET NAME
	BYTE STH(0:STH__L-1)		!SET HEADER
C-
C
C SET DEFAULTS
C
	IF (OPT(1:2).EQ.'PD') GOTO 50		!ASSUME MORE POLAR.
	IF (OPT(1:2).EQ.'PV') GOTO 110		!ASSUME MORE VZERO
	NODOUT=' '				!ASSUME NO NODE GIVEN
	NODINP='*'
	SETS(0,0)=0				!NO SETS
	SETINP(0,0)=0
	SPOL=XYX_M				!POL.
	CMWTP='STEP'				!WEIGHT TYPE
	MWGTD(0)=0				!WEIGTHING DATA
	MWGTD(1)=100000
	MWGTD(2)=1
	SELOPT='SELFCAL'			!SUB-OPTION
	FORFRE(0)=.FALSE.			!FORCE FREEDOM
	FORFRE(1)=.FALSE.
	DO I=0,STHTEL-1				!FREEDOMS
	  FREGPH(I,0)=1
	  FREGPH(I,1)=1
	END DO
	HARAN(1)=-179.99/360.			!HA RANGE
	HARAN(2)=+179.99/360.
	HAINT=0					!HA INTEGRATION
	DO I=0,STHTEL-1				!SELECT ALL TELS
	  TELS(I)=.TRUE.
	END DO
	CIFR=2					!START IFRS
	ARJ(0)=1				!TYPE/PRINT DEFAULTS
	ARJ(1)=2
	CFEXT(0)=+0.00557			!SET DEFAULTS EXTINCTION
	CFEXT(1)=+0.00461
	CFEXT(2)=-0.000544
	CFREF(0)=+0.00031			!SET DEFAULTS REFRACTION
	CFREF(1)=+0
	CFREF(2)=+0
	DO I=0,1				!EMPTY CORRECTIONS
	  DO I1=0,STHTEL-1
	    PCGAN(I1,I)=1
	    PCPHS(I1,I)=0
	  END DO
	END DO
	BASDEV=0.5				!DETAILS
	WGTMIN=.01
	APSOL(0)=.TRUE.
	APSOL(1)=.TRUE.
	XSOLVE=.TRUE.
	XOSOL=.FALSE.
	DO I=0,STHTEL-1
	  FORPER(I)=0
	END DO
	CSOLVE=.TRUE.
	RIN(1)=20				!COMPLEX ITERATION COUNT
	RIN(2)=1E-3				!COMPLEX CHECK LEVEL
	RIN(3)=3				!M.E. TEST
C
C GET OPTION
C
	CALL WNCTXT(F_T,' ')
 100	CONTINUE
	IF (.NOT.WNDPAR('OPTION',OPTION,LEN(OPTION),J0,'QUIT')) THEN
	  OPTION='QUIT'				!ASSUME END
	ELSE IF (J0.LE.0) THEN
	  OPTION='QUIT'				!ASSUME END
	END IF
	IF (OPT.EQ.'QUI') RETURN		!READY
	IF (OPT.EQ.'RED') THEN			!REDUNDANCY
	  GOTO 10
	ELSE IF (OPT.EQ.'POL') THEN		!POLAR. CORRECTIONS
	  GOTO 50
	ELSE IF (OPT.EQ.'SET') THEN		!SET CORRECTIONS
	  GOTO 20
	ELSE IF (OPT.EQ.'SHO') THEN		!LIST CORRECTIONS
	  GOTO 70
	END IF
	OPTION='QUIT'				!UNKNOWN
C
	RETURN
C
C REDUNDANCY *******************************************************************
C
 10	CONTINUE
 11	CONTINUE
	CALL WNDPOH('SCN file to be processed', ' ',
	1'The SCN file from which your input data will be read and the derived
	1 |corrections written') 
	CALL WNFCL(FCAOUT)
	IF (.NOT.WNDNOD('SCN_NODE',NODOUT,'SCN','R',NODOUT,FILOUT)) THEN
	  IF (E_C.EQ.DWC_ENDOFLOOP) GOTO 100	!RETRY option
	  GOTO 11				!REPEAT
	ELSE IF (E_C.EQ.DWC_NULLVALUE) THEN
	  GOTO 100				!RETRY OPTION
	ELSE IF (E_C.EQ.DWC_WILDCARD) THEN
	  GOTO 11				!MUST SPECIFY
	END IF
	IF (.NOT.WNDNOC('SCN_NODE',NODOUT,'SCN',
	1	'U',NODOUT,FILOUT)) GOTO 11
	IF (.NOT.WNFOP(FCAOUT,FILOUT,'U')) THEN !OPEN OUTPUT SCAN FILE
	  GOTO 11				!RETRY
	END IF
C
 16	CONTINUE
	IF (.NOT.WNDXLP('SCN_LOOPS',FCAOUT)) THEN
	  IF (E_C.EQ.DWC_ENDOFLOOP) GOTO 11	!RETRY NODE
	  GOTO 16				!REPEAT
	END IF
C
	IF (.NOT.WNDSTQ('SCN_SETS',MXNSET,SETS,FCAOUT)) THEN !NO SETS
CC 12	  CONTINUE
CC	  CALL WNFCL(FCAOUT)
	  GOTO 11
	END IF
	IF (SETS(0,0).EQ.0) GOTO 11		!NONE SPECIFIED
	IF (.NOT.NSCSTG(FCAOUT,SETS,STH,STHP,SETNAM)) GOTO 11 !FIND A SET
	CALL WNDSTR(FCAOUT,SETS)		!RESET SET SEARCH
C
 14	CONTINUE
	CALL WNDPOH('Telescope polarisation', 'X,Y,XY',
	1'The telescope dipoles for which solutions will be made
	1 |The valid options are X only, Y only or both |#-')
	IF (.NOT.NSCPLS(XY_P,SPOL)) GOTO 16	!GET POLARISATION SELECTION
	IF (IAND(SPOL,XY_M).EQ.0) GOTO 14	!NO XX OR YY SPECIFIED
	XYSOL(0)=IAND(SPOL,XX_P).NE.0		!SET X,Y TYPE
	XYSOL(1)=IAND(SPOL,YY_P).NE.0
C
	CALL WNCTXT(F_T,'Give the selfcal-model, '//
	1	'or QUIT for pure redundancy.')
	CALL WNCTXT(F_T,'Note: using the INTERNAL model '//
	1	'here is inherently confusing.')
	CALL NMODAV(NSRC(0),STH,APSOL(0))	!GET MODEL, TEST IF FLUXES KNOWN
	IF (NSRC(0).GT.0) THEN			!SOURCES PRESENT
	  CALL NMOMUI				!MODEL USAGE
 15	  CONTINUE
	  IF (.NOT.WNDPAR('MWEIGHT_TYPE',MWTP,LEN(MWTP),J0,CMWTP)) THEN
	    IF (E_C.EQ.DWC_ENDOFLOOP) GOTO 14	!RETRY pol
	    GOTO 15
	  END IF
	  CMWTP=MWTP				!SAVE FOR REPEAT
	  MWGT=1				!STEP TYPE
	  IF (MWTP(1:1).EQ.'I') THEN		!INVERT TYPE
	    MWGT=-MWGT
	    DO I=2,LEN(MWTP)
	      MWTP(I-1:I-1)=MWTP(I:I)
	    END DO
	  END IF
	  IF (MWTP.EQ.'GAUSSIAN') THEN
	    MWGT=MWGT*2
	  ELSE IF (MWTP.EQ.'TRIANGLE') THEN
	    MWGT=MWGT*3
	  END IF
	  IF (.NOT.WNDPAR('MWEIGHT_DATA',MWGTD(0),2*LB_E,J0,A_B(-A_OB),
	1		MWGTD,2)) THEN
	    IF (E_C.EQ.DWC_ENDOFLOOP) GOTO 15	!RETRY weight-type
	    GOTO 15
	  END IF
	  IF (J0.EQ.0) GOTO 15
	  IF (J0.EQ.-1) THEN			!DEFAULT
	    MWGTD(0)=0
	    MWGTD(1)=100000
	  END IF
	  DOALG=.TRUE.				!SELFCAL/ALIGN
	  IF (SELOPT.NE.'SELFCAL' .AND. 
	1		SELOPT.NE.'ALIGN') SELOPT='SELFCAL'
	  IF (.NOT.WNDPAR('ALIGN_OPTION',SUBOPT,LEN(SUBOPT),
	1		J0,SELOPT(1:WNCALN(SELOPT)))) THEN
	    GOTO 15				!ASSUME END
	  ELSE IF (J0.LE.0) THEN
	    GOTO 15				!ASSUME END
	  END IF
	  IF (SUBOP3.EQ.'SEL') THEN		!SELFCAL
	    DOSCAL=.TRUE.
	    CALL WNCTXT(F_TP,'!/\Selfcalibration selected!/')
	    SELOPT='SELFCAL'
	  ELSE					!ALIGN
	    SELOPT='ALIGN'
	    BB2(0)=FORFRE(0)
	    BB2(1)=FORFRE(1)
	    IF (.NOT.WNDPAR('FORCE_FREEDOM',BB2,2*LB_B,
	1		J0,A_B(-A_OB),
	1		BB2,2)) GOTO 15	!ERROR FREEDOMS
	    FORFRE(0)=BB2(0)
	    FORFRE(1)=BB2(1)
	    IF (J0.LE.0) GOTO 15
	    IF (FORFRE(0)) THEN			!GAIN FREEDOM
	      IF (.NOT.WNDPAR('GAIN_FREEDOM',FREGPH(0,0),STHTEL*LB_J,
	1		J0,A_B(-A_OB),FREGPH(0,0),STHTEL)) GOTO 15
	      IF (J0.EQ.0) GOTO 15
	      IF (J0.LT.0) THEN
		DO I=0,STHTEL-1			!SET FREEDOM
		  FREGPH(I,0)=1
		END DO
	      END IF
	    END IF
	    IF (FORFRE(1)) THEN			!PHASE FREEDOM
	      IF (.NOT.WNDPAR('PHASE_FREEDOM',FREGPH(0,1),STHTEL*LB_J,
	1		J0,A_B(-A_OB),FREGPH(0,1),STHTEL)) GOTO 15
	      IF (J0.EQ.0) GOTO 15
	      IF (J0.LT.0) THEN
		DO I=0,STHTEL-1			!SET FREEDOM
		  FREGPH(I,1)=1
		END DO
	      END IF
	    END IF
	    DOSCAL=.FALSE.			!SET ALIGN
	    CALL WNCTXT(F_TP,'!/\Align selected!/')
	  END IF
	ELSE
	  CALL WNCTXT(F_TP,'Pure redundancy selected!/')
	  DOALG=.FALSE.
	  XSOLVE=.FALSE.			!ASSUME NO COMPLEX
	  XOSOL=.FALSE.
	END IF
C
 18	CONTINUE
	IF (.NOT.NSCHAS(0,HARAN)) GOTO 14
C
	IF (HAINT.LE.0) THEN
	  JS=WNDPAR('HA_INTEGRATION',HAINT,LB_E,J0,'*')
	ELSE
	  JS=WNDPAR('HA_INTEGRATION',HAINT,LB_E,J0,A_B(-A_OB),HAINT,1)
	END IF
	IF (.NOT.JS) GOTO 18
C
	IF (.NOT.NSCIFS(CIFR,SIFRS)) GOTO 18	!SELECT INTERFEROMETERS
	CIFR=0					!SET SEEN
C
	IF (.NOT.WNDPAR('SAVE_RESIDUALS',BB1,LB_B,J0,'NO')) THEN
	  GOTO 18				!RETRY
	END IF
	DOMIFR=.FALSE.
	IF (BB1) THEN
	   DOMIFR=.TRUE.
	   CALL WNDPOH('Interferometers to get MIFR corrections',' ',
	1	'Specify which interferometers must get the MIFR corrections
	1 |Default is NONE |#-')
	   IF (.NOT.NSCIFS(4,CIFRS)) GOTO 18 !SELECT INTERFEROMETERS
	END IF
C
	IF (.NOT.WNDPAR('SHOW_LEVEL',ARJ(0),2*LB_J,J0,
	1	A_B(-A_OB),ARJ,2)) THEN
	  IF (E_C.EQ.DWC_ENDOFLOOP) GOTO 18	!RETRY
	END IF
	DO I=0,4
	  SHLV(I)=0				!NO SHOW
	  IF (ARJ(0).GE.I) SHLV(I)=SHLV(I)+F_T	!LIMIT TYPE
	  IF (ARJ(1).GE.I) SHLV(I)=SHLV(I)+F_P	!LIMIT PRINT
	END DO
C
	CALL NSCSAD(CORAP,CORDAP)		!GET CORRECTIONS TO (DE-)APPLY
C
 19	CONTINUE
	BB2(0)=APSOL(0)
	BB2(1)=APSOL(1)
	IF (.NOT.WNDPAR('SOLVE',BB2,2*LB_B,J0,
	1		A_B(-A_OB),BB2,2)) THEN
	  IF (E_C.EQ.DWC_ENDOFLOOP) GOTO 18	!RETRY
	END IF
	APSOL(0)=BB2(0)
	APSOL(1)=BB2(1)
C
	IF (APSOL(0) .AND. APSOL(1)) THEN
	  BB1=XSOLVE
	  IF (.NOT.WNDPAR('COMPLEX',BB1,LB_B,J0,
	1		A_B(-A_OB),BB1,1)) THEN
	    IF (E_C.EQ.DWC_ENDOFLOOP) GOTO 19	!RETRY
	  END IF
	  XSOLVE=BB1
	ELSE
	  XSOLVE=.FALSE.
	END IF
	IF (XSOLVE) THEN
	  BB1=XOSOL
	  IF (.NOT.WNDPAR('COMPLEX_ONLY',BB1,LB_B,J0,
	1		A_B(-A_OB),BB1,1)) THEN
	    IF (E_C.EQ.DWC_ENDOFLOOP) GOTO 19	!RETRY
	  END IF
	  XOSOL=BB1
	ELSE
	  XOSOL=.FALSE.
	END IF
C
 17	CONTINUE
	IF (.NOT.WNDPAR('QDETAILS',BB1,LB_B,J0,'NO')) THEN
	  IF (E_C.EQ.DWC_ENDOFLOOP) GOTO 19	!RETRY
	  GOTO 80				!LEAVE
	END IF
	IF (BB1) THEN				! DETAILS
	  IF (.NOT.WNDPAR('BASEL_CHECK',BASDEV,LB_E,J0,
	1		A_B(-A_OB),BASDEV,1)) THEN
	    IF (E_C.EQ.DWC_ENDOFLOOP) GOTO 17	!RETRY
	  END IF
C
	  IF (.NOT.WNDPAR('WEIGHT_MIN',WGTMIN,LB_E,J0,
	1		A_B(-A_OB),WGTMIN,1)) THEN
	    IF (E_C.EQ.DWC_ENDOFLOOP) GOTO 17	!RETRY
	  END IF
	  WGTMIN=MAX(0.,MIN(0.99,WGTMIN))
C
	  DO I=0,STHTEL-1
	    FORPER(I)=FORPER(I)*DEG		!MAKE DEGREES
	  END DO
	  IF (.NOT.WNDPAR('FORCE_PHASE',FORPER(0),STHTEL*LB_E,J0,
	1		A_B(-A_OB),FORPER(0),STHTEL)) THEN
	    IF (E_C.EQ.DWC_ENDOFLOOP) GOTO 17	!RETRY
	  END IF
	  DO I=0,STHTEL-1
	    FORPER(I)=FORPER(I)/DEG		!MAKE RADIANS
	  END DO
C
	  BB1=CSOLVE
	  IF (.NOT.WNDPAR('CONTINUITY',BB1,LB_B,J0,
	1		A_B(-A_OB),BB1,1)) THEN
	    IF (E_C.EQ.DWC_ENDOFLOOP) GOTO 17	!RETRY
	  END IF
	  CSOLVE=BB1
C
	  IF (.NOT.WNDPAR('CHECKS',RIN,3*LB_E,J0,
	1		A_B(-A_OB),RIN,3)) THEN
	    IF (E_C.EQ.DWC_ENDOFLOOP) GOTO 17	!RETRY
	  END IF
	ENDIF
C
 80	CONTINUE
	IF (APSOL(0) .AND. APSOL(1)) THEN	!MAKE SURE
	ELSE
	  XSOLVE=.FALSE.
	  XOSOL=.FALSE.
	END IF
C
C READY REDUNDANCY
C
	GOTO 900
C
C POLARISATION
C
 50	CONTINUE
	IF (.NOT.WNDPAR('POLAR_OPTION',SUBOPT,LEN(SUBOPT),J0,'QUIT')) THEN
	  SUBOPT='QUIT'				!ASSUME END
	ELSE IF (J0.LE.0) THEN
	  SUBOPT='QUIT'				!ASSUME END
	END IF
	IF (SUBOP3.EQ.'QUI') GOTO 100		!NEXT OPTION
	IF (SUBOP3.EQ.'CAL') THEN		!CALCULATE
	  OPTION='PDCALC'				!INDICATE CALC
 51	  CONTINUE
	  CALL WNFCL(FCAOUT)
	  IF (.NOT.WNDNOD('SCN_NODE',NODOUT,'SCN',
	1		'R',NODOUT,FILOUT)) THEN
	    IF (E_C.EQ.DWC_ENDOFLOOP) GOTO 50	!RETRY OPTION
	    GOTO 51				!REPEAT
	  ELSE IF (E_C.EQ.DWC_NULLVALUE) THEN
	    GOTO 50				!RETRY OPTION
	  ELSE IF (E_C.EQ.DWC_WILDCARD) THEN
	    GOTO 51				!MUST SPECIFY
	  END IF
	  IF (.NOT.WNDNOC('SCN_NODE',NODOUT,'SCN',
	1	  'U',NODOUT,FILOUT)) GOTO 51
	  IF (.NOT.WNFOP(FCAOUT,FILOUT,'U')) THEN !OPEN OUTPUT SCAN FILE
	    GOTO 51				!RETRY
	  END IF
C
 52	  CONTINUE
	  IF (.NOT.WNDXLP('SCN_LOOPS',FCAOUT)) THEN
	    IF (E_C.EQ.DWC_ENDOFLOOP) GOTO 51	!RETRY NODE
	    GOTO 51				!REPEAT
	  END IF
	  IF (.NOT.WNDSTQ('SCN_SETS',MXNSET,SETS,FCAOUT)) THEN !NO SETS
CC 52	    CONTINUE
CC	    CALL WNFCL(FCAOUT)
	    GOTO 50
	  END IF
	  IF (SETS(0,0).EQ.0) GOTO 52		!NONE SPECIFIED
C
	  IF (.NOT.NSCHAS(0,HARAN)) GOTO 52
C
	  IF (.NOT.NSCIFS(CIFR,SIFRS)) GOTO 52	!SELECT INTERFEROMETERS
	  CIFR=0				!SET SEEN
C
	  CALL NSCSAD(CORAP,CORDAP)		!GET CORRECTIONS TO (DE-)APPLY
C
	  IF (.NOT.WNDPAR('BASEL_CHECK',BASDEV,LB_E,J0)) THEN
	    IF (E_C.EQ.DWC_ENDOFLOOP) GOTO 52	!RETRY
	  END IF
	ELSE IF (SUBOP3.EQ.'VZE') THEN		!CALCULATE VZERO
 110	  CONTINUE
	  IF (.NOT.WNDPAR('VZERO_OPTION',SUBOPT,
	1		LEN(SUBOPT),J0,'QUIT')) THEN
	    SUBOPT='QUIT'			!ASSUME END
	  ELSE IF (J0.LE.0) THEN
	    SUBOPT='QUIT'			!ASSUME END
	  END IF
	  IF (SUBOP3.EQ.'QUI') GOTO 50		!NEXT OPTION
	  IF (SUBOP3.EQ.'CAL') THEN		!CALCULATE
	    OPTION='PVCALC'
	  ELSE IF (SUBOP3.EQ.'APP') THEN	!APPLY
	    OPTION='PVAPPLY'
	  ELSE IF (SUBOP3.EQ.'ASK') THEN	!ASK
	    OPTION='PVASK'
	  ELSE IF (SUBOP3.EQ.'MAN') THEN	!MANUAL
	    OPTION='PVMAN'
	  ELSE IF (SUBOP3.EQ.'SCA') THEN	!SCAN
	    OPTION='PVSCAN'
	  ELSE IF (SUBOP3.EQ.'COP') THEN	!COPY
	    OPTION='PVCOPY'
	    CALL WNDPOH('Target SCN file to which to write corrections',
	1	    ' ',' ')
	  END IF
 111	  CONTINUE
	  CALL WNFCL(FCAOUT)
	  IF (.NOT.WNDNOD('SCN_NODE',NODOUT,'SCN',
	1		'R',NODOUT,FILOUT)) THEN
	    IF (E_C.EQ.DWC_ENDOFLOOP) GOTO 110	!RETRY OPTION
	    GOTO 112				!REPEAT
	  ELSE IF (E_C.EQ.DWC_NULLVALUE) THEN
	    GOTO 110				!RETRY OPTION
	  ELSE IF (E_C.EQ.DWC_WILDCARD) THEN
	    GOTO 112				!MUST SPECIFY
	  END IF
	  IF (.NOT.WNDNOC('SCN_NODE',NODOUT,'SCN',
	1	'U',NODOUT,FILOUT)) GOTO 111
	  IF (.NOT.WNFOP(FCAOUT,FILOUT,'U')) THEN !OPEN OUTPUT SCAN FILE
	    GOTO 112				!RETRY
	  END IF
C
	  IF (OPTION.EQ.'PVCOPY') CALL WNDPOH
	1	('Loop control for both source and target files',' ',' ')
	  IF (.NOT.WNDXLP('SCN_LOOPS',FCAOUT)) THEN
	    IF (E_C.EQ.DWC_ENDOFLOOP) GOTO 111	!RETRY NODE
	    GOTO 111				!REPEAT
	  END IF
	  IF (OPTION.EQ.'PVCOPY')
	1	CALL WNDPOH('Any number of sets of target sectors',' ',' ')
	  IF (.NOT.WNDSTQ('SCN_SETS',MXNSET,SETS,FCAOUT)) THEN !NO SETS
 112	    CONTINUE
CC	    CALL WNFCL(FCAOUT)
	    GOTO 50
	  END IF
	  IF (SETS(0,0).EQ.0) GOTO 50		!NONE SPECIFIED
C
 114	  CONTINUE
	  IF (OPTION.EQ.'PVCOPY') THEN		!NEED INPUT FOR COPY
	    FCAINP=0				!MAKE SURE NOT THERE
	    CALL WNDPOH('Source SCN file from which to read data',' ',' ')
CC	    CALL WNFCL(FCAINP)
	    IF (.NOT.WNDNOD('USE_SCN_NODE',NODINP,'SCN',
	1		'R',NODINP,FILINP)) THEN
	      IF (E_C.EQ.DWC_ENDOFLOOP) GOTO 110 !RETRY OPTION
	      GOTO 114				!REPEAT
	    ELSE IF (E_C.EQ.DWC_NULLVALUE) THEN
	      GOTO 110				!RETRY OPTION
	    ELSE IF (E_C.EQ.DWC_WILDCARD) THEN
	      FCAINP=FCAOUT			!SAME AS OUTPUT
	    END IF
	    IF (FCAINP.EQ.0) THEN
	      IF (.NOT.WNFOP(FCAINP,FILINP,'R')) THEN !OPEN INPUT SCAN FILE
	        GOTO 114			!RETRY
	      END IF
	    END IF
	    CALL WNDPOH('ONE sector (grp.obs.fld.chn.seq)
	1 |from which to read data',' ',' ')
	    IF (.NOT.WNDSTQ('USE_SCN_SETS',0,SETINP,FCAINP)) THEN !NO SETS
 115	      CONTINUE
	      GOTO 110
	    END IF
	    IF (SETINP(0,0).EQ.0) GOTO 115	!NONE SPECIFIED
	  END IF
C
	  CALL WNDPOH('Hour-angle range in the target sectors',' ',
	3'Hour-angle range for the scans to which to write corrections') 
	  IF (.NOT.NSCHAS(0,HARAN)) GOTO 50	!GET HA. RANGE
C
	  IF (OPTION.NE.'PVMAN') THEN		!NOT MANUAL
	    IF (.NOT.NSCIFS(CIFR,SIFRS)) GOTO 50  !SELECT INTERFEROMETERS
	    CIFR=0				!SET SEEN
	  END IF
C
	  CALL NSCSAD(CORAP,CORDAP)		!GET CORRECTIONS TO (DE-)APPLY
C
	  BASDEV=0.5				!BASELINE DEVIATION
C
C SHOW POLAR
C
	ELSE IF (SUBOP3.EQ.'SHO') THEN		!SHOW
	  OPTION='PDSHOW'				!INDICATE SHOW
 55	  CONTINUE
	  CALL WNFCL(FCAOUT)
	  IF (.NOT.WNDNOD('SCN_NODE',NODOUT,'SCN',
	1		'R',NODOUT,FILOUT)) THEN
	    IF (E_C.EQ.DWC_ENDOFLOOP) GOTO 50	!RETRY polar OPTION
	    GOTO 55				!REPEAT
	  ELSE IF (E_C.EQ.DWC_NULLVALUE) THEN
	    GOTO 50				!RETRY OPTION
	  ELSE IF (E_C.EQ.DWC_WILDCARD) THEN
	    GOTO 55				!MUST SPECIFY
	  END IF
	  IF (.NOT.WNFOP(FCAOUT,FILOUT,'R')) THEN !OPEN OUTPUT SCAN FILE
	    GOTO 55				!RETRY
	  END IF
C
	  IF (.NOT.WNDSTQ('SCN_SETS',MXNSET,SETS,FCAOUT)) THEN !NO SETS
 56	    CONTINUE
CC	    CALL WNFCL(FCAOUT)
	    GOTO 50
	  END IF
	  IF (SETS(0,0).EQ.0) GOTO 56		!NONE SPECIFIED
C
C ZERO/SET/EDIT POLAR
C
	ELSE IF (SUBOP3.EQ.'ZER' .OR. SUBOP3.EQ.'SET' .OR.
	1		SUBOP3.EQ.'EDI') THEN	!ZERO/SET/EDIT
	  IF (SUBOP3.EQ.'ZER') THEN
	    OPTION='PDZERO'			!INDICATE ZERO
	  ELSE IF (SUBOP3.EQ.'SET') THEN
	    OPTION='PDSET'			!SET
	  ELSE
	    OPTION='PDEDIT'			!EDIT
	  END IF
 57	  CONTINUE
	  CALL WNFCL(FCAOUT)
	  IF (.NOT.WNDNOD('SCN_NODE',NODOUT,'SCN',
	1		'R',NODOUT,FILOUT)) THEN
	    IF (E_C.EQ.DWC_ENDOFLOOP) GOTO 50	!RETRY polar OPTION
	    GOTO 57				!REPEAT
	  ELSE IF (E_C.EQ.DWC_NULLVALUE) THEN
	    GOTO 50				!RETRY OPTION
	  ELSE IF (E_C.EQ.DWC_WILDCARD) THEN
	    GOTO 57				!MUST SPECIFY
	  END IF
	  IF (.NOT.WNDNOC('SCN_NODE',NODOUT,'SCN',
	1	  'U',NODOUT,FILOUT)) GOTO 57
	  IF (.NOT.WNFOP(FCAOUT,FILOUT,'U')) THEN !OPEN OUTPUT SCAN FILE
	    GOTO 57				!RETRY
	  END IF
C
	  IF (.NOT.WNDSTQ('SCN_SETS',MXNSET,SETS,FCAOUT)) THEN !NO SETS
 58	    CONTINUE
CC	    CALL WNFCL(FCAOUT)
	    GOTO 50
	  END IF
	  IF (SETS(0,0).EQ.0) GOTO 58		!NONE SPECIFIED
C
C COPY POLAR
C
	ELSE IF (SUBOP3.EQ.'COP') THEN		!COPY
	  OPTION='PDCOPY'				!INDICATE COPY
 90	  CONTINUE
	  CALL WNDPOH('Target node to which to write corrections',' ',
	3'POLAR COPY creates dipole corrections for any number of sectors |
	3using the corrections from 1 input sector in the same or another |
	3 SCN file.')
	  CALL WNFCL(FCAOUT)
	  IF (.NOT.WNDNOD('SCN_NODE',NODOUT,'SCN',
	1		'R',NODOUT,FILOUT)) THEN
	    IF (E_C.EQ.DWC_ENDOFLOOP) GOTO 50	!RETRY polar OPTION
	    GOTO 90				!REPEAT
	  ELSE IF (E_C.EQ.DWC_NULLVALUE) THEN
	    GOTO 50				!RETRY OPTION
	  ELSE IF (E_C.EQ.DWC_WILDCARD) THEN
	    GOTO 90				!MUST SPECIFY
	  END IF
	  IF (.NOT.WNDNOC('SCN_NODE',NODOUT,'SCN',
	1	'U',NODOUT,FILOUT)) GOTO 90
	  IF (.NOT.WNFOP(FCAOUT,FILOUT,'U')) THEN !OPEN OUTPUT SCAN FILE
	    GOTO 90				!RETRY
	  END IF
C
	  CALL WNDPOH('Loop control for both source and target files',' ',' ')
	  IF (.NOT.WNDXLP('SCN_LOOPS',FCAOUT)) THEN
	    IF (E_C.EQ.DWC_ENDOFLOOP) GOTO 90	!RETRY NODE
	    GOTO 90				!REPEAT
	  END IF
	  CALL WNDPOH('Any number of sets of target sectors',' ',' ')
	  IF (.NOT.WNDSTQ('SCN_SETS',MXNSET,SETS,FCAOUT)) THEN !NO SETS
 92	    CONTINUE
CC	    CALL WNFCL(FCAOUT)
	    GOTO 90
	  END IF
	  IF (SETS(0,0).EQ.0) GOTO 92		!NONE SPECIFIED
C
 96	  CONTINUE
	  FCAINP=0				!MAKE SURE NOT THERE
	  CALL WNDPOH('Source SCN file for dipole corrections',' ',' ')
CC	  CALL WNFCL(FCAINP)
	  IF (.NOT.WNDNOD('USE_SCN_NODE',NODINP,'SCN',
	1		'R',NODINP,FILINP)) THEN
	    IF (E_C.EQ.DWC_ENDOFLOOP) GOTO 50	!RETRY polar OPTION
	    GOTO 96				!REPEAT
	  ELSE IF (E_C.EQ.DWC_NULLVALUE) THEN
	    GOTO 50				!RETRY OPTION
	  ELSE IF (E_C.EQ.DWC_WILDCARD) THEN
	    FCAINP=FCAOUT			!SAME AS OUTPUT
	  END IF
	  IF (FCAINP.EQ.0) THEN
	    IF (.NOT.WNFOP(FCAINP,FILINP,'R')) THEN !OPEN INPUT SCAN FILE
	      GOTO 96				!RETRY
	    END IF
	  END IF
C
	  CALL WNDPOH('ONE sector (grp.obs.fld.chn.seq)
	1 |from which to read corrections',' ',
	1 'Specify the sector from which to copy the corrections |#-')
	  IF (.NOT.WNDSTQ('USE_SCN_SETS',0,SETINP,FCAINP)) THEN !NO SETS
 97	    CONTINUE
	    CALL WNFCL(FCAINP)			!CHANGED 931220
	    GOTO 90
	  END IF
	  IF (SETINP(0,0).EQ.0) GOTO 97		!NONE SPECIFIED
C
	END IF					!END POLAR
C
C READY POLARISATION
C
	GOTO 900
C
C SET CORRECTIONS
C
 20	CONTINUE
	IF (.NOT.WNDPAR('SET_OPTION',SUBOPT,LEN(SUBOPT),J0,'QUIT')) THEN
	  SUBOPT='QUIT'
	ELSE IF (J0.LE.0) THEN
	  SUBOPT='QUIT'
	END IF
	IF (SUBOP3.EQ.'QUI') GOTO 100		!NEXT OPTION
	IF (SUBOP3.EQ.'OTH') THEN
	  IF (.NOT.WNDPAR('OTH_OPTION',SUBOPT,LEN(SUBOPT),J0,'QUIT')) THEN
	    SUBOPT='QUIT'
	  ELSE IF (J0.LE.0) THEN
	    SUBOPT='QUIT'
	  END IF
	  IF (SUBOP3.EQ.'QUI') GOTO 20		!TRY SET_OPTION
	END IF
C
C
C GET VALUES FOR ZERO/EXTINCTION/REFRACTION/FARADAY ETC
C
	IF (SUBOP3.EQ.'ZER' .OR. SUBOP3.EQ.'EXT' .OR. SUBOP3.EQ.'INV' .OR.
	1		SUBOP3.EQ.'REF' .OR. SUBOP3.EQ.'FAR' .OR.
	1		SUBOP3.EQ.'IRE' .OR. SUBOP3.EQ.'CLK' .OR.
	1		SUBOP3.EQ.'POL' .OR. SUBOP3.EQ.'FRE' .OR.
	1		SUBOP3.EQ.'DX' .OR. SUBOP3.EQ.'DY' .OR.
	1		SUBOP3.EQ.'DZ' .OR. SUBOP3.EQ.'SHI') THEN
	  DO I=0,STHTEL-1			!SELECT ALL TELS
	    TELS(I)=.TRUE.
	  END DO
	  IF (SUBOP3.EQ.'ZER') THEN
	    OPTION='SETZERO'
	    CALL NSCSAZ(CORZE,APSOL)		!GET TO ZERO
	    IF (CORZE.EQ.0) GOTO 20		!NOTHING TO ZERO
	  ELSE IF (SUBOP3.EQ.'INV') THEN
	    OPTION='SETINVERT'
	    CALL NSCSAZ(CORZE,APSOL)		!GET WHAT TO INVERT
	    IF (CORZE.EQ.0) GOTO 20		!NOTHING TO INVERT
	  ELSE IF (SUBOP3.EQ.'EXT') THEN
	    OPTION='SETEXT'
 30	    CONTINUE
	    IF (.NOT.WNDPAR('EXTINCTION',CFEXT,3*LB_E,
	1		J0,' ',CFEXT,3)) THEN
	      IF (E_C.EQ.DWC_ENDOFLOOP) GOTO 20 !RETRY
	      GOTO 30
	    END IF
	    IF (J0.EQ.0) GOTO 20
	  ELSE IF (SUBOP3.EQ.'REF') THEN
	    OPTION='SETREF'
 31	    CONTINUE
	    IF (.NOT.WNDPAR('REFRACTION',CFREF,3*LB_E,
	1		J0,' ',CFREF,3)) THEN
	      IF (E_C.EQ.DWC_ENDOFLOOP) GOTO 20	!RETRY
	      GOTO 31
	    END IF
	    IF (J0.EQ.0) GOTO 20
	  ELSE IF (SUBOP3.EQ.'CLK') THEN
	    OPTION='SETCLK'
 34	    CONTINUE
	    CFREF(0)=0
	    IF (.NOT.WNDPAR('CLOCK_CORR',CFREF,LB_E,
	1		J0,'0')) THEN
	      IF (E_C.EQ.DWC_ENDOFLOOP) GOTO 20	!RETRY
	      GOTO 34
	    END IF
	    IF (J0.EQ.0) GOTO 20
	  ELSE IF (SUBOP3.EQ.'SHI') THEN
	    OPTION='SETSHIFT'
 38	    CONTINUE
	    CFREF(0)=0
	    CFREF(1)=0
	    CFEXT(0)=0
	    CFEXT(1)=0
	    IF (.NOT.WNDPAR('SHIFT',CFREF,2*LB_E,
	1		J0,'0,0')) THEN
	      IF (E_C.EQ.DWC_ENDOFLOOP) GOTO 20	!RETRY
	      GOTO 38
	    END IF
	    IF (J0.EQ.0) GOTO 20
	    IF (.NOT.WNDPAR('DSHIFT',CFEXT,2*LB_E,
	1		J0,'0,0')) THEN
	      IF (E_C.EQ.DWC_ENDOFLOOP) GOTO 20	!RETRY
	      GOTO 38
	    END IF
	    IF (J0.EQ.0) GOTO 20
	  ELSE IF (SUBOP3.EQ.'POL') THEN
	    OPTION='SETPOLE'
 35	    CONTINUE
	    PCGAN(0,0)=0
	    IF (.NOT.WNDPAR('BASEL_POLE',PCGAN(0,0),LB_E,
	1		J0,'0')) THEN
	      IF (E_C.EQ.DWC_ENDOFLOOP) GOTO 20	!RETRY
	      GOTO 35
	    END IF
	    IF (J0.EQ.0) GOTO 20
	  ELSE IF (SUBOP3.EQ.'FRE') THEN
	    OPTION='SETFREQ'
 36	    CONTINUE
	    PCGAN(0,0)=0
	    IF (.NOT.WNDPAR('FREQ_CORR',PCGAN(0,0),LB_E,
	1		J0,'0')) THEN
	      IF (E_C.EQ.DWC_ENDOFLOOP) GOTO 20	!RETRY
	      GOTO 36
	    END IF
	    IF (J0.EQ.0) GOTO 20
	  ELSE IF (SUBOP3.EQ.'DX' .OR. SUBOP3.EQ.'DY' .OR.
	1		SUBOP3.EQ.'DZ') THEN
	    IF (SUBOP3.EQ.'DX') THEN
	      OPTION='SETDX'
	    ELSE IF (SUBOP3.EQ.'DY') THEN
	      OPTION='SETDY'
	    ELSE
	      OPTION='SETDZ'
	    END IF
	    DO I1=0,STHTEL-1				!EMPTY DATA
	      PCGAN(I1,0)=0
	    END DO
 37	    CONTINUE
	    IF (.NOT.WNDPAR('BASEL_'//SUBOP3,PCGAN(0,0),
	1		STHTEL*LB_E,J0,A_B(-A_OB),
	1		PCGAN(0,0),STHTEL)) THEN
	      IF (E_C.EQ.DWC_ENDOFLOOP) GOTO 20	!RETRY
	      GOTO 37
	    END IF
	    IF (J0.EQ.0) GOTO 20
	  ELSE IF (SUBOP3.EQ.'FAR') THEN
	    OPTION='SETFAR'
 32	    CONTINUE
	    IF (.NOT.WNDPAR('FARADAY_FILE',FILINP,LEN(FILINP),
	1		J0,'""')) THEN
	      IF (E_C.EQ.DWC_ENDOFLOOP) GOTO 20	!RETRY
	      GOTO 32
	    END IF
	    IF (J0.EQ.0) GOTO 20
	    IF (J0.LT.0) GOTO 32		!MUST SPECIFY
	    CALL WNFCL(FCAINP)
	    IF (.NOT.WNFOP(FCAINP,FILINP,'R')) GOTO 32 !NO SUCH FILE
	    CALL WNFCL(FCAINP)			!CLOSE FILE
	  ELSE IF (SUBOP3.EQ.'IRE') THEN
	    OPTION='SETIREFRAC'
 33	    CONTINUE
	    IF (.NOT.WNDPAR('IREFRACT_FILE',FILINP,LEN(FILINP),
	1		J0,'""')) THEN
	      IF (E_C.EQ.DWC_ENDOFLOOP) GOTO 20	!RETRY
	      GOTO 33
	    END IF
	    IF (J0.EQ.0) GOTO 20
	    IF (J0.LT.0) GOTO 33		!MUST SPECIFY
	    CALL WNFCL(FCAINP)
	    IF (.NOT.WNFOP(FCAINP,FILINP,'R')) GOTO 32 !NO SUCH FILE
	  END IF
C
C SPECIFY UV-DATA
C
 21	  CONTINUE
	  CALL WNFCL(FCAOUT)
	  IF (.NOT.WNDNOD('SCN_NODE',NODOUT,'SCN',
	1		'R',NODOUT,FILOUT)) THEN
	    IF (E_C.EQ.DWC_ENDOFLOOP) GOTO 20	!RETRY UNIT
	    GOTO 21				!REPEAT
	  ELSE IF (E_C.EQ.DWC_NULLVALUE) THEN
	    GOTO 20				!RETRY OPTION
	  ELSE IF (E_C.EQ.DWC_WILDCARD) THEN
	    GOTO 21				!MUST SPECIFY
	  END IF
	  IF (.NOT.WNDNOC('SCN_NODE',NODOUT,'SCN',
	1	'U',NODOUT,FILOUT)) GOTO 21
	  IF (.NOT.WNFOP(FCAOUT,FILOUT,'U')) THEN !OPEN OUTPUT SCAN FILE
	    GOTO 21				!RETRY
	  END IF
C
	  IF (.NOT.WNDSTQ('SCN_SETS',MXNSET,SETS,FCAOUT)) THEN !NO SETS
 22	    CONTINUE
	    GOTO 21
	  END IF
	  IF (SETS(0,0).EQ.0) GOTO 22		!NONE SPECIFIED
	  IF (.NOT.NSCSTG(FCAOUT,SETS,STH,STHP,SETNAM)) GOTO 22 !FIND A SET
	  CALL WNDSTR(FCAOUT,SETS)               !RESET SET SEARCH
C
	  IF (SUBOP3.EQ.'ZER' .OR. SUBOP3.EQ.'INV') THEN
	    CALL WNDPOH('Telescope polarisation', 'X,Y,XY',
	3'The telescope dipoles for which corrections will be zeroed/inverted |
	3The valid options are X only, Y only or both |#-')
	    IF (.NOT.NSCPLS(XY_P,SPOL)) GOTO 22	!GET POLARISATION SELECTION
	    XYSOL(0)=IAND(SPOL,XX_P).NE.0	!SET X,Y TYPE
	    XYSOL(1)=IAND(SPOL,YY_P).NE.0
	    IF (.NOT.NSCTL1(1,TELS,STH)) GOTO 22 !GET TELESCOPES TO DO
	  ELSE IF (SUBOP3.EQ.'POL' .OR. SUBOP3.EQ.'FRE' .OR.
	1		SUBOP3.EQ.'DX' .OR. SUBOP3.EQ.'DY' .OR.
	1		SUBOP3.EQ.'DZ') THEN
	    XYSOL(0)=.TRUE.			!SET X,Y TYPE
	    XYSOL(1)=.TRUE.
	  END IF
	  IF (.NOT.NSCHAS(0,HARAN)) GOTO 22	!GET HA. RANGE
C
C MANUAL/INIT/IFR/MIFR/RENORM CORRECTIONS
C
C SPECIFY UV-DATA
C
	ELSE IF (SUBOP3.EQ.'MAN' .OR. SUBOP3.EQ.'INI' .OR.
	1      SUBOP3.EQ.'MUL' .OR. SUBOP3.EQ.'REN') THEN
	  IF (SUBOP3.EQ.'MAN') THEN
	    OPTION='SETMANINI' !MANUAL
	  ELSE IF (SUBOP3.EQ.'INI') THEN
	    OPTION='SETMANINI2' !INIT
	  ELSE IF (SUBOP3.EQ.'MUL') THEN
	    OPTION='SETCLK'
	  ELSE
	    OPTION='SETRENORM'			!RENORM
	  END IF
 40	  CONTINUE
	  CALL WNFCL(FCAOUT)
	  IF (.NOT.WNDNOD('SCN_NODE',NODOUT,'SCN',
	1		'R',NODOUT,FILOUT)) THEN
	    IF (E_C.EQ.DWC_ENDOFLOOP) GOTO 20	!RETRY set OPTION
	    GOTO 40				!REPEAT
	  ELSE IF (E_C.EQ.DWC_NULLVALUE) THEN
	    GOTO 20				!RETRY set OPTION
	  ELSE IF (E_C.EQ.DWC_WILDCARD) THEN
	    GOTO 40				!MUST SPECIFY
	  END IF
	  IF (.NOT.WNDNOC('SCN_NODE',NODOUT,'SCN',
	1	 'U',NODOUT,FILOUT)) GOTO 40
	  IF (.NOT.WNFOP(FCAOUT,FILOUT,'U')) GOTO 40 !OPEN OUTPUT SCAN FILE
C
 409	  CONTINUE
	  IF (SUBOP3.EQ.'INI') THEN             !GET LOOPS 
	     IF (.NOT.WNDXLP('SCN_LOOPS',FCAOUT)) THEN
		IF (E_C.EQ.DWC_ENDOFLOOP) GOTO 40 !RETRY NODE
		GOTO 409		!REPEAT
	     END IF
	  ENDIF
C
 42	  CONTINUE
	  IF (.NOT.WNDSTQ('SCN_SETS',MXNSET,SETS,FCAOUT))
	1	GOTO 40			
	  IF (SETS(0,0).EQ.0) GOTO 42		!NONE SPECIFIED
C
	  CALL WNDPOH('Telescope polarisation', 'X,Y,XY',
	3'The telescope dipoles for which corrections will be modified |
	3The valid options are X only, Y only or both |#-')
	  IF (.NOT.NSCPLS(XY_P,SPOL)) GOTO 42	!GET POL. SELECTION
	  XYSOL(0)=IAND(SPOL,XX_P).NE.0		!SET X,Y TYPE
	  XYSOL(1)=IAND(SPOL,YY_P).NE.0
	  IF (.NOT.NSCHAS(0,HARAN)) GOTO 42	!GET HA. RANGE
	  DO I=0,1				!EMPTY CORRECTIONS
	    DO I1=0,STHTEL-1
	      PCGAN(I1,I)=1
	      PCPHS(I1,I)=0
	    END DO
	  END DO
C
C GET USER DATA
C
 45	  CONTINUE
	  IF (SUBOP3.EQ.'MAN' .OR. SUBOP3.EQ.'MUL') THEN	!MANUAL
	    DO I=0,1				!X,Y
	      IF (XYSOL(I)) THEN			!X
	        IF (.NOT.WNDPAR('GAIN_'//PCTP(I),PCGAN(0,I),STHTEL*LB_E,J0,
	1		A_B(-A_OB),PCGAN(0,I),STHTEL)) THEN
	          IF (E_C.EQ.DWC_ENDOFLOOP) GOTO 42 !RETRY NODE
	          GOTO 45				!RETRY
	        END IF
	        IF (J0.LE.0) GOTO 45		!MUST SPECIFY
		IF (SUBOP3.EQ.'MAN') THEN
	          IF (.NOT.WNDPAR('PHASE_'//PCTP(I),PCPHS(0,I),STHTEL*LB_E,J0,
	1		A_B(-A_OB),PCPHS(0,I),STHTEL)) THEN
	            IF (E_C.EQ.DWC_ENDOFLOOP) GOTO 42 !RETRY NODE
	            GOTO 45				!RETRY
	          END IF
	          IF (J0.LE.0) GOTO 45			!MUST SPECIFY
		ENDIF
	      END IF
	      DO I1=0,STHTEL-1
	        IF (PCGAN(I1,I).LT.GANMIN.OR.
	1	    PCGAN(I1,I).GT.GANMAX) THEN
		  PCGAN(I1,I)=1				!LIMIT VALUE
		  CALL WNCTXT(F_TP,'Gains limited between !E and !E',
	1			GANMIN,GANMAX)
		END IF
	      END DO
	    END DO
C
	  ELSE IF (SUBOP3.EQ.'INI') THEN	!INITIALISE
	   IF (.NOT.NSCIFS(CIFR,SIFRS)) GOTO 42	!SELECT INTERFEROMETERS
CC981022	   CALL NCATEL(FCAOUT,SETS,HARAN(1),HARAN(2),SIFRS,
CC981022	1		PCGAN,PCPHS,F_T) 	!GET VALUES
C
	  ELSE IF (SUBOP3.EQ.'REN') THEN	!RENORM
	    CALL NSCSAD(CORAP,CORDAP)		!GET CORRECTIONS TO (DE-)APPLY
	    IF (.NOT.WNDPAR('GAIN_NORM',FREGPH(0,0),STHTEL*LB_J,
	1		J0,A_B(-A_OB),FREGPH(0,0),STHTEL)) GOTO 42 !RETRY NODE
	    IF (J0.EQ.0) THEN
	      DO I=0,STHTEL-1			!SET ALL TELESCOPES
		FREGPH(I,0)=1			!WAS 0??? CMV940428
	      END DO
	      J0=STHTEL				!ALL SET
	    END IF
	    IF (J0.LT.0) THEN
	      DO I=0,STHTEL-1			!SET ALL TELESCOPES
		FREGPH(I,0)=1
	      END DO
	      J0=STHTEL				!ALL SET
	    END IF
	    DO I=J0,STHTEL-1			!DESELECT SOME
	      FREGPH(I,0)=0
	    END DO
	    IF (.NOT.WNDPAR('PHASE_NORM',FREGPH(0,1),STHTEL*LB_J,
	1		J0,A_B(-A_OB),FREGPH(0,1),STHTEL)) GOTO 42
	    IF (J0.EQ.0) THEN
	      DO I=0,STHTEL-1			!SET FREEDOM
		FREGPH(I,1)=1			!WAS 0??? CMV940428
	      END DO
	      J0=STHTEL				!ALL SET
	    END IF
	    IF (J0.LT.0) THEN
	      DO I=0,STHTEL-1			!SET FREEDOM
		FREGPH(I,1)=1
	      END DO
	      J0=STHTEL				!ALL SET
	    END IF
	    DO I=J0,STHTEL-1			!DESELECT SOME
	      FREGPH(I,1)=0
	    END DO
	  END IF
C
C IFR CORRECTIONS
C
C SPECIFY UV-DATA
C
	ELSE IF (SUBOP3.EQ.'IFR' .OR. SUBOP3.EQ.'MIF') THEN
	  IF (SUBOP3.EQ.'IFR') THEN
	    OPTION='SETIFR'			!Additive ifr
	  ELSE IF (SUBOP3.EQ.'MIF') THEN
	    OPTION='SETMIFR'			!Multiplicative ifr
	  END IF
 46	  CONTINUE
	  CALL WNFCL(FCAOUT)
	  IF (.NOT.WNDNOD('SCN_NODE',NODOUT,'SCN',
	1		'R',NODOUT,FILOUT)) THEN
	    IF (E_C.EQ.DWC_ENDOFLOOP) GOTO 20	!RETRY set OPTION
	    GOTO 46				!REPEAT
	  ELSE IF (E_C.EQ.DWC_NULLVALUE) THEN
	    GOTO 20				!RETRY OPTION
	  ELSE IF (E_C.EQ.DWC_WILDCARD) THEN
	    GOTO 46				!MUST SPECIFY
	  END IF
	  IF (.NOT.WNDNOC('SCN_NODE',NODOUT,'SCN',
	1	'U',NODOUT,FILOUT)) GOTO 46
	  IF (.NOT.WNFOP(FCAOUT,FILOUT,'U')) THEN !OPEN OUTPUT SCAN FILE
	    GOTO 46				!RETRY
	  END IF
C
 47	  CONTINUE
	  IF (.NOT.WNDSTQ('SCN_SETS',MXNSET,SETS,FCAOUT)) GOTO 46 !NO SETS
	  IF (SETS(0,0).EQ.0) GOTO 47		!NONE SPECIFIED
	  IF (.NOT.NSCSTG(FCAOUT,SETS,STH,STHP,SETNAM)) GOTO 47 !FIND A SET
	  CALL WNDSTR(FCAOUT,SETS)		!RESET SET SEARCH
C
	  CALL WNDPOH('Interferometer polarisation', 'XYX,XY,YX,X,Y',
	3'The telescope dipole set for which solutions will be made |
	3The valid options are |. |
	3	XYX	meaning XX, XY, YX, YY |
	3	XY	meaning XX,         YY |
	3	YX	meaning     XY, YX |
	3	X	meaning XX |
	3	Y	meaning             YY |
	3#-')
	  IF (.NOT.NSCPLS(0,SPOL)) GOTO 47	!GET POL. SELECTION
	  IF (.NOT.NSCHAS(0,HARAN)) GOTO 47	!GET HA. RANGE
	  IF (.NOT.NSCIFS(CIFR,SIFRS)) GOTO 47	!SELECT INTERFEROMETERS
	  CIFR=0				!SET SEEN
C
C GET USER DATA
C
	  I= -1					!POINTER IN ARRAY
	  DO I1=0,STHTEL-1
	   DO I2=I1+1,STHTEL-1
	    IF (SIFRS(I1,I2)) THEN		!IFR SELECTED
	      CALL WNCTXT(F_TP,'Interferometer !1$XJ!1$XJ',I1,I2)
	      I=I+1				!NEXT ELEMENT IN ARRAY
	      DO I3=0,3
 49	        CONTINUE
	        IF (IAND(SPOL,PLFL(I3)).NE.0) THEN !POL SELECTED
	           IF (SUBOP3.EQ.'IFR') THEN	!ADDITIVE
	             IF (.NOT.WNDPAR('IFR_'//PLTP(I3),RBUF,
	1			2*LB_E,J0,'0,0')) THEN
		        IF (E_C.EQ.DWC_ENDOFLOOP) GOTO 47 !RETRY HA
	        	GOTO 49				!RETRY
		     END IF
		     IFRCOR(I,I3)=CMPLX(RBUF(1),RBUF(2)) !COS,SIN WILL BE ADDED
	           ELSE				!MULTIPLICATIVE
	             IF (.NOT.WNDPAR('GAIN_'//PLTP(I3),R0,
	1			LB_E,J0,'1')) THEN
		        IF (E_C.EQ.DWC_ENDOFLOOP) GOTO 47 !RETRY HA
	        	GOTO 49				!RETRY
		     END IF
		     IF (R0.LT.GANMIN.OR.R0.GT.GANMAX) THEN
			R0=1				!LIMIT GAIN
		        CALL WNCTXT(F_TP,
	1			'Gains limited between !E and !E',
	1			GANMIN,GANMAX)
		     END IF
	             IF (.NOT.WNDPAR('PHASE_'//PLTP(I3),R1,
	1			LB_E,J0,'0')) THEN
		        IF (E_C.EQ.DWC_ENDOFLOOP) GOTO 47 !RETRY HA
	        	GOTO 49				!RETRY
		     END IF
		     IFRCOR(I,I3)=CMPLX(LOG(ABS(R0)),R1/180.*PI)
						!DATA WILL BE MULTIPLIED
						!BY EXP(-CMPLX)
		   END IF
	        END IF
	      END DO
	    END IF
	   END DO
	  END DO
C
C COPY CORRECTIONS
C
	ELSE IF (SUBOP3.EQ.'COP' .OR. SUBOP3.EQ.'LIN' .OR.
	1		SUBOP3.EQ.'CCO' .OR. SUBOP3.EQ.'ICO') THEN
 60	  CONTINUE
	  CALL WNDPOH(
	1'Target node to which to write corrections',' ',' ')
	  IF (SUBOP3.EQ.'COP') THEN
	    OPTION='SETCOPY'
	    CALL WNDPOH(' ',' ',
	3'SET COPY creates corrections for any number of scans (to be |
	3selected) using the corrections from all specified input sector |
	3in the same or another SCN file.')
C
	  ELSE IF (SUBOP3.EQ.'LIN') THEN
	    OPTION='SETLINE'
	    CALL WNDPOH(' ',' ',
	3'SET LINE copies telescope corrections from the continuum channel |
	3(Channel 0) to selected parts of the corresponding line-channel |
	3sectors.')
C
	  ELSE IF (SUBOP3.EQ.'CCO') THEN
	    OPTION='SETCCOPY'
	    CALL WNDPOH(' ',' ',
	3'SET CCOPY interpolates/copies the average telescope corrections |
	3from 2 complete input sectors to selected parts of any number of |
	3output sectors.')
C
	  ELSE IF (SUBOP3.EQ.'ICO') THEN
	    OPTION='SETICOPY'
	    CALL WNDPOH(' ',' ',
	3'SET ICOPY creates corrections for any number of scans (to be |
	3selected) using the MIFR corrections from all specified input sector |
	3in the same or another SCN file.')
	  ENDIF
C
	  CALL WNFCL(FCAOUT)
	  IF (.NOT.WNDNOD('SCN_NODE',NODOUT,'SCN',
	1		'R',NODOUT,FILOUT)) THEN
	    IF (E_C.EQ.DWC_ENDOFLOOP) GOTO 20	!RETRY set OPTION
	    GOTO 60				!REPEAT
	  ELSE IF (E_C.EQ.DWC_NULLVALUE) THEN
	    GOTO 60				!RETRY OPTION
	  ELSE IF (E_C.EQ.DWC_WILDCARD) THEN
	    GOTO 60				!MUST SPECIFY
	  END IF
	  IF (.NOT.WNDNOC('SCN_NODE',NODOUT,'SCN',
	1	'U',NODOUT,FILOUT)) GOTO 60
	  IF (.NOT.WNFOP(FCAOUT,FILOUT,'U')) THEN !OPEN OUTPUT SCAN FILE
	    GOTO 60				!RETRY
	  END IF
C
 65	  CONTINUE
	  IF (SUBOP3.EQ.'COP' .OR. SUBOP3.EQ.'CCO' .OR. SUBOP3.EQ.'ICO') THEN
	    CALL WNDPOH
	1	('Loop control for both source and target files',' ',' ')
	    IF (.NOT.WNDXLP('SCN_LOOPS',FCAOUT)) THEN
	      IF (E_C.EQ.DWC_ENDOFLOOP) GOTO 60	!RETRY NODE
	      GOTO 65				!REPEAT
	    END IF
C
	    CEQUAL=0				!DEFAULT: NO
	    BB1=.FALSE.
	    IF (WNDPAR('CAL_EQUAL',BB1,LB_B,J0,'NO')) THEN
	       IF (BB1) CEQUAL=1
	    END IF
	  END IF
C
 67	  CONTINUE
	  CALL WNDPOH(
	1'Any number of target sectors (grp.obs.fld.chn.seq)
	1 | to which to write corrections',' ',' ')
	  IF (SUBOPT.EQ.'LIN') THEN
	  ELSE
	    CALL WNDPOH(' ',' ',
	3'For each target sector, corrections will be copied from the |
	3corresponding continuum channel (chn=0). No harm will be done if |
	3your selection includes continuum channels (e.g. because you use a
	3 wildcard).')
	  ENDIF
	  IF (.NOT.WNDSTQ('SCN_SETS',MXNSET,SETS,FCAOUT)) GOTO 65
	  IF (SETS(0,0).EQ.0) GOTO 65		!NONE SPECIFIED
CC	  IF (.NOT.NSCSTG(FCAOUT,SETS,STH,STHP,SETNAM)) GOTO 65 !FIND A SET
CC	  CALL WNDSTR(FCAOUT,SETS)               !RESET SET SEARCH
C
	  IF (SUBOP3.EQ.'ICO') THEN
	    CALL WNDPOH('Interferometer polarisation', 'XYX,XY,YX,X,Y',
	3'The telescope dipole set for which solutions will be made |
	3The valid options are |. |
	3	XYX	meaning XX, XY, YX, YY |
	3	XY	meaning XX,         YY |
	3	YX	meaning     XY, YX |
	3	X	meaning XX |
	3	Y	meaning             YY |
	3#-')
	    IF (.NOT.NSCPLS(0,SPOL)) GOTO 67	!GET POL. SELECTION
	  ELSE
	    CALL WNDPOH('Telescope polarisation', 'X,Y,XY',
	1'The telescope dipole set for which solutions will be made |
	1The valid options are X only, Y only or both |#-')
	    IF (.NOT.NSCPLS(XY_P,SPOL)) GOTO 67	!GET POL. SELECTION
	    XYSOL(0)=IAND(SPOL,XX_P).NE.0		!SET X,Y TYPE
	    XYSOL(1)=IAND(SPOL,YY_P).NE.0
	    IF (.NOT.NSCTL1(1,TELS,STH)) GOTO 67 !GET TELESCOPES TO DO
	  ENDIF
C
	  IF (.NOT.NSCHAS(0,HARAN)) GOTO 67	!GET HA. RANGE
	  IF (SUBOP3.EQ.'ICO') THEN
	    IF (.NOT.NSCIFS(4,SIFRS)) GOTO 47	!SELECT INTERFEROMETERS
	  ENDIF
C
 66	  CONTINUE
	  IF (SUBOP3.EQ.'COP' .OR. SUBOP3.EQ.'CCO' .OR. SUBOP3.EQ.'ICO') THEN
	    CALL WNDPOH('Source SCN file from which to read corrections |',
	1' ',
	1'The default "*" means: "The same as the target file"')
CC	    CALL WNFCL(FCAINP)
	    IF (.NOT.WNDNOD('USE_SCN_NODE',NODINP,'SCN',
	1		'R',NODINP,FILINP)) THEN
	      IF (E_C.EQ.DWC_ENDOFLOOP) GOTO 67	! retry SCN_SETS
	      GOTO 66				!REPEAT
	    ELSE IF (E_C.EQ.DWC_NULLVALUE) THEN
	      GOTO 65				!RETRY OPTION
	    ELSE IF (E_C.EQ.DWC_WILDCARD) THEN
	      FCAINP=FCAOUT			!SAME AS OUTPUT
	    END IF
	    IF (FCAINP.EQ.0) THEN
	      IF (.NOT.WNFOP(FCAINP,FILINP,'R')) THEN !OPEN INPUT SCAN FILE
	        GOTO 66				!RETRY
	      END IF
	    END IF
C
 68	    CONTINUE
	    CALL WNDPOH('Sectors (grp.obs.fld.chn.seq)
	1 |from which to read corrections',' ',' ')
	    IF (.NOT.WNDSTQ('USE_SCN_SETS',MXNSET,SETINP,FCAINP)) !NO SETS
	1	GOTO 66
	    IF (SETINP(0,0).EQ.0) GOTO 68	!NONE SPECIFIED
	  END IF
	  IF (SUBOP3.EQ.'LIN') THEN
	    RS1=0
	    JS=WNDPAR('CALCHAN',RS1,LB_J,J0,A_B(-A_OB),RS1,1)
	    IF (.NOT.JS) GOTO 68	!NONE SPECIFIED
	  END IF
C
C READY SET
C
	END IF
	GOTO 900
C
C SHOW
C
 70	CONTINUE
	IF (NODINP.EQ.'*') NODINP=' '
	CALL WNDPOH('SCN file to be shown',' ',' ')
	CALL WNFCL(FCAINP)
	IF (.NOT.WNDNOD('USE_SCN_NODE',NODINP,'SCN','R',NODINP,FILINP)) THEN
	  IF (E_C.EQ.DWC_ENDOFLOOP) GOTO 100	!RETRY OPTION
	  GOTO 100				!REPEAT
	ELSE IF (E_C.EQ.DWC_NULLVALUE) THEN
	  GOTO 100				!RETRY OPTION
	ELSE IF (E_C.EQ.DWC_WILDCARD) THEN
	  GOTO 70				!MUST SPECIFY
	END IF
	IF (.NOT.WNFOP(FCAINP,FILINP,'R')) THEN	!OPEN INPUT SCAN FILE
	  GOTO 70				!RETRY
	END IF
C
 75	CONTINUE
	IF (.NOT.WNDXLP('SCN_LOOPS',FCAINP)) THEN
	  IF (E_C.EQ.DWC_ENDOFLOOP) GOTO 70	!RETRY
	  GOTO 75				!REPEAT
	END IF
C
	CALL WNDPOH('Sectors (grp.obs.fld.chn.seq) to be shown |',' ',' ')
	IF (.NOT.WNDSTQ('USE_SCN_SETS',MXNSET,SETINP,FCAINP)) THEN !NO SETS
 77	  CONTINUE
CC	  CALL WNFCL(FCAINP)
	  GOTO 70
	END IF
	IF (SETINP(0,0).EQ.0) GOTO 77		!NONE SPECIFIED
C
	CEQUAL=0				!DEFAULT: NO
	BB1=.FALSE.
	IF (WNDPAR('CAL_EQUAL',BB1,LB_B,J0,'NO')) THEN
	   IF (BB1) CEQUAL=1
	END IF
C
C READY SHOW
C
	GOTO 900
C
C READY
C
 900	CONTINUE
C
	RETURN					!READY
C
C
	END

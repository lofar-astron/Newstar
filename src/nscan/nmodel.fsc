C+ NMODEL.FSC
C  WNB 900327
C
C  Revisions:
C	WNB 910814	Add (de-)beam
C	WNB 910828	Add RUN
C	HjV 920520	HP does not allow extended source lines
C	WNB 921104	Add J2000
C	WNB 921217	Add AFIND
C	WNB 930514	Make FSC, add manual find
C	WNB 930623	Prepare for Spectral Update
C	WNB 931008	Add EDIT
C	WNB 931119	Add REDIT, FEDIT
C	CMV 940225	Default model file for SAVE and update(use NMODAW)
C	WNB 940821	Add polarisation updates
C	WNB 950626	Add X and Y updates
C	WNB 950630	More update options
C	WNB 950706	Add loops
C	CMV 960122	Warning if /NORUN ignored
C	WNB 990729	Add X00-X03 update types
C
	SUBROUTINE NMODEL
C
C  Main routine to handle source lists
C
C  Result:
C
C
C  Include files:
C
	INCLUDE 'WNG_DEF'
	INCLUDE 'NMO_DEF'
	INCLUDE 'MDU_O_DEF'
	INCLUDE 'STH_O_DEF'
C
C  Parameters:
C
C
C  Arguments:
C
C
C  Function references:
C
	LOGICAL WNDRUN
	LOGICAL NSCSTG
C
C  Data declarations:
C
	INTEGER LEXT			!UPDATE TYPE
	INTEGER STHP                    !SET POINTER
	INTEGER SETNAM(0:7)		!SET NAME
	BYTE STH(0:STH__L-1)		!SET HEADER
C-
C
C PRELIMINARIES
C
	CALL NMOINI				!INIT PROGRAM
	IF (.NOT.WNDRUN()) 
	1	CALL WNCTXT(F_TP,'Ignored option /NORUN')
C
C DISTRIBUTE
C
 12	CONTINUE
	ACTION='HANDLE'				!ASSUME HANDLE
 10	CONTINUE
	CALL NMODAT				!GET USER DATA
	IF (ACT.EQ.'QUI') THEN
	  CALL WNGEX				!READY
	ELSE IF (ACT.EQ.'HAN') THEN		!HANDLE
	  CALL NMODAX(J)
	ELSE IF (ACT.EQ.'HEL') THEN		!HELP
	  CALL WNCTXT(F_TP,' ')
	  CALL WNCTXT(F_TP,
	1	'Model lists come in three flavours:')
	  CALL WNCTXT(F_TP,
	1	'- local:      no known reference RA/DEC')
	  CALL WNCTXT(F_TP,
	1	'- apparent:   known reference RA/DEC')
	  CALL WNCTXT(F_TP,
	1	'- epoch:      known reference RA/DEC for B1950/J2000')
	  CALL WNCTXT(F_TP,
	1	'The l and m specified in the list are offsets w.r.t. the')
	  CALL WNCTXT(F_TP,
	1	'known or unknown reference coordinates, and in essence offsets')
	  CALL WNCTXT(F_TP,
	1	'on a plane perpendicular to the radius at the '//
	1	'reference position.')
	  CALL WNCTXT(F_TP,
	1	'Conversion between types can be done, and a SCN file is then')
	  CALL WNCTXT(F_TP,
	1	'necessary to obtain some data.')
	  CALL WNCTXT(F_TP,
	1	'Conversion between reference coordinates can also be done.')
	  CALL WNCTXT(F_TP,' ')
C
C FROM/TO OLD
C
	ELSE IF (ACT.EQ.'FRO') THEN
	  CALL NMOOFR
	ELSE IF (ACT.EQ.'TO_') THEN
	  CALL NMOOTO
C
C CONVERT EPOCH
C
	ELSE IF (ACT.EQ.'CON') THEN
	  CALL NMOCVT(0)
	ELSE IF (ACT.EQ.'EDI') THEN
	  CALL NMOCVT(1)
	ELSE IF (ACT.EQ.'RED') THEN
	  CALL NMOCVT(2)
	ELSE IF (ACT.EQ.'FED') THEN
	  CALL NMOCVT(3)
C
C (DE-)BEAM
C
	ELSE IF (ACT.EQ.'BEA') THEN
	  CALL NMOBEM
	ELSE IF (ACT.EQ.'DEB') THEN
	  CALL NMOBED
C
C SAVE MODEL
C
	ELSE IF (ACT.EQ.'SAV') THEN
	  JS=NSCSTG(FCAIN,SETS,STH,STHP,SETNAM) !FIND A SET
	  CALL WNDSTR(FCAIN,SETS)		!RESET SET SEARCH
	  CALL NMODAW(J,STH)			!GET MODEL
	  IF (J.LE.0) GOTO 11			!NO MODEL
	  CALL NMOMUI				!SET MODEL USAGE
	  CALL NMOMSC(FCAIN,SETS)		!SAVE MODEL
	  CALL WNFCL(FCAIN)			!CLOSE SCAN FILE
C
C GET MODEL
C
	ELSE IF (ACT.EQ.'GET') THEN
	  CALL NMOMSG(SETS)			!GET MODEL
	  CALL WNFCL(FCAIN)			!CLOSE SCAN FILE
C
C FIND SOURCES
C
	ELSE IF (ACT.EQ.'FIN') THEN
	  IF (OPT.EQ.'POS') THEN
	    CALL NMOFND				!FIND SOURCES
	    CALL NMODAX(J)			!HANDLE
	  ELSE IF (OPT.EQ.'ABS') THEN
	    CALL NMOFNA				!FIND SOURCES
	    CALL NMODAX(J)			!HANDLE
	  ELSE IF (OPT.EQ.'MAN') THEN
#ifdef wn_vx__
	    CALL WNCTXT(F_T,'No manual find possible on this machine')
#else
	    CALL NMOFMD				!FIND SOURCES MANUALLY
	    CALL NMODAX(J)			!HANDLE
#endif
	  END IF
C
C UPDATE MODEL
C
	ELSE IF (ACT.EQ.'UPD') THEN
C
	  IF (OPT.EQ.'SIL') THEN
	    LEXT=MDU_T_SILM			!SPECTRAL UPDATE
	  ELSE IF (OPT.EQ.'EXT') THEN
	    LEXT=MDU_T_EXT			!EXTENDED UPDATE
	  ELSE IF (OPT.EQ.'QUV') THEN
	    LEXT=MDU_T_QUV			!POLARISATION UPDATE
	  ELSE IF (OPT.EQ.'LM') THEN
	    LEXT=MDU_T_LM			!POSITION UPDATE
	  ELSE IF (OPT.EQ.'I') THEN
	    LEXT=MDU_T_I			!INTENSITY UPDATE
	  ELSE IF (OPT.EQ.'PES') THEN
	    LEXT=MDU_T_PEST			!POLARISATION ESTIMATE
	  ELSE IF (OPT.EQ.'X00') THEN
	    LEXT=MDU_T_X00	                !EXTRA TYPES
	  ELSE IF (OPT.EQ.'X01') THEN
	    LEXT=MDU_T_X01	                !EXTRA TYPES
	  ELSE IF (OPT.EQ.'X02') THEN
	    LEXT=MDU_T_X02	                !EXTRA TYPES
	  ELSE IF (OPT.EQ.'X03') THEN
	    LEXT=MDU_T_X03	                !EXTRA TYPES
	  ELSE
	    LEXT=MDU_T_ILM
	  END IF
	  IF (OPTION(4:4).EQ.'X') THEN
	    LEXT=LEXT+MDU_M_CLUST
	  ELSE IF (OPTION(4:4).EQ.'Y') THEN
	    LEXT=LEXT+MDU_M_COMBI+MDU_M_CLUST
	  ELSE IF (OPTION(4:4).EQ.'Z') THEN
	    LEXT=LEXT+MDU_M_CONSTR+MDU_M_CLUST
	  END IF
	  IF (OPTION(5:5).EQ.'L') LEXT=LEXT+MDU_M_LOOP
	  JS=NSCSTG(FCAIN,SETS,STH,STHP,SETNAM) !FIND A SET
	  CALL WNDSTR(FCAIN,SETS)		!RESET SET SEARCH
	  CALL NMODAW(NSRC(0),STH)		!GET MODEL
	  IF (NSRC(0).LE.0) GOTO 11		!NO SOURCES PRESENT
	  CALL NMOMUI				!MODEL USAGE
	  CALL NMODAY				!GET A POSSIBLE OUTPUT NODE
	  CALL NMOUPD(LEXT)			!UPDATE SOURCES
	  IF (FCAOUT.EQ.0) THEN			!WANTED HANDLE
	    CALL NMODAX(J)			!HANDLE
	  ELSE
	    CALL NMOWRS(FCAOUT,GDES)		!WRITE UPDATE
	    CALL WNGEX				!AND STOP
	  END IF
C
C NEW VERSION
C
	ELSE IF (ACT.EQ.'NVS') THEN
	  CALL NMONVS
C
C CONVERT VAX FORMAT
C
	ELSE IF (ACT.EQ.'CVX') THEN
	  CALL NMOCVX
	END IF
C
 11	CONTINUE
	ACTION='QUIT'				!ASSUME READY
	GOTO 10					!MORE
C
C
	END

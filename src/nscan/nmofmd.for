C+ NMOFMD.FOR
C  WNB 930514
C
C  Revisions:
C	WNB 930517	Add GIDS_SOURCES
C	WNB 931006	Text
C       WNB 950611	New LSQ routines
C
	SUBROUTINE NMOFMD
C
C  Find sources on map
C
C  Result:
C	CALL NMOFMD		Find sources on map (pos. only)
C
C
C  PIN references:
C
C	GIDS_SOURCES
C
C  Include files:
C
	INCLUDE 'WNG_DEF'
	INCLUDE 'NMO_DEF'
	INCLUDE 'LSQ_O_DEF'
	INCLUDE 'MPH_O_DEF'		!MAP HEADER
	INCLUDE 'MDH_O_DEF'		!MODEL HEADER
	INCLUDE 'MDL_O_DEF'		!MODEL LINE
C
C  Parameters:
C
C
C  Arguments:
C
C
C  Function references:
C
	LOGICAL WNDPAR			!GET USER DATA
	LOGICAL WNFRD			!READ DATA
	LOGICAL WNMLGA			!GET LSQ AREA
	LOGICAL WNMLTN			!SOLVE LSQ
	CHARACTER*32 WNTTSG		!GET SET NAME
	LOGICAL NMOSLI,NMOSLG		!GET SOURCE LIST
	LOGICAL NMASTG			!GET A MAP
	LOGICAL NGIDOP,NGIDCL		!OPEN/CLOSE GIDS
	LOGICAL NGIDPT			!GET SCREEN POINT
	LOGICAL NGIDLM			!LOAD (PART OF) MAP
C
C  Data declarations:
C
	INTEGER LSQ			!LEAST SQUARES AREA
	INTEGER GID			!GIDS ID
	INTEGER BUT			!BUTTON PRESSED
	BYTE GS1			!GIDS_SOURCES WANTED
	LOGICAL GS4
	REAL RBF(0:1),RB(0:1)		!SCREEN X,Y
	REAL RS(6)			!LSQ COEFFICIENTS
	REAL SOL(6),MU,SD		!LSQ SOLUTION
	INTEGER LIDX			!SOURCE LIST ID
	INTEGER MDLP,MDLPJ,MDLPE	!POINTER TO MODEL
	INTEGER MDLLE,MDLLJ		!LENGTH MODEL LINE
	REAL RANGE(2)			!DATA RANGE
	REAL LINE(0:4095,5)		!MAP LINES
	REAL RM(-1:1,-1:1)		!DATA ARRAY
	INTEGER SNAM(0:7)		!MAP NAME
	INTEGER MPHP			!MAP HEADER POINTER
	BYTE MPH(0:MPHHDL-1)		!MAP HEADER
	  INTEGER*2 MPHI(0:MPHHDL/2-1)
	  INTEGER MPHJ(0:MPHHDL/4-1)
	  REAL MPHE(0:MPHHDL/4-1)
	  DOUBLE PRECISION MPHD(0:MPHHDL/8-1)
	  EQUIVALENCE (MPH,MPHI,MPHJ,MPHE,MPHD)
C-
C
C INIT
C
	IF (.NOT.NMOSLI(1024)) THEN		!MAKE SURE THERE IS A LIST
 900	  CONTINUE
	  CALL WNCTXT(F_TP,'Cannot create source list')
	  CALL WNGEX				!STOP
	END IF
	LIDX=7					!SET SOURCES IN LIST 7
	IF (.NOT.WNMLGA(LSQ,LSQ_T_REAL,6)) THEN	!GET LSQ AREA
	   CALL WNCTXT(F_TP,'ERROR: no work area space')
	   GOTO 102
	END IF
	IF (.NOT.NGIDOP(GID)) THEN
	  CALL WNCTXT(F_TP,'Cannot open GIDS display')
	  GOTO 101
	END IF
	CALL WNCTXT(F_T,'!/Use MB1 to fit source; MB2 to put '//
	1		'clean component; MB3 to stop!/')
C
C DO ALL MAPS
C
 100	CONTINUE
	IF (.NOT.NMASTG(FCAIN,SETS,MPH,MPHP,SNAM)) THEN !NO MORE MAPS
 101	  CONTINUE
	  JS=NGIDCL(GID)			!CLOSE DISPLAY
	  CALL WNMLFA(LSQ)			!FREE LSQ ARAE
 102	  CONTINUE
	  CALL WNFCL(FCAIN)			!CLOSE MAP FILE
	  RETURN				!READY
	END IF
	CALL NMOHZD(GMDH(0,LIDX))		!CLEAR HEADER
	IF (MPHI(MPH_EPT_I).EQ.1) THEN		!1950/2000 COORDINATES
	  GMDHJ(MDH_TYP_J,LIDX)=2		!EPOCH TYPE
	  GMDHE(MDH_EPOCH_E,LIDX)=MPHE(MPH_EPO_E) !EPOCH
	ELSE
	  GMDHJ(MDH_TYP_J,LIDX)=1		!EPOCH TYPE
	  GMDHE(MDH_EPOCH_E,LIDX)=0.		!EPOCH
	END IF
	GMDHJ(MDH_BITS_J,LIDX)=MPHJ(MPH_INST_J)	!INSTRUMENT
	GMDHD(MDH_RA_D,LIDX)=MPHD(MPH_RA_D)	!RA
	GMDHD(MDH_DEC_D,LIDX)=MPHD(MPH_DEC_D)	!DEC
	GMDHD(MDH_FRQ_D,LIDX)=MPHD(MPH_FRQ_D)	!FREQ.
	IF (.NOT.NMOSLG(2*MAXSRN,GMDH(0,LIDX))) GOTO 900 !MAKE SURE SPACE
	MDLP=GMDHJ(MDH_MODP_J,LIDX)-A_OB	!MODEL POINTERS
	MDLPJ=(GMDHJ(MDH_MODP_J,LIDX)-A_OB)/LB_J
	MDLPE=(GMDHJ(MDH_MODP_J,LIDX)-A_OB)/LB_E
	MDLLE=MDLHDL/LB_E			!LENGTH MODEL ENTRY
	MDLLJ=MDLHDL/LB_J
C
C START READ
C
	IF (MPH(MPH_TYP_1).NE.ICHAR('M').OR.
	1	MPH(MPH_TYP_1+1).NE.ICHAR('A').OR.
	1	MPH(MPH_TYP_1+2).NE.ICHAR('P').OR.
	1	MPH(MPH_TYP_1+3).NE.ICHAR(' ')) THEN
	  CALL WNCTXT(F_TP,'Cannot find sources in UV-plane maps')
	  GOTO 101
	END IF
	RANGE(1)=MPHE(MPH_MIN_E)		!SET DATA RANGE
	RANGE(2)=MPHE(MPH_MAX_E)
	IF (.NOT.NGIDLM(GID,FCAIN,MPHJ,1,TAREA(0,0),TAREA(0,1),RANGE,
	1		NODIN,WNTTSG(SNAM,0))) THEN !LOAD MAP
	  CALL WNCTXT(F_TP,'Error loading map in GIDS')
	  GOTO 101
	END IF
	CALL WNCTXT(F_TP,'Current map: !AS',WNTTSG(SNAM,0))
	RB(0)=-1				!START IN CENTRE
	RB(1)=-1
	IF (.NOT.WNDPAR('GIDS_SOURCES',GS1,LB_B,J0,'YES')) GOTO 40 !ASK
	IF (J0.EQ.0) GOTO 40			!ASSUME NO
	IF (J0.LT.0) GOTO 20			!ASSUME YES
	GS4=GS1
	IF (.NOT.GS4) GOTO 40			!NO
 20	CONTINUE
	DO WHILE (NGIDPT(GID,1,TAREA(0,1),RB,RBF,BUT)) !MORE TO DO
	  J2=NINT(RBF(0))			!GRID POINT
	  J3=NINT(RBF(1))
	  IF (BUT.NE.2) THEN			!NOT CLEAN
	    IF (J2-2.LT.-MPHJ(MPH_NRA_J)/2 .OR.
	1	J2+2.GT.MPHJ(MPH_NRA_J)/2-1 .OR.
	1	J3-2.LT.-MPHJ(MPH_NDEC_J)/2 .OR.
	1	J3+2.GT.MPHJ(MPH_NDEC_J)/2-1) THEN
	      CALL WNCTXT(F_T,'too close to edge of map')
	      GOTO 33				!NEXT POINT
	    END IF
	  END IF
	  J0=MPHJ(MPH_MDP_J)+LB_E*(MPHJ(MPH_NRA_J)*MPHJ(MPH_NDEC_J)/2) !LINE 0
	  J1=LB_E*MPHJ(MPH_NRA_J)		!LENGTH LINE
	  IF (BUT.NE.2) THEN			!NOT CLEAN
	    DO I=J3-2,J3+2			!READ LINES
	      IF (.NOT.WNFRD(FCAIN,J1,LINE(0,I-J3+3),
	1		J0+I*J1)) THEN		!READ LINES
 910	        CONTINUE
	        CALL WNCTXT(F_TP,'I/O error map reading')
	        CALL WNGEX			!STOP
	      END IF
	    END DO
	  ELSE					!CLEAN
	      IF (.NOT.WNFRD(FCAIN,J1,LINE(0,3),
	1		J0+J3*J1)) GOTO 910	!READ LINE
	  END IF
C
C DO ALL POINTS
C
	  IF (BUT.NE.2) THEN			!NOT CLEAN
	    R0=-1E30				!FIND MAX.
	    DO I0=2,4				!CENTRE LINES
	      DO I1=J2-1+MPHJ(MPH_NRA_J)/2,J2+1+MPHJ(MPH_NRA_J)/2 !CENTRE POINTS
	        IF (ABS(LINE(I1,I0)).GT.R0) THEN
		  I=I1
		  I2=I0
		  R0=ABS(LINE(I1,I0))
	        END IF
	      END DO
	    END DO
	    J2=I-MPHJ(MPH_NRA_J)/2		!NEW CENTRE POINT
	    J3=J3+I2-3
	    DO I0=-1,1				!GET DATA MATRIX
	      DO I1=-1,1
	        RM(I0,I1)=LINE(I0+I,I1+I2)
	      END DO
	    END DO
	    CALL WNMLIA(LSQ,LSQ_I_ALL)		!ZERO LSQ
	    DO I1=-1,1				!SET DATA
	      DO I3=-1,1
	        RS(1)=1				!GENERAL ELLIPSOID
	        RS(2)=I1
	        RS(3)=I3
	        RS(4)=I1*I1
	        RS(5)=I3*I3
	        RS(6)=I1*I3
	        R1=RM(I1,I3)			!DATA
	        CALL WNMLMN(LSQ,LSQ_C_REAL,RS,1.-.5*(ABS(I3)+ABS(I1))+
	1			.25*ABS(I1*I3),R1) !MAKE EQUATIONS
	      END DO
	    END DO
	    IF (.NOT.WNMLTN(LSQ)) GOTO 30	!CANNOT SOLVE
	    CALL WNMLSN(LSQ,SOL,MU,SD)		!GET SOLUTION
	    R1=SOL(6)*SOL(6)-4*SOL(4)*SOL(5)	!FIND MAX
	    IF (R1.EQ.0) GOTO 30		!FORGET
	    R0=(2*SOL(3)*SOL(4)-SOL(2)*SOL(6))/R1
	    R1=(2*SOL(2)*SOL(5)-SOL(3)*SOL(6))/R1
	    IF (ABS(R0).GT.1 .OR. ABS(R1).GT.1) GOTO 30 !FORGET
	    SOL(1)=SOL(1)+SOL(2)*R0+SOL(3)*R1+SOL(4)*R0*R0+
	1			SOL(5)*R1*R1+SOL(6)*R0*R1 !AMPLITUDE
	    SOL(2)=R1				!DX
	    SOL(3)=R0				!DY
	  ELSE					!CLEAN
	    SOL(1)=LINE(J2+MPHJ(MPH_NRA_J)/2,3)
	    SOL(2)=0
	    SOL(3)=0
	  END IF
	  I1=GMDHJ(MDH_NSRC_J,LIDX)+1		!FILL SOURCE
	  CALL WNGMVZ(MDLHDL,A_E(MDLPE+(I1-1)*MDLLE)) !CLEAR SOURCE
	  A_E(MDLPE+MDL_I_E+(I1-1)*MDLLE)=SOL(1) !FILL SOURCE AMPL
	  A_E(MDLPE+MDL_L_E+(I1-1)*MDLLE)=
	1		((J2+SOL(2))*MPHD(MPH_SRA_D)+
	1			MPHD(MPH_SHR_D))*(360.*3600.) !SET L
	  A_E(MDLPE+MDL_M_E+(I1-1)*MDLLE)=
	1		((J3+SOL(3))*MPHD(MPH_SDEC_D)+
	1			MPHD(MPH_SHD_D))*(360.*3600.) !SET M
	  A_J(MDLPJ+MDL_ID_J+(I1-1)*MDLLJ)=IDEN !SET ID
	  IF (MPHI(MPH_CD_I+7).GT.0) THEN	!SET BEAM
	    I4=MDLBEM_M
	  ELSE
	    I4=0
	  END IF
	  IF (BUT.EQ.2) THEN			!CLEAN
	    A_B(MDLP+MDL_TP_B+(I1-1)*MDLHDL)=MDLCLN_M+I4 !SET CLEAN
	  ELSE
	    A_B(MDLP+MDL_TP_B+(I1-1)*MDLHDL)=I4	!SET TYPE
	  END IF
	  IF (BUT.EQ.2) THEN			!CLEAN
            CALL WNCTXT(F_TP,'Screen= !4$SJ, !4$SJ  Ampl= !9$E10.2'//
	1               ' Position= !10$E10.2, !10$E10.2 ID= !5$SW\C',
	1		NINT(RBF(0)),NINT(RBF(1)),
	1		SOL(1),A_E(MDLPE+MDL_L_E+(I1-1)*MDLLE),
	1		A_E(MDLPE+MDL_M_E+(I1-1)*MDLLE),IDEN)
	  ELSE
            CALL WNCTXT(F_TP,'Screen= !4$SJ, !4$SJ  Ampl= !9$E10.2'//
	1               ' Position= !10$E10.2, !10$E10.2 ID= !5$SW',
	1		NINT(RBF(0)),NINT(RBF(1)),
	1		SOL(1),A_E(MDLPE+MDL_L_E+(I1-1)*MDLLE),
	1		A_E(MDLPE+MDL_M_E+(I1-1)*MDLLE),IDEN)
	  END IF
	  CALL NMOEXF(A_J(MDLPJ+(I1-1)*MDLLJ)) !MAKE CORRECT FORMAT
	  IDEN=MAX(1000,MOD(IDEN+1,10000))
	  GMDHJ(MDH_NSRC_J,LIDX)=
	1		GMDHJ(MDH_NSRC_J,LIDX)+1 !COUNT
	  GOTO 33				!CONTINUE
 30	  CONTINUE
	  CALL WNCTXT(F_TP,'Screen= !4$SJ, !4$SJ Cannot solve',
	1		NINT(RBF(0)),NINT(RBF(1)))
 33	  CONTINUE
	  IF (GMDHJ(MDH_NSRC_J,LIDX).GE.MAXSRN) THEN
	    MAXSRN=MAXSRN+100			!DO MORE
	    IF (.NOT.NMOSLG(2*MAXSRN,GMDH(0,LIDX))) GOTO 900 !MAKE SURE SPACE
	  END IF
	END DO					!NEXT SCREEN POINT
	IF (.NOT.WNDPAR('GIDS_SOURCES',GS1,LB_B,J0,'NO')) GOTO 40 !ASK MORE
	IF (J0.LE.0) GOTO 40			!ASSUME NO
	GS4=GS1
	IF (GS4) GOTO 20			!WANT MORE
C
C FINISH MAP
C
 40	CONTINUE
	CALL NMORDM(LIDX,-1)			!ADD SOURCES TO GENERAL AREA
	GOTO 100				!MORE MAPS
C
C
	END

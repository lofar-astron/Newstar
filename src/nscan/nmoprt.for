C+ NMOPRT.FOR
C  WNB 900827
C
C  Revisions:
C	WNB 910806	Add NMOPRU, PRX
C	WNB 910809	Add NMOPRM
C	WNB 911230	Better print for updates
C	WNB 920113	Add PTI
C	HjV 920520	HP does not allow extended source lines
C	WNB 920810	Typo in NMOPRR test if ra/dec
C	WNB 930928	Add instrument
C	WNB 931011	Add PRS
C	WNB 940821	Add PRP, PRE
C       WNB 950623	Rearrange for new update set up
C       WNB 950629	Remove PRX,PRS,PRP,PRE
C       WNB 950630	Add update option
C       WNB 950705	Printout extended update
C       WNB 950706	Cater for loop printout
C	JPH 960612	Show RA and DEC also in decimal format
C
	SUBROUTINE NMOPRT(TP,RG)
C
C  Print a source model
C
C  Result:
C
C	CALL NMOPRT( TP_J:I, RG_J(0:1):I)
C				Print the general source list on TP from
C				RG(0) till RG(1)
C	CALL NMOPTT( TP_J:I, RG_J(0:1):I)
C				Print totals only
C	CALL NMOPTI( TP_J:I, RG_J(0:1):I, IX_J:I)
C				Print totals only for sources in IX
C	CALL NMOPRR( TP_J:I, RG_J(0:1):I)
C				Print in RA/DEC format
C	CALL NMOPRU( TP_J:I, RG_J(0:1):I)
C				Print the source list and the updates
C	CALL NMOPRM( TP_J:I, RG_J(0:1):I, IMDL_B(0:*):I)
C				Print the model line given in IMDL
C
C  Include files:
C
	INCLUDE 'WNG_DEF'
	INCLUDE 'NMO_DEF'
	INCLUDE 'MDU_O_DEF'			!UPDATE AREA
	INCLUDE 'MDH_O_DEF'			!MODEL HEADER
	INCLUDE 'MDL_O_DEF'			!MODEL LINE
C
C  Entries:
C
C
C  Parameters:
C
C
C  Arguments:
C
	INTEGER TP				!OUTPUT DEVICES
	INTEGER RG(0:1)				!RANGE TO DO
	INTEGER IX				!SOURCE LIST INDEX
	BYTE IMDL(0:*)				!MODEL TO PRINT
C
C  Function references:
C
C
C  Data declarations:
C
	BYTE MDL(0:MDLHDL-1)			!SOURCE ENTRY
	  INTEGER MDLJ(0:MDLHDL/LB_J-1)
	  REAL MDLE(0:MDLHDL/LB_E-1)
	  EQUIVALENCE (MDL,MDLJ,MDLE)
	BYTE MDL1(0:MDLHDL-1)			!SOURCE ENTRY
	  INTEGER MDL1J(0:MDLHDL/LB_J-1)
	  REAL MDL1E(0:MDLHDL/LB_E-1)
	  EQUIVALENCE (MDL1,MDL1J,MDL1E)
	BYTE MDL2(0:MDLHDL-1)			!SOURCE ENTRY
	  INTEGER MDL2J(0:MDLHDL/LB_J-1)
	  REAL MDL2E(0:MDLHDL/LB_E-1)
	  EQUIVALENCE (MDL2,MDL2J,MDL2E)
	INTEGER LIX				!LOCAL SOURCE LIST INDEX
	LOGICAL LRA				!PRINT RA/DEC FORMAT
	LOGICAL LTOT				!TOTAL ONLY
	LOGICAL LUPD				!PRINT UPDATES
	LOGICAL LMDL				!GIVEN MODEL
	REAL RMAX,RMIN,RTOT			!STATISTICS
	INTEGER RCNT,RDEL
	INTEGER JP,SP0,SP1			!UPDATE POINTER
	CHARACTER*8 CHINST(0:MDHNIN-1)		!INSTRUMENTS
	  DATA CHINST /'WSRT','ATCA','Unknown','Unknown',
	1		'Unknown','Unknown','Unknown','Unknown'/
C-
C
C INIT
C
	LRA=.FALSE.				!NORMAL FORMAT
	LTOT=.FALSE.
	GOTO 10
C
C NMOPTT
C
	ENTRY NMOPTT(TP,RG)
C
	LRA=.FALSE.				!NORMAL FORMAT
	LTOT=.TRUE.				!TOTAL ONLY
	GOTO 10
C
C NMOPTI
C
	ENTRY NMOPTI(TP,RG,IX)
C
	LRA=.FALSE.				!NORMAL FORMAT
	LTOT=.TRUE.				!TOTAL ONLY
	LIX=IX					!LIST INDEX
	LUPD=.FALSE.				!NOT UPDATE
	LMDL=.FALSE.				!NOT LOCAL MODEL
	GOTO 13
C
C NMOPRR
C
	ENTRY NMOPRR(TP,RG)
C
	IF (GDESJ(MDH_TYP_J).LE.0) THEN
	  CALL WNCTXT(TP,'!/Cannot show RA/DEC for local mode list!/')
	  RETURN
	END IF
	LRA=.TRUE.				!RA/DEC FORMAT
	LTOT=.FALSE.				!NOT TOTAL ONLY
	GOTO 10
C
C NMOPRU
C
	ENTRY NMOPRU(TP,RG)
C
	LRA=.FALSE.				!NORMAL FORMAT
	LTOT=.FALSE.				!NO TOTAL ONLY
	LUPD=.TRUE.				!PRINT UPDATES
	GOTO 11
C
C NMOPRM
C
	ENTRY NMOPRM(TP,RG,IMDL)
C
	LRA=.FALSE.				!NORMAL FORMAT
	LTOT=.FALSE.				!NO TOTAL ONLY
	LUPD=.FALSE.				!NO UPDATE
	LMDL=.TRUE.				!GIVEN MODEL
	GOTO 12
C
C HEADINGS
C
 10	CONTINUE
	LUPD=.FALSE.				!NO UPDATES
 11	CONTINUE
	LMDL=.FALSE.				!NO GIVEN MODEL
 12	CONTINUE
	LIX=-1					!GENERAL INDEX
 13	CONTINUE
	IF (.NOT.LTOT .AND. .NOT.LMDL) THEN
	  IF (.NOT.LRA) THEN
	    CALL WNCFHD(TP,5,'   #       I         l        m       '//
	1			'ID      Q     U    V     long  short '//
	1			'  PA  S.I.    R.M.       -  ')
	    CALL WNCFHD(TP,6,'          W.U.    arcsec   arcsec     '//
	1			'        %     %    %    arcsec arcsec'//
	1			' deg          r/m2          ')
	    CALL WNCFHD(TP,7,' ')
	    CALL WNCTXT(TP,'!/   #       I         l        m       '//
	1			'ID      Q     U    V     long  short '//
	1			'  PA  S.I.    R.M.       -  ')
	    CALL WNCTXT(TP,'          W.U.    arcsec   arcsec     '//
	1			'        %     %    %    arcsec arcsec'//
	1			' deg          r/m2          ')
	  ELSE
	    CALL WNCFHD(TP,5,'   #       I         RA          DEC     '//
	1			'     ID  '//
	1			'    Q     U    V     long  short   PA'//
	1			'  S.I.    R.M.       -  ')
	    CALL WNCFHD(TP,6,'          W.U.                           '//
	1			'         '//
	1			'    %     %    %    arcsec arcsec deg'//
	1			'          r/m2          ')
	    CALL WNCFHD(TP,7,' ')
	    CALL WNCTXT(TP,'!/   #       I         RA          DEC     '//
	1			'     ID  '//
	1			'    Q     U    V     long  short   PA'//
	1			'  S.I.    R.M.       -  ')
	    CALL WNCTXT(TP,'          W.U.                           '//
	1			'         '//
	1			'    %     %    %    arcsec arcsec deg'//
	1			'          r/m2          ')
	  END IF
	END IF
C
C SHOW TYPE
C
	IF (.NOT.LMDL) THEN
	  IF (GMDHJ(MDH_TYP_J,LIX).EQ.0) THEN
	    CALL WNCTXT(TP,'!/Source list in local mode for !AS!/',
	1		CHINST(IAND(MDHINS_M,GMDHJ(MDH_BITS_J,LIX))))
	  ELSE IF (GMDHJ(MDH_TYP_J,LIX).EQ.2) THEN
	    CALL WNCTXT(TP,'!/Sources at epoch !E9.0 at !32C!DHF8, !DDF7, '//
	1		'!D12.3 MHz for !AS',
	1		GMDHE(MDH_EPOCH_E,LIX), GMDHD(MDH_RA_D,LIX),
	1		GMDHD(MDH_DEC_D,LIX), GMDHD(MDH_FRQ_D,LIX),
	1		CHINST(IAND(MDHINS_M, GMDHJ(MDH_BITS_J,LIX))))
	    CALL WNCTXT(TP,'!31C!10$DPF10.5, !10$DAF10.5!/',
	1		GMDHD(MDH_RA_D,LIX), GMDHD(MDH_DEC_D,LIX))
	  ELSE
	    CALL WNCTXT(TP,'!/Apparent sources at !32C!DHF8, !DDF7, '//
	1		'!D12.3 MHz for !AS',
	1		GMDHD(MDH_RA_D,LIX),
	1		GMDHD(MDH_DEC_D,LIX),GMDHD(MDH_FRQ_D,LIX),
	1		CHINST(IAND(MDHINS_M,GMDHJ(MDH_BITS_J,LIX))))
	    CALL WNCTXT(TP,'!31C!10$DPF10.5, !10$DAF10.5!/',
	1		GMDHD(MDH_RA_D,LIX), GMDHD(MDH_DEC_D,LIX))
	  END IF
	END IF
C
C LIST SOURCES
C
	RCNT=0					!COUNT SOURCES
	RDEL=0
	RMAX=-1E20
	RMIN=1E20
	RTOT=0
	IF (LMDL) THEN				!GIVEN MODEL
	  J=RG(1)
	ELSE
	  J=GMDHJ(MDH_NSRC_J,LIX)
	END IF
	DO I=MAX(1,RG(0))-1,MIN(RG(1),J)-1
	  IF (LMDL) THEN			!GIVEN MODEL
	    CALL WNGMV(MDLHDL,IMDL,MDL)		!GET SOURCE
	  ELSE
	    CALL WNGMV(MDLHDL,A_B(GMDHJ(MDH_MODP_J,LIX)+I*MDLHDL-A_OB),
	1		MDL)			!GET SOURCE
	  END IF
	  IF (MDLE(MDL_I_E).EQ.0) THEN
	    RDEL=RDEL+1				!COUNT
	    IF (.NOT.LTOT) THEN
	      CALL WNCTXT(TP,'!5$UJ!10$E10.3',
	1		I+1,0.)
	    END IF
	  ELSE
	    RTOT=RTOT+MDLE(MDL_I_E)		!STATISTICS
	    RMAX=MAX(RMAX,ABS(MDLE(MDL_I_E)))
	    RMIN=MIN(RMIN,ABS(MDLE(MDL_I_E)))
	    RCNT=RCNT+1
	    IF (.NOT.LTOT) THEN
	      IF (.NOT.LRA) THEN
	        CALL NMOEXT(MDL)		!MAKE CORRECT FORMAT
		IF (LUPD) THEN
		  JP=MDLJ(MDL_RS_E)		!SAVE UPDATE BUFFER
		  MDLE(MDL_RS_E)=0
		END IF
		CALL WNCTXT(TP,'!5$UJ!10$E10.3!9$E12.2!9$E12.2'//
	1		'!6$UJ\-!1$XB!1$XB'//
	1		'!6$E9.1!6$E9.1!6$E9.2'//
	1		'!7$E8.2!7$E8.2!5$E6.0'//
	1		'!6$E9.2!9$E9.2!9$E9.2',
	1		I+1,MDLE(MDL_I_E),MDLE(MDL_L_E),MDLE(MDL_M_E),
	1		MDLJ(MDL_ID_J),MDL(MDL_TP_B),MDL(MDL_TP1_B),
	1		MDLE(MDL_Q_E),MDLE(MDL_U_E),MDLE(MDL_V_E),
	1		MDLE(MDL_EXT_E),MDLE(MDL_EXT_E+1),
	1		MDLE(MDL_EXT_E+2),
	1		MDLE(MDL_SI_E),MDLE(MDL_RM_E),0.)
		IF (LUPD) THEN
		  MDLJ(MDL_RS_E)=JP		!RESTORE UPDATE BUFFER
		END IF
		IF (LUPD .AND. JP.NE.0) THEN 	!SHOW UPDATES
		  J0=A_J(JP+MDU_OFF_J)	 	!OFFSET THIS ONE
		  DO WHILE(A_J(JP+MDU_RAR_J).NE.0)
		    JP=A_J(JP+MDU_RAR_J)  	!FIND CORRECT CALCULATION AREA
		  END DO
		  SP0=A_J(JP+MDU_SOL_J)+J0*A_J(JP+MDU_NUN_J) !SOLUTION
		  SP1=SP0+A_J(JP+MDU_NUN_J)*A_J(JP+MDU_NSRC_J)
		  R0=MDLE(MDL_I_E)		!SAVE I
		  IF (IAND(A_J(JP+MDU_TYPE_J),MDU_T_ILM).NE.0) THEN !NORMAL
		    CALL WNCTXT(TP,'!9C!10$E10.3!9$E12.2!9$E12.2',
	1		A_E(SP0+0),A_E(SP0+1),A_E(SP0+2))
		    IF (IAND(A_J(JP+MDU_TYPE_J),MDU_M_LOOP).EQ.0) THEN
		       CALL WNCTXT(TP,'!9C!10$E10.3!9$E12.2!9$E12.2',
	1		    A_E(SP1+0),A_E(SP1+1),A_E(SP1+2))
		    END IF
		  ELSE IF (IAND(A_J(JP+MDU_TYPE_J),MDU_T_I).NE.0) THEN !I
		    CALL WNCTXT(TP,'!9C!10$E10.3',
	1		A_E(SP0+0))
		    IF (IAND(A_J(JP+MDU_TYPE_J),MDU_M_LOOP).EQ.0) THEN
		       CALL WNCTXT(TP,'!9C!10$E10.3',
	1		    A_E(SP1+0))
		    END IF
		  ELSE IF (IAND(A_J(JP+MDU_TYPE_J),MDU_T_LM).NE.0) THEN !LM
		    CALL WNCTXT(TP,'!19C!9$E12.2!9$E12.2',
	1		A_E(SP0+0),A_E(SP0+1))
		    IF (IAND(A_J(JP+MDU_TYPE_J),MDU_M_LOOP).EQ.0) THEN
		       CALL WNCTXT(TP,'!19C!9$E12.2!9$E12.2',
	1		    A_E(SP1+0),A_E(SP1+1))
		    END IF
		  ELSE IF (IAND(A_J(JP+MDU_TYPE_J),MDU_T_SILM).NE.0) THEN !SI
		    CALL WNCTXT(TP,'!9C!10$E10.3!9$E12.2!9$E12.2!83C!6$E9.2',
	1		A_E(SP0+0),A_E(SP0+1),A_E(SP0+2),A_E(SP0+3))
		    IF (IAND(A_J(JP+MDU_TYPE_J),MDU_M_LOOP).EQ.0) THEN
		       CALL WNCTXT(TP,'!9C!10$E10.3!9$E12.2!9$E12.2!83C!6$E9.2',
	1		    A_E(SP1+0),A_E(SP1+1),A_E(SP1+2),A_E(SP1+3))
		    END IF
		  ELSE IF (IAND(A_J(JP+MDU_TYPE_J),MDU_T_EXT).NE.0) THEN
		     CALL WNGMVZ(MDLHDL,MDL1)	!PREPARE PRINT
		     CALL WNGMVZ(MDLHDL,MDL2)
		     DO I1=0,2
			MDL1E(MDL_EXT_E+I1)=A_E(SP0+I1)
			MDL2E(MDL_EXT_E+I1)=A_E(SP1+I1)
		     END DO
		     CALL NMOEXT(MDL1)
		     CALL NMOEXT(MDL2)
		     CALL WNCTXT(TP,'!64C!7$E8.2!7$E8.2!5$E6.0',
	1		  MDL1E(MDL_EXT_E+0),MDL1E(MDL_EXT_E+1),
	1		  MDL1E(MDL_EXT_E+2))
		     IF (IAND(A_J(JP+MDU_TYPE_J),MDU_M_LOOP).EQ.0) THEN
			CALL WNCTXT(TP,'!64C!7$E8.2!7$E8.2!5$E6.0',
	1		     MDL2E(MDL_EXT_E+0),MDL2E(MDL_EXT_E+1),
	1		     MDL2E(MDL_EXT_E+2))
		     END IF
		  ELSE IF (IAND(A_J(JP+MDU_TYPE_J),MDU_T_QUV).NE.0) THEN !POL
		    IF (R0.NE.0) THEN
		      CALL WNCTXT(TP,'!45C!6$E9.1!6$E9.1!6$E9.2',
	1		    100*A_E(SP0+0)/R0,
	1		    100*A_E(SP0+1)/R0,
	1		    100*A_E(SP0+2)/R0)
		      IF (IAND(A_J(JP+MDU_TYPE_J),MDU_M_LOOP).EQ.0) THEN
			 CALL WNCTXT(TP,'!45C!6$E9.1!6$E9.1!6$E9.2',
	1		      100*A_E(SP1+0)/R0,
	1		      100*A_E(SP1+1)/R0,
	1		      100*A_E(SP1+2)/R0)
		      END IF
		    END IF
		  ELSE				!EXTENSION !!!
		  END IF
		END IF
	      ELSE
		CALL WNMCLM(GMDHD(MDH_RA_D,LIX),GMDHD(MDH_DEC_D,LIX),
	1		MDLE(MDL_L_E),MDLE(MDL_M_E),D0,D1) !MAKE RA/DEC
	        CALL NMOEXT(MDL)		!MAKE CORRECT FORMAT
		CALL WNCTXT(TP,'!5$UJ!10$E10.3!13$DHF8!13$DDF8'//
	1		'!6$UJ\-!1$XB!1$XB'//
	1		'!6$E9.1!6$E9.1!6$E9.2'//
	1		'!7$E8.2!7$E8.2!5$E6.0'//
	1		'!6$E9.2!9$E9.2!9$E9.2',
	1		I+1,MDLE(MDL_I_E),D0,D1,
	1		MDLJ(MDL_ID_J),MDL(MDL_TP_B),MDL(MDL_TP1_B),
	1		MDLE(MDL_Q_E),MDLE(MDL_U_E),MDLE(MDL_V_E),
	1		MDLE(MDL_EXT_E),MDLE(MDL_EXT_E+1),
	1		MDLE(MDL_EXT_E+2),
	1		MDLE(MDL_SI_E),MDLE(MDL_RM_E),0.)
	      END IF
	    END IF
	  END IF
	END DO
C
C SHOW TOTAL
C
	IF (.NOT.LMDL) THEN
	  IF (RCNT.EQ.0) THEN
	    RMAX=0.
	    RMIN=0.
	  END IF
	  CALL WNCTXT(TP,'!/!UJ sources (!UJ deleted) with !E10.3 W.U.'//
	1		' (Max= !E10.3, Min= !E10.3)!/',
	1		RCNT+RDEL,RDEL,RTOT,RMAX,RMIN)
	END IF
C
C FINISH
C
	IF (.NOT.LTOT .AND. .NOT.LMDL) THEN		!RESET HEADINGS
	  CALL WNCFHD(TP,-5,' ')
	  CALL WNCFHD(TP,-6,' ')
	  CALL WNCFHD(TP,-7,' ')
	END IF
C
	RETURN
C
C
	END

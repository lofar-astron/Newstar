C+ NSCOTO.FOR
C  WNB 900808
C
C  Revisions:
C	WNB 910730	Correct gain corrections
C	HjV 920520	HP does not allow extended source lines
C	WNB 930127	Backup FRQC
C	HjV 930311	Change some text
C	WNB 930607	New weight version 3
C	HJV 930618	Symbolic names for mask bits in CBITS_O_DEF
C	WNB 930803	CBITS_DEF
C	WNB 930819	Add STH_DIPC
C	WNB 931001	Typo dipole code
C
	SUBROUTINE NSCOTO
C
C  Load WSRT data into old SCN file
C
C  Result:
C
C	CALL NSCOTO	will load WSRT data in old SCN file from SCN file
C
C  Include files:
C
	INCLUDE 'WNG_DEF'
	INCLUDE 'NSC_DEF'
	INCLUDE 'CBITS_DEF'
	INCLUDE 'GFH_O_DEF'			!GENERAL FILE HEADER
	INCLUDE 'SGH_O_DEF'			!SUB-GROUP HEADER
	INCLUDE 'STH_O_DEF'			!SET HEADER
	INCLUDE 'SCH_O_DEF'			!SCAN HEADER
C
C  Parameters:
C
C
C  Arguments:
C
C
C  Function references:
C
	LOGICAL WNFOP				!OPEN FILE
	LOGICAL WNFRD				!READ DATA
	LOGICAL WNFWR				!WRITE DATA
	INTEGER WNFEOF				!FILE POSITION
	INTEGER WNCALN				!STRING LENGTH
	CHARACTER*32 WNTTSG			!TRANSLATE SET NAME
	LOGICAL NSCSTG				!GET A SET
C
C  Data declarations:
C
	INTEGER UFL				!CURRENT UNFLAG
	BYTE GFH(0:GFHHDL-1)			!SET HEADER
	  INTEGER*2 GFHI(0:GFHHDL/2-1)
	  INTEGER   GFHJ(0:GFHHDL/4-1)
	  REAL GFHE(0:GFHHDL/4-1)
	  REAL*8 GFHD(0:GFHHDL/8-1)
	  EQUIVALENCE (GFH,GFHI,GFHJ,GFHE,GFHD)
	BYTE STH(0:STHHDL-1)			!SET HEADER
	  INTEGER*2 STHI(0:STHHDL/2-1)
	  INTEGER   STHJ(0:STHHDL/4-1)
	  REAL STHE(0:STHHDL/4-1)
	  REAL*8 STHD(0:STHHDL/8-1)
	  EQUIVALENCE (STH,STHI,STHJ,STHE,STHD)
	BYTE SCH(0:SCHHDL-1)			!SCAN HEADER
	  INTEGER*2 SCHI(0:SCHHDL/2-1)
	  INTEGER   SCHJ(0:SCHHDL/4-1)
	  REAL SCHE(0:SCHHDL/4-1)
	  REAL*8 SCHD(0:SCHHDL/8-1)
	  EQUIVALENCE (SCH,SCHI,SCHJ,SCHE,SCHD)
	BYTE OFH(0:192-1)			!OLD FILE HEADER
	  CHARACTER*192 OFHC
	  INTEGER*2 OFHI(0:192/2-1)
	  INTEGER   OFHJ(0:192/4-1)
	  REAL OFHE(0:192/4-1)
	  REAL*8 OFHD(0:192/8-1)
	  EQUIVALENCE (OFH,OFHC,OFHI,OFHJ,OFHE,OFHD)
	BYTE OSH(0:400-1)			!OLD SET HEADER
	  INTEGER*2 OSHI(0:400/2-1)
	  INTEGER   OSHJ(0:400/4-1)
	  REAL OSHE(0:400/4-1)
	  REAL*8 OSHD(0:400/8-1)
	  EQUIVALENCE (OSH,OSHI,OSHJ,OSHE,OSHD)
	BYTE OSC(0:1600-1,0:3)			!OLD SCAN HEADER
	  INTEGER*2 OSCI(0:1600/2-1,0:3)
	  INTEGER   OSCJ(0:1600/4-1,0:3)
	  REAL OSCE(0:1600/4-1,0:3)
	  REAL*8 OSCD(0:1600/8-1,0:3)
	  EQUIVALENCE (OSC,OSCI,OSCJ,OSCE,OSCD)
	INTEGER*2 ODAT(0:2,0:800)		!DATA ARRAY
	INTEGER*2 IFRT(0:MXNIFR-1,0:3)		!IFR TABLE
	INTEGER IFRD(9,0:MXNIFR-1)		!IFR DESCRIPTOR
	INTEGER POLS(0:3)			!POL. TRANSLATION
	INTEGER COH(2),CSC(2),CSH(2),CIFR(2)	!OH/SC/SH POINTERS
	INTEGER STHP				!SET HEADER PTR
	INTEGER SETNAM(0:7)			!SET NAME
	CHARACTER*32 SETSTR			!SET STRING NAME
	CHARACTER*8 POLC			!POL.CODE
	INTEGER NAUTC				!# OF AUTOCORRELATIONS INPUT
	INTEGER ONIFR				!# OF OUTPUT IFRS
	BYTE DUMMY(30000)			!TO READ OH/SH
	  INTEGER*2 DUMMYI(15000)
	  EQUIVALENCE (DUMMY,DUMMYI)
C-
C
C INIT
C
	COH(1)=0				!INIT POINTERS
	CSC(1)=0
	CSH(1)=0
	CIFR(1)=0
	CALL WNDDUF(UFL)			!GET CURRENT UN-FLAG
	UFL=IAND(FL_ALL,NOT(UFL))		!MAKE SELECTOR
	IF (.NOT.WNFOP(OMCA,OFILE,'W')) THEN
 10	  CONTINUE
	  CALL WNCTXT(F_TP,'!/I/O error output file')
	  GOTO 800
	END IF
	IF (.NOT.WNFRD(FCAIN,GFHHDL,GFH,0)) THEN !READ FILE HEADER
 11	  CONTINUE
	  CALL WNCTXT(F_TP,'!/I/O error input file')
	  GOTO 800
	END IF
	IF (.NOT.NSCSTG(FCAIN,SETS,STH(0),STHP,SETNAM)) THEN !GET FIRST SET
	  CALL WNCTXT(F_TP,'!/Cannot find a Sector')
	  GOTO 800
	END IF
C
C MAKE FILE HEADER
C
	CALL WNGMVZ(192,OFH(0))			!CLEAR HEADER
	CALL WNGMV(4,GFH(GFH_ID_1),OFH(0))	!ID
	OFHI(2)=192				!LENGTH
	CALL WNGMV(32,GFH(GFH_CDAT_1),OFH(6))	!CREATION/UPDATE DATES/TIMES
	OFHI(19)=GFHJ(GFH_RCNT_J)		!REV. COUNT
	OFHJ(10)=40				!SET LINK LIST
	OFHJ(11)=40
	OFHJ(12)=48				!IFR ERRORS LIST
	OFHJ(13)=48
	OFHI(28)=0				!# OF SETS
	OFHI(29)=14				!# OF TELESCOPES
	OFHI(30)=2				!VERSION
	CALL WNGMFS(30,'0123456789ABCD',OFH(62)) !TEL. NAMES
	OFHI(46)=4				!# OF BYTES PER DATA POINT
	OFHI(47)=1				!DATA CODE
	CALL WNGMV(12,STH(STH_FIELD_1),OFH(120)) !FIELD NAME
	CALL WNGMV(4,STH(STH_EPO_1),OFH(132))	!EPOCH
	CALL WNGMV(16,STH(STH_RAE_1),OFH(136))	!RA/DEC
	CALL WNGMV(8,STH(STH_FRQC_1),OFH(152))	!FREQ
	OFHI(80)=10				!BASIC INTEGR. TIME
	IF (.NOT.WNFWR(OMCA,192,OFH,0)) THEN	!WRITE FILE HEADER
	  GOTO 10
	END IF
	GOTO 101				!DO SET
C
C READ A SET
C
 100	CONTINUE
	IF (.NOT.NSCSTG(FCAIN,SETS,STH(0),STHP,SETNAM)) THEN !GET NEXT SET
	  GOTO 800
	END IF
 101	CONTINUE
	SETSTR=WNTTSG(SETNAM,0)			!GET SET NAME
	CALL WNGMVZ(400,OSH(0))			!CLEAR SET HEADER
	OSHI(4)=400				!LENGTH
	OSHI(5)=2				!VERSION
	OSHI(6)=ISHFT(IAND(STHJ(STH_DIPC_J),'03'X),2)+ !WEST TEL
	1		IAND('03'X,ISHFT(STHJ(STH_DIPC_J),-20)) !EAST DIP. CODE
	OSHI(7)=STHI(STH_BEC_I)			!BACKEND CODE
	OSHI(8)=STHI(STH_CHAN_I)		!CHANNEL
	OSHI(9)=STHI(STH_PLN_I)			!# OF POL.
	OSHJ(5)=STHJ(STH_VNR_J)			!VOLG NR.
	OSHE(6)=STHE(STH_OEP_E)			!OBS. DATE
	OSHE(9)=STHD(STH_RA_D)			!RA
	OSHE(10)=STHD(STH_DEC_D)		!DEC
	OSHE(11)=STHD(STH_FRQ_D)		!FREQ
	OSHE(12)=STHE(STH_BAND_E)		!BANDWIDTH
	IF (STHJ(STH_OHP_J).NE.0) THEN		!SET OH
	  IF (STHJ(STH_OHP_J).NE.COH(1)) THEN	!WRITE OH
	    IF (.NOT.WNFRD(FCAIN,STHJ(STH_NOH_J),
	1		DUMMY,STHJ(STH_OHP_J))) THEN
	      GOTO 10				!READ OH ERROR
	    END IF
	    OSHJ(13)=WNFEOF(OMCA)		!SET OH POINTER
	    IF (.NOT.WNFWR(OMCA,STHJ(STH_NOH_J),DUMMY,OSHJ(13))) THEN
	      GOTO 11				!WRITE OH
	    END IF
	    COH(1)=STHJ(STH_OHP_J)		!SAVE CHECK POINTERS
	    COH(2)=OSHJ(13)
	  ELSE
	    OSHJ(13)=COH(2)			!SET OH POINTER
	  END IF
	END IF
	IF (STHJ(STH_SCP_J).NE.0) THEN		!SET SC
	  IF (STHJ(STH_SCP_J).NE.CSC(1)) THEN	!WRITE SC
	    IF (.NOT.WNFRD(FCAIN,STHJ(STH_NSC_J),
	1		DUMMY,STHJ(STH_SCP_J))) THEN
	      GOTO 10				!READ SC ERROR
	    END IF
	    OSHJ(14)=WNFEOF(OMCA)		!SET SC POINTER
	    IF (.NOT.WNFWR(OMCA,STHJ(STH_NSC_J),DUMMY,OSHJ(14))) THEN
	      GOTO 11				!WRITE SC
	    END IF
	    CSC(1)=STHJ(STH_SCP_J)		!SAVE CHECK POINTERS
	    CSC(2)=OSHJ(14)
	  ELSE
	    OSHJ(14)=CSC(2)			!SET OH POINTER
	  END IF
	END IF
	IF (STHJ(STH_SHP_J).NE.0) THEN		!SET SH
	  IF (STHJ(STH_SHP_J).NE.CSH(1)) THEN	!WRITE SH
	    IF (.NOT.WNFRD(FCAIN,STHJ(STH_NSH_J),
	1		DUMMY,STHJ(STH_SHP_J))) THEN
	      GOTO 10				!READ SH ERROR
	    END IF
	    OSHJ(15)=WNFEOF(OMCA)		!SET SH POINTER
	    IF (.NOT.WNFWR(OMCA,STHJ(STH_NSH_J),DUMMY,OSHJ(15))) THEN
	      GOTO 11				!WRITE SH
	    END IF
	    CSH(1)=STHJ(STH_SHP_J)		!SAVE CHECK POINTERS
	    CSH(2)=OSHJ(15)
	  ELSE
	    OSHJ(15)=CSH(2)			!SET OH POINTER
	  END IF
	END IF
	OSHE(16)=STHE(STH_HAB_E)		!START HA
	OSHE(17)=STHE(STH_HAI_E)		!INCR. HA
	OSHE(18)=OSHE(17)*360.*240.		!TIME INCR.
	CALL WNGMV(4,STH(STH_OBS_1),OSH(76))	!DAY/YEAR
	OSHE(20)=STHE(STH_HAV_E)		!HA AVERAGE
	CALL WNGMV(56,STH(STH_RTP_1),OSH(84))	!TEL. POS.
	OSHI(70)=OFHI(28)			!SET #
	OFHI(28)=OSHI(70)+1
	OSHI(72)=STHJ(STH_SCN_J)		!# OF SCANS
	IF (STHI(STH_PLN_I).EQ.1) THEN		!POL. CODES
	  POLC='XX'
	ELSE IF (STHI(STH_PLN_I).EQ.2) THEN
	  POLC='XXYY'
	ELSE IF (STHI(STH_PLN_I).EQ.4) THEN
	  POLC='XXXYYXYY'
	END IF
	CALL WNGMFS(8,POLC,OSH(200))		!POL.CODES
	IF (STHJ(STH_IFRP_J).NE.0) THEN		!SET IFR
	  IF (STHJ(STH_IFRP_J).NE.CIFR(1)) THEN	!WRITE IFR
	    IF (.NOT.WNFRD(FCAIN,2*STHJ(STH_NIFR_J),
	1		DUMMY,STHJ(STH_IFRP_J))) THEN
	      GOTO 10				!READ IFR ERROR
	    END IF
	    NAUTC=0				!ASSUME NO AUTOCORRELATION
	    I=0					!GO THROUGH LIST
	    DO WHILE (I.LT.STHJ(STH_NIFR_J) .AND. DUMMYI(I+1)/256.EQ.
	1		MOD(DUMMYI(I+1),256))	!FIND AUTOCORRELATIONS
	      NAUTC=NAUTC+1			!FOUND
	      I=I+1				!FIND MORE
	    END DO
	    ONIFR=STHJ(STH_NIFR_J)-NAUTC	!OUTPUT IFRS
	    OSHJ(54)=WNFEOF(OMCA)		!SET IFR POINTER
	    IF (.NOT.WNFWR(OMCA,2*ONIFR,DUMMYI(NAUTC+1),OSHJ(54))) THEN
	      GOTO 11				!WRITE IFR
	    END IF
	    CIFR(1)=STHJ(STH_IFRP_J)		!SAVE CHECK POINTERS
	    CIFR(2)=OSHJ(54)
	  ELSE
	    OSHJ(54)=CIFR(2)			!SET IFR POINTER
	  END IF
	END IF
	OSHI(71)=(440+4*ONIFR)
	1		*STHI(STH_PLN_I)	!DATA LENGTH
	J0=WNFEOF(OMCA)				!PTR SET HEADER
	DO I=0,STHI(STH_PLN_I)-1		!SET POL. DATA
	  OSHI(104+I)=ONIFR			!# IFR
	  OSHJ(54+I)=OSHJ(54)			!PTR IFR TABLE
	  OSHJ(58+I)=J0+400+I*(440+4*ONIFR)	!PTR TO DATA
	END DO
	J1=OFHJ(11)				!LINK SET: LAST SET
	OFHJ(11)=J0				!NEW LAST
	OSHJ(0)=40				!NEW LINK
	IF (OFHJ(10).EQ.40) OFHJ(10)=J0		!NEW LINK HEAD
	OSHJ(1)=J1
	IF (.NOT.WNFWR(OMCA,400,OSH(0),J0)) GOTO 10 !WRITE SET HEADER
	IF (.NOT.WNFWR(OMCA,4,J0,J1)) GOTO 10	!SET IN CHAIN
	IF (.NOT.WNFWR(OMCA,192,OFH(0),0)) GOTO 10 !WRITE FILE HEADER
	CALL WNCTXT(F_TP,'!AS being copied to Sector !UI',
	1		SETSTR,OSHI(70))
C
C COPY DATA
C
	J0=J0+400				!OUTPUT POINTER
	DO I=0,STHJ(STH_SCN_J)-1		!ALL SCANS
	  IF (.NOT.WNFRD(FCAIN,SCHHDL,SCH(0),
	1		STHJ(STH_SCNP_J)+I*STHJ(STH_SCNL_J))) GOTO 11 !READ SCH
	  IF (.NOT.WNFRD(FCAIN,6*STHI(STH_PLN_I)*STHJ(STH_NIFR_J),
	1		ODAT(0,0),STHJ(STH_SCNP_J)+I*STHJ(STH_SCNL_J)+
	1		SCHHDL)) GOTO 11	!READ DATA
	  DO I1=0,STHI(STH_PLN_I)-1		!ALL POL.
	    CALL WNGMVZ(440,OSC(0,I1))		!EMPTY SCAN HEADER
	    OSCI(0,I1)=2			!VERSION
	    OSCI(1,I1)=440			!LENGTH
	    OSCE(1,I1)=SCHE(SCH_HA_E)		!HA
	    OSCE(2,I1)=SCHE(SCH_SCAL_E)		!SCALE
	    IF (IAND(SCHJ(SCH_BITS_J),FL_ALL).EQ.0) THEN !NOT DELETED
	      OSC(38,I1)=0
	    ELSE
	      OSC(38,I1)=1			!DELETE SCAN
	    END IF
	    OSCE(12,I1)=SCHE(SCH_EXT_E)		!EXTINCTION
	    OSCE(13,I1)=SCHE(SCH_REFR_E)	!REFRACTION
	    IF (I1.EQ.0) THEN			!SET XX
	      OSCE(3,I1)=SCHE(SCH_REDNS_E+1)	!RED. PHASE NOISE
	      OSCE(4,I1)=SCHE(SCH_ALGNS_E+1)	!ALIGN PHASE NOISE
	      OSCE(5,I1)=SCHE(SCH_ALGNS_E+0)	!ALIGN GAIN NOISE
	      OSCE(7,I1)=SCHE(SCH_REDNS_E+0)	!RED. GAIN NOISE
	      DO I2=0,STHTEL-1			!CORRECTIONS
		I3=2*I2				!OFFSET
		OSCE(72+I2,I1)=SCHE(SCH_REDC_E+I3+0) !RED. GAIN
		OSCE(28+I2,I1)=SCHE(SCH_REDC_E+I3+1) !RED. PHASE
		OSCE(58+I2,I1)=SCHE(SCH_REDC_E+I3+0)+ !SRT GAIN
	1			SCHE(SCH_ALGC_E+I3+0)+
	1			SCHE(SCH_OTHC_E+I3+0)
		OSCE(14+I2,I1)=SCHE(SCH_REDC_E+I3+1)+ !SRT PHASE
	1			SCHE(SCH_ALGC_E+I3+1)+
	1			SCHE(SCH_OTHC_E+I3+1)
	      END DO
	    ELSE IF ((I1.EQ.1 .AND. STHI(STH_PLN_I).EQ.2) .OR.
	1		(I1.EQ.3 .AND. STHI(STH_PLN_I).EQ.4)) THEN !SET YY
	      OSCE(3,I1)=SCHE(SCH_REDNS_E+3)	!RED. PHASE NOISE
	      OSCE(4,I1)=SCHE(SCH_ALGNS_E+3)	!ALIGN PHASE NOISE
	      OSCE(5,I1)=SCHE(SCH_ALGNS_E+2)	!ALIGN GAIN NOISE
	      OSCE(7,I1)=SCHE(SCH_REDNS_E+2)	!RED. GAIN NOISE
	      DO I2=0,STHTEL-1			!CORRECTIONS
		I3=2*STHTEL+2*I2		!OFFSET
		OSCE(72+I2,I1)=SCHE(SCH_REDC_E+I3+0) !RED. GAIN
		OSCE(28+I2,I1)=SCHE(SCH_REDC_E+I3+1) !RED. PHASE
		OSCE(58+I2,I1)=SCHE(SCH_REDC_E+I3+0)+ !SRT GAIN
	1			SCHE(SCH_ALGC_E+I3+0)+
	1			SCHE(SCH_OTHC_E+I3+0)
		OSCE(14+I2,I1)=SCHE(SCH_REDC_E+I3+1)+ !SRT PHASE
	1			SCHE(SCH_ALGC_E+I3+1)+
	1			SCHE(SCH_OTHC_E+I3+1)
	      END DO
	    END IF
	    OSCE(6,I1)=SCHE(SCH_MAX_E)		!MAX. COS/SIN
	    DO I2=NAUTC,ONIFR-1			!ALL DATA
	      I3=I2-NAUTC			!OUTPUT POINTER
	      I4=ODAT(0,I1+I2*STHI(STH_PLN_I))	!WEIGHT/FLAG
	      IF (IAND(UFL,I4).EQ.0) THEN	!NOT FLAGGED DATA
		OSCI(220+2*I3,I1)=ODAT(1,I1+I2*STHI(STH_PLN_I)) !COS
		OSCI(220+2*I3+1,I1)=ODAT(2,I1+I2*STHI(STH_PLN_I)) !SIN
	      ELSE
		OSCI(220+2*I3,I1)=-32768
		OSCI(220+2*I3+1,I1)=-32768
	      END IF
	    END DO
	    IF (.NOT.WNFWR(OMCA,440+4*ONIFR,OSC(0,I1),
	1		J0)) GOTO 10		!WRITE DATA
	    J0=J0+440+4*ONIFR			!OUTPUT PTR
	  END DO
	END DO
	GOTO 100				!NEXT SET
C
 800	CONTINUE
	CALL WNFCL(OMCA)			!CLOSE OUTPUT
	CALL WNFCL(FCAIN)			!CLOSE INPUT
	RETURN					!READY
C
C
	END

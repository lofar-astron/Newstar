C+ NSCQFN.FOR
C  WNB 940803
C
C  Revisions:
C
	LOGICAL FUNCTION NSCQFN(QUA,FCA,ORDER,STHU,INFO,PINFO)
C
C  Get next Qube field
C
C  Result:
C
C	NSCQFN_L = NSCQFN( QUA_J:I, FCA_J:I, ORDER_J:I,
C			   STHU_B(0:*):O,
C                          INFO_J(QINFO__L:QINFO__H):O,
C			   PINFO_J(QINFO_L:QINFO_H):O)
C				Get next Qube field, to be read in ORDER
C				specified.
C				STH is a sector header for general info
C                               QUA is the control area pointer, INFO
C                               the field #, (max) # of freq, ha, ifr;
C				PINFO ptrs (0,f,ha,i) to tables.
C	NSCQFR_L = NSCQFR( QUA_J:I, FCA_J:I)
C				Reset field search
C
C  Include files:
C
	INCLUDE 'WNG_DEF'
	INCLUDE 'SSH_O_DEF'		!SET FIELD DEFINITIONS
	INCLUDE 'CBITS_DEF'             !BIT DEFINITIONS
	INCLUDE 'QUB_O_DEF'		!QUBE DEFINITION
	INCLUDE 'STH_O_DEF'		!SCAN SET HEADER
C
C  Parameters:
C
C
C  Arguments:
C
	INTEGER QUA			!QUBE CONTROL AREA
	INTEGER FCA			!FILE
	INTEGER ORDER			!ORDER
	BYTE STHU(0:*)			!A USER GIVEN SET HEADER
	INTEGER INFO(QINFO__L:QINFO__H) !QUBE INFORMATION
	INTEGER PINFO(QINFO__L:QINFO__H) !QUBE TABLES
C
C  Entry points:
C
	LOGICAL NSCQFR
C
C  Function references:
C
	LOGICAL WNFRD		!READ DATA
	LOGICAL WNGGVA		!GET MEMORY	
	INTEGER NSCQC1,NSCQC2	!COMPARISONS
	LOGICAL NSCSIF		!GET IFR TABLE
	LOGICAL NSCQWF		!FORCE ERRORS OUT
	LOGICAL NMORDH		!GET SOME MODEL DATA
C
C  Data declarations:
C
	INTEGER QUAD,QUAE	!QUA OFFSETS
	INTEGER LIFRJ(IFJ__L:IFJ__H-1,0:STHIFR-1) !IFR INFO
	REAL LIFRE(IFE__L:IFE__H,0:STHIFR-1)
	BYTE QUB(0:QUB__L-1,0:1) !FIELD LINE
	  INTEGER QUBJ(0:QUB__L/LB_J-1,0:1)
	  REAL QUBE(0:QUB__L/LB_E-1,0:1)
	  DOUBLE PRECISION QUBD(0:QUB__L/LB_D-1,0:1)
	  EQUIVALENCE (QUB,QUBJ,QUBE,QUBD)
	BYTE STH(0:STH__L-1)	!SET HEADER
C-
C
C INIT
C
	NSCQFN=.TRUE.				!ASSUME OK
	IF (.NOT.NSCQWF(QUA,FCA)) GOTO 20	!FORCE POSSIBLE ERRORS OUT
	QUAD=QUA*LB_J/LB_D			!A_D OFFSET
	QUAE=QUA*LB_J/LB_E			!A_E OFFSET
	A_J(QUA+QUA_ORDER_J)=ORDER		!SAVE ORDER
	A_J(QUA+QUA_CMAP_J)=-1			!NO SORTED DATA
	A_J(QUA+QUA_CIMAP_J)=-1			!NO OUTPUT DATA
	IF (A_J(QUA+QUA_CFNR_J).EQ.0)
	1		A_J(QUA+QUA_CFPTR_J)=0	!START AT BEGIN
	A_J(QUA+QUA_CFNR_J)=A_J(QUA+QUA_CFNR_J)+1 !COUNT FIELD
	IF (A_J(QUA+QUA_CFNR_J).GT.A_J(QUA+QUA_NFLD_J) .OR.
	1	A_J(QUA+QUA_CFPTR_J).GE.A_J(QUA+QUA_CNT_J)) THEN !NO MORE
 10	  CONTINUE
	  A_J(QUA+QUA_CFNR_J)=0			!RESET FIELD
	  NSCQFN=.FALSE.
	  INFO(QINFO_FLD) =0			!DUMMY INFO
	  INFO(QINFO_F)   =0
	  INFO(QINFO_T)   =0
	  INFO(QINFO_I)   =0
	  PINFO(QINFO_FLD) =0			!DUMMY INFO
	  PINFO(QINFO_F)   =0
	  PINFO(QINFO_T)   =0
	  PINFO(QINFO_I)   =0
C
	  RETURN
	END IF
	IF (A_J(QUA+QUA_PWGT_J).NE.0)		!CLEAR BUFFERS
	1	CALL WNGFVA(4*LB_E*A_J(QUA+QUA_NDAT_J),
	1		LB_E*A_J(QUA+QUA_PWGT_J)+A_OB)
	A_J(QUA+QUA_PWGT_J)=0
	IF (A_J(QUA+QUA_PDAT_J).NE.0)
	1	CALL WNGFVA(4*LB_X*A_J(QUA+QUA_NDAT_J),
	1		LB_X*A_J(QUA+QUA_PDAT_J)+A_OB)
	A_J(QUA+QUA_PDAT_J)=0
	IF (A_J(QUA+QUA_PMOD_J).NE.0)
	1	CALL WNGFVA(4*LB_X*A_J(QUA+QUA_NDAT_J),
	1		LB_X*A_J(QUA+QUA_PMOD_J)+A_OB)
	A_J(QUA+QUA_PMOD_J)=0
	IF (A_J(QUA+QUA_POUT_J).NE.0)
	1	CALL WNGFVA(4*LB_X*A_J(QUA+QUA_NDAT_J),
	1		LB_X*A_J(QUA+QUA_POUT_J)+A_OB)
	A_J(QUA+QUA_POUT_J)=0
	IF (IAND(ORDER,QUB_I).NE.0) THEN	!IFR ORDER
	  A_J(QUA+QUA_NDAT_J)=A_J(QUA+QUA_NIFR_J) !CORRECT LENGTH
	ELSE IF (IAND(ORDER,QUB_F).NE.0) THEN	!FREQ ORDER
	  A_J(QUA+QUA_NDAT_J)=A_J(QUA+QUA_NFRQ_J) !CORRECT LENGTH
	ELSE					!HA ORDER
	  A_J(QUA+QUA_NDAT_J)=A_J(QUA+QUA_NHA_J) !CORRECT LENGTH
	END IF
	JS=WNGGVA(4*LB_E*A_J(QUA+QUA_NDAT_J),J) !GET DATA BUFFERS
	IF (JS) A_J(QUA+QUA_PWGT_J)=(J-A_OB)/LB_E
	IF (JS) JS=WNGGVA(4*LB_X*A_J(QUA+QUA_NDAT_J),J)
	IF (JS) A_J(QUA+QUA_PDAT_J)=(J-A_OB)/LB_X
	IF (JS) JS=WNGGVA(4*LB_X*A_J(QUA+QUA_NDAT_J),J)
	IF (JS) A_J(QUA+QUA_PMOD_J)=(J-A_OB)/LB_X
	IF (JS) JS=WNGGVA(4*LB_X*A_J(QUA+QUA_NDAT_J),J)
	IF (JS) A_J(QUA+QUA_POUT_J)=(J-A_OB)/LB_X
	IF (.NOT.JS) THEN
	  CALL WNCTXT(F_TP,'No data buffers for Qube')
	  GOTO 10
	END IF
	A_J(QUA+QUA_CCNT_J)=0			!CURRENT ITF/IFT CNT
	A_J(QUA+QUA_CICNT_J)=0			!CURRENT ITF/IFT CNT
	CALL WNGMVZ(LB_J*MAX(A_J(QUA+QUA_NFRQ_J),  !OFFSET TABLES CLEAR
	1		A_J(QUA+QUA_NHA_J)),A_J(A_J(QUA+QUA_CPMAP_J)))
	CALL WNGMVZ(LB_J*MAX(A_J(QUA+QUA_NFRQ_J),
	1		A_J(QUA+QUA_NHA_J)),A_J(A_J(QUA+QUA_CIPMAP_J)))
C
C DESCRIBE FIELD
C
	A_J(QUA+QUA_IFRQ_J)=0			!INIT FIELD DESCRIPTION
	A_J(QUA+QUA_IHA_J)=0
	A_J(QUA+QUA_IIFR_J)=0
	A_J(QUA+QUA_IBLK_J)=0
	I=A_J(QUA+QUA_CFPTR_J)			!START NEXT FIELD LINES
	IF (.NOT.WNFRD(A_J(QUA+QUA_FCA_J),QUB__L,
	1			QUB(0,0),I*QUB__L)) THEN
 20	  CONTINUE
	  CALL WNCTXT(F_TP,'Error reading Qube description')
	  GOTO 10
	END IF
C
C PREPARE MODEL CALCULATION
C
	IF (.NOT.WNFRD(FCA,STH__L,STHU,QUBJ(QUB_STHP_J,0))) GOTO 20 !USER STH
	IF (IAND(A_J(QUA+QUA_ORDER_J),QUB_M).NE.0) THEN !MODEL DATA ASKED
	  IF (.NOT.NMORDH(6,A_J(QUA+QUA_STP_J),
	1		A_D(QUAD+QUA_SRA_D),A_D(QUAD+QUA_SDEC_D),
	1		A_D(QUAD+QUA_SFRQ_D))) THEN
 21	    CONTINUE
	    CALL WNCTXT(F_TP,'Error reading model data')
	    GOTO 10
	  END IF
	  CALL NMOMST(A_J(QUA+QUA_STP_J),
	1		A_D(QUAD+QUA_SRA_D),A_D(QUAD+QUA_SDEC_D),
	1		STHU,A_E(QUAE+QUA_LM0_E),
	1		A_D(QUAD+QUA_FRQ0_D),A_E(QUAE+QUA_TF_E),
	1		A_J(QUA+QUA_MINST_J))	!SOME MODEL CALC. DATA
	END IF
	I2=0					!HA CNT
	I3=0					!HA BLOCK CNT
	DO WHILE (I.LT.A_J(QUA+QUA_CNT_J))
	  IF (.NOT.WNFRD(A_J(QUA+QUA_FCA_J),QUB__L,
	1			QUB(0,1),I*QUB__L)) GOTO 20
	  IF (NSCQC1(QUB(0,0),QUB(0,1)).EQ.0) THEN !SAME FIELD
	    A_J(QUA+QUA_IIFR_J)=
	1		MAX(A_J(QUA+QUA_IIFR_J),QUBJ(QUB_NIFR_J,1))
	    IF (.NOT.WNFRD(FCA,STH__L,STH,QUBJ(QUB_STHP_J,1))) GOTO 20
	    IF (.NOT.NSCSIF(FCA,STH,A_I(A_J(QUA+QUA_PIFR_J)),
	1		LIFRJ,
	1		A_E(A_J(QUA+QUA_PANG_J)))) GOTO 20 !GET IFR TABLES
	    IF (NSCQC2(QUB(0,0),QUB(0,1)).EQ.0) THEN !SAME FREQUENCY
	      DO I4=0,QUBJ(QUB_SCN_J,1)-1	!FILL HA TABLE
		A_E(A_J(QUA+QUA_PHA_J)+I2+I4)=
	1		QUBE(QUB_HAB_E,1)+I4*QUBE(QUB_HAI_E,1)
	      END DO
	      I1=2*(A_J(QUA+QUA_IFRQ_J)*A_J(QUA+QUA_NBLK_J)+I3)
	      I2=I2+QUBJ(QUB_SCN_J,1)		!COUNT HA
	      A_J(A_J(QUA+QUA_IBPT_J)+I1+0)=I2	!SAVE BLK	  
	      A_J(A_J(QUA+QUA_IBPT_J)+I1+1)=QUBJ(QUB_STHP_J,1)
	      I3=I3+1				!COUNT BLOCKS
	      I=I+1				!COUNT LINES
	    ELSE
	      A_J(QUA+QUA_IHA_J)=MAX(A_J(QUA+QUA_IHA_J),I2)
	      A_J(QUA+QUA_IBLK_J)=MAX(A_J(QUA+QUA_IBLK_J),I3)
	      A_D(A_J(QUA+QUA_PFRQ_J)+A_J(QUA+QUA_IFRQ_J))=
	1		QUBD(QUB_FRQ_D,0)	!MAKE FREQ TABLE
	      A_J(QUA+QUA_IFRQ_J)=A_J(QUA+QUA_IFRQ_J)+1 !COUNT FREQ
	      I2=0
	      I3=0
	      CALL WNGMV(QUB__L,QUB(0,1),QUB(0,0))
	    END IF
	  ELSE
	    A_J(QUA+QUA_CFPTR_J)=I		!NEXT LINE POINTER
	    GOTO 200				!READY WITH FIELD
	  END IF
	END DO
 200	CONTINUE
	A_J(QUA+QUA_IHA_J)=MAX(A_J(QUA+QUA_IHA_J),I2)
	A_J(QUA+QUA_IBLK_J)=MAX(A_J(QUA+QUA_IBLK_J),I3)
	A_D(A_J(QUA+QUA_PFRQ_J)+A_J(QUA+QUA_IFRQ_J))=
	1		QUBD(QUB_FRQ_D,0)	!MAKE FREQ TABLE
	A_J(QUA+QUA_IFRQ_J)=A_J(QUA+QUA_IFRQ_J)+1
	INFO(QINFO_FLD) =A_J(QUA+QUA_CFNR_J)	!RETURN INFO
	INFO(QINFO_F)   =A_J(QUA+QUA_IFRQ_J)
	INFO(QINFO_T)   =A_J(QUA+QUA_IHA_J)
	INFO(QINFO_I)   =A_J(QUA+QUA_IIFR_J)
	PINFO(QINFO_FLD) =0			!RETURN PTRS
	PINFO(QINFO_F)   =A_J(QUA+QUA_PFRQ_J)
	PINFO(QINFO_T)   =A_J(QUA+QUA_PHA_J)
	PINFO(QINFO_I)   =A_J(QUA+QUA_PIFR_J)
C
	RETURN

C
C NSCQFR
C
	ENTRY NSCQFR(QUA,FCA)
C
	NSCQFR=.TRUE.				!ASSUME OK
	A_J(QUA+QUA_CFNR_J)=0			!RESET FIELD
C
	RETURN
C
C
	END

#  nupd.ssc
# 	WNB 921117
# 
#  Revisions:
#	WNB 921224	Make SSC
#	WNB 930303	Add NSTAR_DIR
#	WNB 930305	Make sure aliases
#	WNB 930514	Correct alias read
#	WNB 930725	Typo (continuation - in VAX)
#	WNB 930731	Typo (' missed - VAX)
#	WNB 930803	Add local mode
#	WNB 930818	Typo
#	WNB 930901	Remove logging from Unix: .dsc give segmentation
#				faults: too many files open?
#	WNB 930921	Typo
#	WNB 931124	Remove logging for password
#	WNB 940124	Leave _TLB
#
# 	Update Newstar system across network
#
#	Uses environment variables:
#		WNG			where to find wng-type sources
#		WNG_TYPE		machine (sw, dw, hp, al, cv etc)
#		WNG_OLBEXE		root of wng-type .olb, .ppd, .exe
#		WNG_SITE		site (nfra, atnf, rug ...)
#		EXEDWARF_UNIX		where to find/set DWARF .exe, .ppd
#		LIBDWARF		where to find DWARF .olb
#		NSTAR_DIR		N directories
#	and also possible:
#		WNG_NODE, WNG_NODEDIR, WNG_NODEUSER
#		WNG_EXE, WNG_OLB, WNG_TLB, WNG_ERR, WNG_LIS, WNG_LINK
#
# Intro
#
	onintr exex					# finish neatly
	if ($?echo) unset echo				# no verify
	if ($?verbose) unset verbose			# no verbose
	set pid=$$ ; @ dep=1				# for tmp files
	set local=0					# for local use
	echo " "
	echo "Updating Newstar system."
	echo " "
#	echo 'A log will be made in $WNG'"/../nu$pid$dep.log"
	echo "There should be about 20 Mbytes available,"
	echo "and it will probably take up to an hour."
	echo " "
#
# Check environment
#
	if (! $?WNG || ! $?WNG_TYPE || ! $?WNG_OLBEXE ||\
			! $?WNG_SITE || ! $?NSTAR_DIR) then
	  echo " Error: Must have environment variables"
	  echo "        WNG, WNG_TYPE, WNG_OLBEXE , WNG_SITE, NSTAR_DIR defined"
	  echo "        You probably have not included the proper"
	  echo "        files in .cshrc"
	  goto exex
	endif
	if (! $?EXEDWARF_UNIX || ! $?LIBDWARF) then
	  echo " Error:   Cannot do everything with EXEDWARF_UNIX and/or"
	  echo "          LIBDWARF not defined"
	  echo "          You probably have not included the proper"
	  echo "          files in .cshrc"
	  goto exex
	endif
        source $WNG/wngcshrc.sun			# get aliases
	if ("`alias nxec`" == "") then
	  echo " Error:   You have no alias for nxec etc."
	  echo "          You probably have not included the proper"
	  echo "          files in .cshrc"
	  goto exex
	endif
#
# Creating environment
#
	cd $WNG
	if (! $?WNG_EXE) setenv WNG_EXE $WNG_OLBEXE	# make names
	if (! $?WNG_OLB) setenv WNG_OLB $WNG_OLBEXE
	set blddir=($NSTAR_DIR)				# Newstar directories
	foreach i ($blddir)
	  if (! -d $WNG_EXE/$i) mkdir $WNG_EXE/$i	# make directories
	  if (! -d $WNG_OLB/$i) mkdir $WNG_OLB/$i
	end
##	if ($?WNG_TLB) unsetenv WNG_TLB			# make sure
	if ($?WNG_ERR) unsetenv WNG_ERR
	if ($?WNG_LIS) unsetenv WNG_LIS
	if ($?WNG_LINK) unsetenv WNG_LINK
	setenv WNG_NODE "rzmvx4.astron.nl"		# node info
	setenv WNG_NODEDIR "user5:[wnb]"
	setenv WNG_NODEUSER "printvax printvax_90a"
#
# Get questions
#
#	echo "nu$pid$dep.log" >>! $WNG/../nu$pid$dep.log # start log
	echo "Running NUPD.SUN at $WNG_SITE($WNG_TYPE)" \
#			| tee -a $WNG/../nu$pid$dep.log
	echo "on `hostname` at `date`" #| tee -a $WNG/../nu$pid$dep.log
	echo " " #| tee -a $WNG/../nu$pid$dep.log
	echo -n "Remote update node (*=local)[$WNG_NODE]: " \
#			| tee -a $WNG/../nu$pid$dep.log
	set l0=($<)
	if ("$l0" == "*") then
	  set local=1
	  goto VERS
	endif
	if ("$l0" != "") setenv WNG_NODE "$l0"
#	echo "$WNG_NODE" >>! $WNG/../nu$pid$dep.log
	set l1=($WNG_NODEUSER)
	echo -n "Remote update user [$l1[1]]: " \
#			| tee -a $WNG/../nu$pid$dep.log
	set l0=($<)
	if ("$l0" != "") then
	  setenv WNG_NODEUSER "$l0"
	else
	  setenv WNG_NODEUSER "$l1[1]"
	endif
#	echo "$WNG_NODEUSER" >>! $WNG/../nu$pid$dep.log
	echo -n "Remote password [$l1[2]]: " \
#			| tee -a $WNG/../nu$pid$dep.log
	stty -echo; set l0="$<"; stty echo; echo " "
	if ("$l0" != "") set l1[2]="$l0"
	setenv WNG_NODEUSER "$WNG_NODEUSER $l1[2]"
	echo " " #| tee -a $WNG/../nu$pid$dep.log
	echo -n "Remote directory [$WNG_NODEDIR]: " \
#			| tee -a $WNG/../nu$pid$dep.log
	set l0=($<)
	if ("$l0" != "") setenv WNG_NODEDIR "$l0"
#	echo "$WNG_NODEDIR" >>! $WNG/../nu$pid$dep.log
VERS:
	echo -n "Remote update version? (yymmdd) []:  " \
#			| tee -a $WNG/../nu$pid$dep.log
	set dovers=($<)
	if ("$dovers" == "") goto exex			# assume end
#	echo "$dovers" >>! $WNG/../nu$pid$dep.log
#
# Get update info
#
GINFO:
	cd $WNG						# base directory
	if ($local == 1) goto COMP
	echo "Getting update information ..." \
#			| tee -a $WNG/../nu$pid$dep.log
	foreach i ($blddir)
	  cd ../$i
	  nnet -nz $i$dovers.grp #>>&! $WNG/../nu$pid$dep.log
	end
#
# Get updated files
#
GFIL:
	cd $WNG						# base directory
	echo "Getting updated files ..." \
#			| tee -a $WNG/../nu$pid$dep.log
	foreach i ($blddir)
	  cd ../$i
	  if (-e $i$dovers.grp) then
	    nnet $i$dovers.grp #>>&! $WNG/../nu$pid$dep.log
	  endif
	end
#
# Compile files
#
COMP:
	cd $WNG						# base directory
	echo "Compiling updated files ..." \
#			| tee -a $WNG/../nu$pid$dep.log
	foreach i ($blddir)
	  cd ../$i
	  if (-e $i$dovers.grp) then
	    ncomp -u $i$dovers.grp #>>&! $WNG/../nu$pid$dep.log
	  endif
	end
#
# Link
#
LINK:
	cd $WNG						# base directory
	echo "Linking updated programs ..." \
#			| tee -a $WNG/../nu$pid$dep.log
	foreach i ($blddir)
	  cd ../$i
	  if (-e $i$dovers.grp) then
	    nlink -u $i$dovers.grp #>>&! $WNG/../nu$pid$dep.log
	  endif
	end
#
# Cleanup
#
CLUP:
#
# Ready
#
END:
	echo " " \
#			| tee -a $WNG/../nu$pid$dep.log
	echo "Newstar updated for version $dovers" \
#			| tee -a $WNG/../nu$pid$dep.log
#	echo "Check log for errors" \
#			| tee -a $WNG/../nu$pid$dep.log
	echo " " \
#			| tee -a $WNG/../nu$pid$dep.log
#
#  EXIT
#
exex:
	exit

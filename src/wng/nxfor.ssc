#  nxfor.ssc
# 	WNB 921214
# 
#  Revisions:
#	WNB 921215	Add ifndef
#	WNB 921218	Add wn_site__
#	WNB 921230	Creation message; make SSC
#	WNB 930108	Correct unix part for site dependencies
#	WNB 930302	Add /bin/csh
#	WNB 930330	Add wn_gipsy__ and wn_pgplot__
#	WNB 930428	Correct Unix gipsy test
#			Delete pgplot reference
#			Make Unix awk
#	WNB 930429	Make VAX awk
#	WNB 930615	Proper delete .TMP
# 
# 	Convert the standard input to standard output
#		by expanding #ifdef/#ifndef/#else/#endif
#		with def arguments: wn_mm__ (mm = machine, eg dw) or
#	    	wn_s..s__ (s..s = site e.g. nfra) or
#		wn_gipsy__
#		End given by single line "endend";
#		error messages given in efnm.
#	Use as:
#		csh -f $WNG/nxfor.sun efnm [vax|unix]	(Unix)
#		@WNG:NXFOR fsc for error [vax|unix]	(VAX)
#
#	Uses environment variables:
#		WNG_TYPE, WNG_SITE		machine type, site
#
# Intro
#
#ifdef wn_vax__
$	ON ERROR THEN GOTO EXEX
$	PID=F$EXTRACT(4,4,F$GETJPI("","PID"))		!FOR FILES
$	DEP=F$ENVIRONMENT("DEPTH")
$	IF F$SEARCH("WNG:GAWK.EXE") .EQS. ""		!NO AWK PRESENT
$	THEN
$	  NAWK="Y"					!NO AWK
$	  LCNT=0					!LINE COUNT
$	  CNT=0						!LEVEL
$	  WROUT="Y"					!WRITE
$	  PWR=WROUT					!PREVIOUS WRITE
$	  TOUT=""					!MEMORY
$	  TELSE=""
$	ELSE
$	  NAWK="$WNG:GAWK"				!AWK PRESENT
$	ENDIF
$	IF P4 .EQS. "" THEN P4="VX"
$	P4=F$EDIT(P4,"UPCASE")
$	LP4=F$LENGTH(P4)
$	LSITE=F$LENGTH(WNG_SITE)			!LENGTH SITE NAME
$	XGIP="NOGIPSY"
$	IF F$SEARCH("WNG_OLBEXE:[WNG]GIPLIB.OLB") .NES. "" THEN -
		XGIP="gipsy"
$	CLOSE/ERROR=LA1 NXFI'PID''DEP'			!MAKE SURE
$ LA1:	CLOSE/ERROR=LA2 NXFE'PID''DEP'
$ LA2:
$	IF P4 .EQS. "VAX"
$	THEN
$	  S1="$ ! Created from ''P1' on ''F$TIME()' "+ -
		"at ''F$GETSYI("NODENAME")'"
$	  S2="$ !"
$	  S3="$ !"
$	ELSE
$	  IF P4 .EQS. "UNIX"
$	  THEN
$	    S1="#!/bin/csh"
$	    S2="#  Created from ''P1' on ''F$TIME()' "+ -
		"at ''F$GETSYI("NODENAME")'"
$	    S3="#"
$	  ELSE
$	    S1="C+ Created from ''P1' on ''F$TIME()' "+ -
		"at ''F$GETSYI("NODENAME")'"
$	    S2="C"
$	    S3="C-"
$	  ENDIF
$	ENDIF
#else
	onintr exex					# finish neatly
	if ($?echo) unset echo				# no verify
	if ($?verbose) unset verbose			# no verbose
	set pid=$$					# for temp
	set c_date=(`date`)
	if ("$2" == "") then				# for SSC
	  set lsite=$WNG_TYPE
	else
	  set lsite=$2
	endif
	set xgip="nogipsy"
	if (-e $WNG_OLBEXE/wng/giplib.olb) set xgip="gipsy"
	set lfile=$1:r
	set lfile=$lfile:t
	if ("$lsite" == "vax") then
	  set s1="$ ! Created from ${lfile}.ssc on $c_date at `hostname`"
	  set s2="$ ! "
	  set s3="$ ! "
	else if ("$lsite" == "unix") then
	  set s1="#\!/bin/csh"
	  set s2="#  Created from ${lfile}.ssc on $c_date at `hostname`"
	  set s3="#"
	else
	  set s1="C+ Created from ${lfile}.fsc on $c_date at `hostname`"
	  set s2="C"
	  set s3="C-"
	endif
#endif
#
# Open files
#
#ifdef wn_vax__
$	IF NAWK
$	THEN
$	  OPEN/ERROR=ERR/READ NXFI'PID''DEP' 'P1'
$	  WRITE 'P2' "''S1'"				!INTRO TEXT
$	  WRITE 'P2' "''S2'"
$	  WRITE 'P2' "''S3'"
$	ENDIF
#endif
#
# Read input
#
#ifdef wn_vax__
$	IF NAWK						!NO AWK
$	THEN
$ LP1:
$	  READ/ERROR=ERR/END=LP2 NXFI'PID''DEP' L0	!READ LINE
$	  LCNT=LCNT+1
$	  L2=F$EDIT(L0,"COLLAPSE,UNCOMMENT,UPCASE")	!FOR CHECK
$	  IF F$EXTRACT(0,6,L2) .EQS. "#IFDEF"		!DO IF
$	  THEN
$	    CNT=CNT+1					!COUNT IF
$	    TOUT="''TOUT'"+",''PWR'"			!SAVE PREVIOUS
$	    TELSE="''TELSE'"+",N"
$	    PWR=WROUT
$	    IF F$EXTRACT(6,5+LP4,L2) .EQS. "WN_''P4'__" .OR. -
		F$EXTRACT(6,5+LSITE,L2) .EQS. "WN_''WNG_SITE'__" .OR. -
		F$EXTRACT(6,5+5,L2) .EQS. "WN_''XGIP'__" !THIS ONE
$	    THEN
$	      WROUT=PWR					!DO AS IS
$	    ELSE
$	      WROUT="N"
$	    ENDIF
$	  ELSE
$	    IF F$EXTRACT(0,7,L2) .EQS. "#IFNDEF"	!DO IF
$	    THEN
$	      CNT=CNT+1					!COUNT IF
$	      TOUT="''TOUT'"+",''PWR'"			!SAVE PREVIOUS
$	      TELSE="''TELSE'"+",N"
$	      PWR=WROUT
$	      IF F$EXTRACT(7,5+LP4,L2) .EQS. "WN_''P4'__" .OR. -
		F$EXTRACT(7,5+LSITE,L2) .EQS. "WN_''WNG_SITE'__" .OR. -
		F$EXTRACT(7,5+5,L2) .EQS. "WN_''XGIP'__" !THIS ONE
$	      THEN
$	        WROUT="N"				!DO AS IS
$	      ELSE
$	        WROUT=PWR
$	      ENDIF
$	    ELSE
$	      IF F$EXTRACT(0,5,L2) .EQS. "#ELSE"
$	      THEN
$	        IF CNT .LT. 1 .OR. F$ELEMENT(CNT,",",TELSE) !CANNOT BE
$	        THEN
$	          CNT=-2
$	          GOTO LP2
$	        ENDIF
$	        TELSE=F$EXTRACT(0,F$LENGTH(TELSE)-2,TELSE)+",Y" !ELSE SEEN
$	        IF PWR					!SHOULD CHANGE
$	        THEN
$	          IF WROUT
$	          THEN
$	            WROUT="N"
$	          ELSE
$	            WROUT="Y"
$	          ENDIF
$	        ENDIF
$	      ELSE
$	        IF F$EXTRACT(0,6,L2) .EQS. "#ENDIF"
$	        THEN
$	          IF CNT .GT. 0
$	          THEN
$	            WROUT=PWR				!RESTORE
$	            TELSE=F$EXTRACT(0,F$LENGTH(TELSE)-2,TELSE)
$		    PWR=F$ELEMENT(CNT,",",TOUT)
$		    TOUT=F$EXTRACT(0,F$LENGTH(TOUT)-2,TOUT)
$	            CNT=CNT-1
$	          ELSE
$	            CNT=-1
$	            GOTO LP2				!ERROR
$	          ENDIF
$	        ELSE
$	          IF WROUT
$		  THEN
$		    IF F$EXTRACT(0,1,L2) .EQS. "#" .AND. -
			(P4 .EQS. "VAX" .OR. P4 .EQS. "UNIX")
$		    THEN				!SKIP COMMENTS
$		      IF P4 .EQS. "VAX"
$		      THEN
$		        WRITE 'P2' "$!"+L0
$		      ELSE
$		        WRITE 'P2' L0
$		      ENDIF
$		    ELSE
$		      WRITE 'P2' L0			!COPY
$		    ENDIF
$		  ENDIF
$	        ENDIF
$	      ENDIF
$	    ENDIF
$	  ENDIF
$	  GOTO LP1					!MORE LINES
$	ELSE						!AWK
$	  IF F$SEARCH("AWK''PID'''DEP'.TMP") .NES. "" THEN -
			DELETE AWK'PID''DEP'.TMP;*
$	  OPEN/ERROR=ERR/WRITE NXFI'PID''DEP' AWK'PID''DEP'.TMP !CREATE AWK FILE
$	  WRITE NXFI'PID''DEP' -
		"BEGIN {print ""''S1'""; print ""''S2'""; print ""''S3'"";"
$	  WRITE NXFI'PID''DEP' -
			"cnt = 0; wr = 1; pwr = wr}"
$	  WRITE NXFI'PID''DEP' -
		"/^endend$/ {exit}"
$	  WRITE NXFI'PID''DEP' -
		"/^[ 	]*#[ 	]*ifdef[ 	][ 	]*/ {"
$	  WRITE NXFI'PID''DEP' -
			"cnt += 1; tout[cnt] = pwr; telse[cnt] = 0; pwr = wr;"
$	  WRITE NXFI'PID''DEP' -
			"if ($0 ~ /^.*ifdef[ 	]*wn_"+ -
			"''F$EDIT(WNG_SITE,"LOWERCASE")'__/ || \"
$	  WRITE NXFI'PID''DEP' -
			"$0 ~ /^.*ifdef[ 	]*wn_"+ -
			"''F$EDIT(P4,"LOWERCASE")'__/ || \"
$	  WRITE NXFI'PID''DEP' -
			"$0 ~ /^.*ifdef[ 	]*wn_''XGIP'__/)"
$	  WRITE NXFI'PID''DEP' -
				"{wr = pwr} else {wr = -1}; next}"
$	  WRITE NXFI'PID''DEP' -
		"/^[ 	]*#[ 	]*else/ {"
$	  WRITE NXFI'PID''DEP' -
			"if (cnt < 1 || telse[cnt] == 1) {cnt = -1; exit};"
$	  WRITE NXFI'PID''DEP' -
			"telse[cnt] = 1;"
$	  WRITE NXFI'PID''DEP' -
			"if (pwr == 1) {wr = -wr}; next}"
$	  WRITE NXFI'PID''DEP' -
		"/^[ 	]*#[ 	]*ifndef[ 	][ 	]*/ {"
$	  WRITE NXFI'PID''DEP' -
			"cnt += 1; tout[cnt] = pwr; telse[cnt] = 0; pwr = wr;"
$	  WRITE NXFI'PID''DEP' -
			"if ($0 ~ /^.*ifndef[ 	]*wn_"+ -
			"''F$EDIT(WNG_SITE,"LOWERCASE")'__/ || \"
$	  WRITE NXFI'PID''DEP' -
			"$0 ~ /^.*ifndef[ 	]*wn_"+ -
			"''F$EDIT(P4,"LOWERCASE")'__/ || \"
$	  WRITE NXFI'PID''DEP' -
			"$0 ~ /^.*ifndef[ 	]*wn_''XGIP'__/)"
$	  WRITE NXFI'PID''DEP' -
				"{wr = -1} else {wr = pwr}; next}"
$	  WRITE NXFI'PID''DEP' -
		"/^[ 	]*#[ 	]*endif/ {"
$	  WRITE NXFI'PID''DEP' -
			"if (cnt < 1) {cnt = -2; exit};"
$	  WRITE NXFI'PID''DEP' -
			"wr = pwr; pwr = tout[cnt]; cnt -= 1; next}"
$	  WRITE NXFI'PID''DEP' -
		"wr > 0 { if (""''P4'"" != ""VAX"") {print} else {"
$	  WRITE NXFI'PID''DEP' -
			"if ($0 !~ /^#/) {print} else {"
$	  WRITE NXFI'PID''DEP' -
				"print ""$!"",substr($0,2,1000)}}}"
$	  WRITE NXFI'PID''DEP' -
	    "END {if (cnt != 0) {"
$	  WRITE NXFI'PID''DEP' -
	     "print ""Illegal ifdef/else/endif nesting at line "",NR >>""''P3'""}}"
$	  CLOSE/ERROR=ERR NXFI'PID''DEP'
$	  NAWK/INPUT=AWK'PID''DEP'.TMP/OUTPUT='P2' 'P1'	!DO CONVERSION
$	ENDIF
#else
	cat >! awk${lfile}${pid}.tmp << EOF		# create awk file
BEGIN {print "$s1"; print "$s2"; print "$s3";
	cnt = 0; wr = 1; pwr = wr}
/^endend\$/ {exit}
/^[ 	]*#[ 	]*ifdef[ 	][ 	]*/ {
	cnt += 1; tout[cnt] = pwr; telse[cnt] = 0; pwr = wr;
	if (\$0 ~ /^.*ifdef[ 	]*wn_${WNG_SITE}__/ || \
		\$0 ~ /^.*ifdef[ 	]*wn_${lsite}__/ || \
		\$0 ~ /^.*ifdef[ 	]*wn_${xgip}__/)
			{wr = pwr} else {wr = -1}; next}
/^[ 	]*#[ 	]*else/ {
	if (cnt < 1 || telse[cnt] == 1) {cnt = -1; exit}; telse[cnt] = 1;
	if (pwr == 1) {wr = -wr}; next}
/^[ 	]*#[ 	]*ifndef[ 	][ 	]*/ {
	cnt += 1; tout[cnt] = pwr; telse[cnt] = 0; pwr = wr;
	if (\$0 ~ /^.*ifndef[ 	]*wn_${WNG_SITE}__/ || \
		\$0 ~ /^.*ifndef[ 	]*wn_${lsite}__/ || \
		\$0 ~ /^.*ifndef[ 	]*wn_${xgip}__/)
			{wr = -1} else {wr = pwr}; next}
/^[ 	]*#[ 	]*endif/ {
	if (cnt < 1) {cnt = -2; exit};
	wr = pwr; pwr = tout[cnt]; cnt -= 1; next}
wr > 0 { if ("$lsite" != "vax") {print} else {
		if (\$0 !~ /^\#/) {print} else {
			print "\$!",substr(\$0,2,1000)}}}
END {if (cnt != 0) {
	print "Illegal ifdef/else/endif nesting at line ",NR >>"$1"}}
EOF
#
	awk -f awk${lfile}${pid}.tmp			# do conversion
#endif
#
#  EXIT
#
#ifdef wn_vax__
$ LP2:
$	IF NAWK
$	THEN
$	  CLOSE/ERROR=EXEX NXFI'PID''DEP'		!CLOSE INPUT
$	  IF CNT .NE. 0
$	  THEN
$	    IF F$SEARCH("''P3'") .EQS. ""
$	    THEN
$	      OPEN/ERROR=ERR/WRITE NXFE'PID''DEP' 'P3'	!SET ERROR
$	    ELSE
$	      OPEN/ERROR=ERR/APPEND NXFE'PID''DEP' 'P3'	!SET ERROR
$	    ENDIF
$	    WRITE NXFE'PID''DEP' -
		"Illegal ifdef/else/endif nesting at line ''LCNT'"
$	  ENDIF
$	ENDIF
$	GOTO EXEX
$ !
$ !  Error
$ !
$ ERR:
$	IF F$SEARCH("''P3'") .EQS. ""
$	THEN
$	  OPEN/ERROR=ERR/WRITE NXFE'PID''DEP' 'P3'	!SET ERROR
$	ELSE
$	  OPEN/ERROR=ERR/APPEND NXFE'PID''DEP' 'P3'	!SET ERROR
$	ENDIF
$	WRITE NXFE'PID''DEP' "Unexpected I/O error after line ''LCNT'"
$	GOTO EXEX
$ !
$ !  EXIT
$ !
$ EXEX:
$	CLOSE/ERROR=EX1 NXFI'PID''DEP'			!MAKE SURE
$ EX1:	CLOSE/ERROR=EX2 NXFE'PID''DEP'
$ EX2:
$	IF F$SEARCH("AWK''PID'''DEP'.TMP") .NES. "" THEN -
		DELETE AWK'PID''DEP'.TMP;*
$	EXIT
#else
exex:
	if (-e awk${lfile}${pid}.tmp) then
	  'rm' awk${lfile}${pid}.tmp >& /dev/null
	endif
	exit
#endif

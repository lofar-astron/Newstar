#  nxpin.ssc
# 	WNB 921210
# 
#  Revisions:
#	WNB 921230	Creation message
#	WNB 921230	Make SSC
#	WNB 930105	HP error embedded newline
#	WNB 930429	Make awk for Unix and VMS
#	HjV 930518	Typo
#	WNB 930615	Delete .TMP propoerly
# 
# 	Convert a .psc (on standard in) to a pin file (on standard out)
#		by expanding includes. End given by single line "endend";
#		error messages given in efnm.
#	Use as:
#		csh -f $WNG/nxpin.sun efnm	(Unix)
#		@WNG:NXPIN psc pin error	(VAX)
#
#	Uses environment variables:
#		WNG			where to find wng-type sources
#
# Intro
#
	onintr exex					# finish neatly
	if ($?echo) unset echo				# no verify
	if ($?verbose) unset verbose			# no verbose
	if ($?nawk) unset nawk				# no nawk
	if (-x /usr/bin/nawk) set nawk="/usr/bin/nawk"
	set c_date=(`date`)				# date
	set pid=$$
	set lfile=$1:r					# input file name
	set lfile=$lfile:t
	set tval="[Ii][Nn][Cc][Ll][Uu][Dd][Ee]=*"	# for check
	set tval1="*[Ii][Nn][Cc][Ll][Uu][Dd][Ee]*"
	set txtb1='BEGIN {print "\!\!"; print "\!\! Include ' # text
	set txtb2='"; print "\!\!"}'
	set txte1='END {print "\!\!"; print "\!\! End include '
	set txte2='"; print "\!\!"; print "endend"}'
	set s1=\!"+ Created from ${lfile}.psc on $c_date at `hostname`"
	set s2=\!"-"
	if (! $?nawk) then
	  echo "$s1"					# intro
	  echo "$s2"
	endif
#
# Open files
#
#
# Read input
#
	if (! $?nawk) then				# normal
LP1:
	  set l0="$<"					# read line
	  if ("$l0" == "endend") goto exex		# ready
	  if ("$l0" =~ $tval1) then			# could be include
	    set l2=`echo "$l0" | tr -d " 	"`
	    if ("$l2" =~ $tval) then			# include
	      set l1=`echo "$l0" | awk -F= '{print $2}' | awk -F! '{print $1}'`
	      if (-e $l1) then
	        set txtb="$txtb1$l1$txtb2"
	        set txte="$txte1$l1$txte2"
	        awk "$txtb"' {print $0} '"$txte" $l1 \
			| csh -f $WNG/nxpin.sun $1
	      else
	        echo "Cannot open include file $l1" >>! $1
	        goto exex
	      endif
	      goto LP1					# continue
	    endif
	  endif
	  echo "$l0"					# copy line
	  goto LP1					# more lines
	else						# do nawk
	  cat >! nawk${lfile}${pid}.tmp << EOF		# create nawk file
function tinc() {
	if (\$0 ~ /^[ 	]*[Ii][Nn][Cc][Ll][Uu][Dd][Ee][ 	]*=/) {
		split(\$2,nam," "); cnt += 1; ofl[cnt] = cfl; cfl = nam[1];
		print "!!"; print "!! Include ",cfl; print "!!";
		err = getline <cfl; if (err != 1) {
			print "Cannot open ",cfl >>"$1"; exit}
		do {tinc()} while (getline <cfl == 1) ;
		print "!!"; print "!! End include ",cfl; print "!!";
		close(cfl); cfl = ofl[cnt]; cnt -= 1} else {
			if (\$0 != "endend") {print}}}
BEGIN {FS = "[=!]"; cnt = 0; cfl = FILENAME;
		print "$s1"; print "$s2";}
{tinc()}
EOF
	  nawk -f nawk${lfile}${pid}.tmp		# do inclusion
	endif
	goto exex					# ready
#
#  EXIT
#
exex:
	if (-e nawk${lfile}${pid}.tmp) then
          'rm' nawk${lfile}${pid}.tmp >& /dev/null
	endif
	exit

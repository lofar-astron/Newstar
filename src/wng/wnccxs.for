C+ WNCCXS.FOR
C  WNB 890111
C
C  Revisions:
C	WNB 930325	Unaligned possible
C	JPH 960625	Make sqrt(-1) 'i' i.s.o. 'I'
C
	SUBROUTINE WNCCXS(COUT,CLEN,VALE,COD1,COD2)
C
C  Convert a complex value to a string
C
C  Result:
C
C	CALL WNCCXS ( COUT_C*:O, CLEN_J:O, VALE_R4(2):I, COD1_J:I, COD2_J:I)
C				Convert the  COMPLEX value VALE to a string
C				in COUT, setting CLEN to the significant
C				length of COUT. The COD's indicate the
C				conversion type (see WNCCVS)
C	CALL WNCCYS ( COUT_C*:O, CLEN_J:O, VALD_R8(2):I, COD1_J:I, COD2_J:I)
C				As CXS for DOUBLE COMPLEX value
C
C  Include files:
C
	INCLUDE 'WNG_DEF'
C
C  Parameters:
C
C
C  Arguments:
C
	CHARACTER*(*) COUT			!OUTPUT STRING
	INTEGER CLEN				!OUTPUT LENGTH
	DOUBLE PRECISION VALD(2)		!INPUT VALUE
	REAL VALE(2)
	INTEGER COD1,COD2			!CONVERSION CODES
C
C  Function references:
C
	INTEGER WNCALN				!LENGTH STRING
C
C  Data declarations:
C
	REAL EVAL(2)				!VALUE
	DOUBLE PRECISION DVAL(2)		!VALUE
C-
C
C WNCCXS
C
	CALL WNGMV(LB_X,VALE,EVAL)		!UNALIGNED POSSIBLE
	DVAL(1)=EVAL(1)				!COMPLEX
	DVAL(2)=EVAL(2)
	GOTO 10
C
C WNCCYS
C
	ENTRY WNCCYS(COUT,CLEN,VALD,COD1,COD2)
C
	CALL WNGMV(LB_Y,VALD,DVAL)		!UNALIGNED POSSIBLE
	GOTO 10
C
 10	CONTINUE
	CALL WNCCDS(COUT,CLEN,DVAL,COD1,COD2)	!REAL PART
	CLEN=CLEN+1
	IF (DVAL(2).GE.0) THEN
	  COUT(CLEN:CLEN)='+'
	ELSE
	  COUT(CLEN:CLEN)='-'
	END IF
	CALL WNCCDS(COUT(CLEN+1:),J,ABS(DVAL(2)),COD1,COD2) !IMAG. PART
	CLEN=WNCALN(COUT)+1			!OUTPUT LENGTH
	COUT(CLEN:CLEN)='i'
C
	RETURN
C
C
	END

C+ WNDLOG.FOR
C  WNB 900130
C
C  Revisions:
C	WNB 910930	Add WNDLON, WNDLOY
C	WNB 940305	Add X_LOG
C
	SUBROUTINE WNDLOG(LCD)
C
C  Get/set correct log code
C
C  Result:
C
C	CALL WNDLOG( LCD_J:O )
C			Initialise log code LCD, assuming PIN default
C	CALL WNDLON( LCD_J:O )
C			Initialise log code LCD, assuming NO default
C	CALL WNDLOY( LCD_J:O )
C			Initialise log code LCD, assuming YES default
C
C  PIN references:
C
C	X_LOG
C	LOG
C
C  Include files:
C
	INCLUDE 'WNG_DEF'
	INCLUDE 'WNC_DEF'
C
C  Parameters:
C
C
C  Arguments:
C
	INTEGER LCD				!LOG CODE
C
C  Function references:
C
	LOGICAL WNDPAR				!GET LOG CODE
	LOGICAL WNDPAP				!SET X_LOG CODE
C
C  Data declarations:
C
	EXTERNAL WNCEXH				!EXIT HANDLER
	INTEGER DEFVAL				!DEFAULT VALUE
	CHARACTER*8 TXT
C-
	CALL WNGSXF(CEXH(1))			!CLEAR EXIT HANDLER !!DWARF
	CALL WNGSXH(CEXH(1),WNCEXH)		!RESET IT
	DEFVAL=F_SP
	JS=WNDPAR('X_LOG',TXT,LEN(TXT),J0)	!SEE IF SWITCH
	IF (JS) THEN
	  JS=WNDPAP('X_LOG','# /NOASK')
	ELSE
	  JS=WNDPAR('LOG',TXT,LEN(TXT),J0)	!ASK LOG
	END IF
	GOTO 10
C
C WNDLON
C
	ENTRY WNDLON(LCD)
C
	CALL WNGSXF(CEXH(1))			!CLEAR EXIT HANDLER !!DWARF
	CALL WNGSXH(CEXH(1),WNCEXH)		!RESET IT
	DEFVAL=F_NO
	JS=WNDPAR('X_LOG',TXT,LEN(TXT),J0)	!SEE IF SWITCH
	IF (JS) THEN
	  JS=WNDPAP('X_LOG','# /NOASK')
	ELSE
	  JS=WNDPAR('LOG',TXT,LEN(TXT),J0,'NO')	!ASK LOG
	END IF
	GOTO 10
C
C WNDLOY
C
	ENTRY WNDLOY(LCD)
C
	CALL WNGSXF(CEXH(1))			!CLEAR EXIT HANDLER !!DWARF
	CALL WNGSXH(CEXH(1),WNCEXH)		!RESET IT
	DEFVAL=F_YES
	JS=WNDPAR('X_LOG',TXT,LEN(TXT),J0)	!SEE IF SWITCH
	IF (JS) THEN
	  JS=WNDPAP('X_LOG','# /NOASK')
	ELSE
	  JS=WNDPAR('LOG',TXT,LEN(TXT),J0,'YES') !ASK LOG
	END IF
	GOTO 10
C
 10	CONTINUE
	IF (.NOT.JS) THEN
	  LCD=DEFVAL				!SET SPOOL FOR NOW
	ELSE IF (TXT.EQ.'YES') THEN		!SET LOG CODE
	  LCD=F_YES
	ELSE IF (TXT.EQ.'NO') THEN
	  LCD=F_NO
	ELSE IF (TXT.EQ.'CATEN') THEN
	  LCD=F_CAT
	ELSE
	  LCD=F_SP
	END IF
C
	RETURN					!READY
C
C
	END

C+ WNDPAR.FAL
C  WNB 900130
C
C  Revisions:
C	WNB 910828	Add ^C
C	WNB 910916	Add NELEM clear
C
	LOGICAL FUNCTION WNDPAR(KW)
C
C  Get user parameter
C
C  Result:
C
C	WNDPAR_J = WNDPAR( KW_C*:I, A2,....,A8)
C			Get DWARF user parameter. A2,...,A8 maybe omitted
C
C  Include files:
C
	INCLUDE 'WNG_DEF'
	INCLUDE 'WXH_DEF'
C
C  Parameters:
C
C
C  Arguments:
C
	CHARACTER*(*) KW			!KEYWORD
C
C  Function references:
C
	EXTERNAL GET_PARM			!GET PARAMETER
	INTEGER WNGARG				!ADDRESS ARG. LIST
	INTEGER WNGARX				!EXECUTE FUNCTION
	INTEGER WNGARA				!GET VARIABLE ADDRESS
	INTEGER WNGASA,WNGASL			!STRING ADDRESS, LENGTH
C
C  Data declarations:
C
	INTEGER ARL(-11:11),ARL1(-11:11)	!ARGUMENT LISTS
	CHARACTER*256 STR			!INPUT LINE
	  DATA STR/' '/				!MAKE SURE PRINTABLE
C-
	J=WNGARG()				!GET ADDR. ARG. LIST
	CALL WNGARL(%VAL(J),ARL(0))		!GET ARGUMENT LIST
	CALL WNGARF(9,ARL(0))			!MAKE CORRECT FOR 9 ARGUMENTS
	DO I=1,ARL(0)				!MAKE NEW LIST
	  ARL1(I)=ARL(I)
	  ARL1(-I)=ARL(-I)
	END DO
	ARL1(0)=9				!# OF ARG.
	ARL1(9)=WNGARA(STR)			!SET RETURN STRING
	ARL(11)=LEN(STR)			!SET LENGTH STRING
	ARL1(-1)=WNGARA(ARL(11))
	IF (ARL1(4).NE.0) THEN			!IF NELEM EXIST MAKE ZERO
	  A_J((ARL1(4)-A_OB)/LB_J)=0
	END IF
	XHCC(0)=1				!INHIBIT ^C
	E_C=WNGARX(GET_PARM,ARL1(0))		!DO ROUTINE
	J=WNGASA(1,ARL(0))			!KW ADDRESS
	CALL WNCTXT(F_P+F_P1,'!AD = !AS',
	1		%VAL(J),WNGASL(1,ARL(0)),STR) !SHOW
	IF (IAND(E_C,1).EQ.1) THEN		!CHECK ERROR
	  WNDPAR=.TRUE.
	ELSE
	  WNDPAR=.FALSE.
	END IF
	XHCC(0)=0				!DO NOT INHIBIT ^C
	IF (XHCC(1).NE.0) THEN			!^C SEEN
	  XHCC(1)=0
	  CALL WNGEX				!EXIT
	END IF
C
	RETURN					!READY
C
C
	END

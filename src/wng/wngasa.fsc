C+ WNGASA.FVX
C  WNB 890308
C
C  Revisions:
C	WNB 921215	Make FSC for VX, AL, HP, DW, SW, CV
C
	INTEGER FUNCTION WNGASA(PARG,ARGL)
C
C  Get string address/length from argument list
C
C  Result:
C
C	J = WNGASA ( PARG_J:I, ARGL_J(0:*):I) Get string address from PARG
C					argument in ARGL list, or zero if none
C					available
C	J = WNGASL ( PARG_J:I, ARGL_J(0:*):I) Get string length from PARG
C					argument in ARGL list, or zero if none
C					available
C
C  Include files:
C
	INCLUDE 'WNG_DEF'
C
C  Parameters:
C
C
C  Arguments:
C
	INTEGER PARG				!ARGUMENT NUMBER
	INTEGER ARGL(0:*)			!ARGUMENT LIST
C
C  Entry points:
C
	INTEGER WNGASL
C
C  Function references:
C
#ifdef wn_vx__
	INTEGER*2 WNGGI				!CONVERT VALUE
	INTEGER WNGGJ
#endif
#ifdef wn_al__
	INTEGER WNGGJ
#endif
C
C  Data declarations:
C
C-
	WNGASA=0				!ASSUME NOT PRESENT
	IF (PARG.GT.0 .AND. PARG.LE.ARGL(0)) THEN !COULD BE PRESENT
	  IF (ARGL(PARG).NE.0) THEN		!DESCRIPTOR PRESENT
#ifdef wn_vx__
	    WNGASA=WNGGJ(%VAL(ARGL(PARG)+4))	!STRING ADDRESS
#else
	    WNGASA=ARGL(PARG)			!STRING ADDRESS
#endif
	  END IF
	END IF
C
	RETURN
C
C WNGASL
C
	ENTRY WNGASL(PARG,ARGL)
C
	WNGASL=0				!ASSUME NOT PRESENT
	IF (PARG.GT.0 .AND. PARG.LE.ARGL(0)) THEN !COULD BE PRESENT
#ifdef wn_vx__
	  IF (ARGL(PARG).NE.0) THEN		!DESCRIPTOR PRESENT
	    WNGASL=WNGGI(%VAL(ARGL(PARG)))	!SET STRING LENGTH
	  END IF
#else
  #ifdef wn_al__
	  J=PARG-ARGL(0)-1			!LENGTH POINTER
	  IF (ARGL(J).NE.0) THEN		!LENGTH PRESENT
	    WNGASL=WNGGJ(%VAL(ARGL(J)))		!SET STRING LENGTH
	  END IF
  #else
	  IF (ARGL(-1).LT.ARGL(-2)) THEN	!STRING LENGTH PRESENT
	    ARGL(-1)=ARGL(-1)+1			!COUNT STRING LENGTH SEEN
	    WNGASL=ARGL(-ARGL(-1)-2)		!SET STRING LENGTH
	  END IF
  #endif
#endif
	END IF
C
	RETURN
C
C
	END

C+ WNGCST.FVX
C  WNB 910320
C
C  Revisions:
C
	SUBROUTINE WNGCST(RAR,IAR)
C
C  Get computer statistics
C
C  Result:
C
C	CALL WNGCST( RAR_E(0:3):O, IAR_J(0:3):O)
C				Returns in RAR four times in seconds,
C				and in IAR four counts:
C				RAR(0)= elapsed time
C				RAR(1)= CPU time
C				RAR(2)= undefined
C				RAR(3)= undefined
C				IAR(0)= direct I/O count
C				IAR(1)= pagefault count
C				IAR(2)= undefined
C				IAR(3)= undefined
C	CALL WNGCS0		Re-init after use
C
C  Include files:
C
	INCLUDE 'WNG_DEF'
	INCLUDE '($LIBDTDEF)'
C
C  Parameters:
C
C
C  Arguments:
C
	REAL RAR(0:3)			!RETURNED TIMES
	INTEGER IAR(0:3)		!RETURNED COUNTS
C
C  Function references:
C
	INTEGER LIB$INIT_TIMER		!INIT. TIMER
	INTEGER LIB$STAT_TIMER		!GET STATISTICS
C
C  Data declarations:
C
	INTEGER TM(0:2)			!TIME VALUES
C
C  Commons:
C
	INTEGER IVAL			!INITIALISATION TEST
	  DATA IVAL/0/
	COMMON /WNGCST_COM/ IVAL
C-
C
C INIT
C
	IF (IVAL.EQ.0) THEN			!FIRST CALL
	  IF (LIB$INIT_TIMER()) THEN		!DO INIT
	    IVAL=1				!NON-FIRST
	  END IF
	  DO I=0,3				!SET ALL ZERO
	    RAR(I)=0
	    IAR(I)=0
	  END DO
C
	  RETURN
	END IF
C
C GET TIMES AND COUNTS
C
	DO I=0,3				!SET ALL ZERO
	  RAR(I)=0
	  IAR(I)=0
	END DO
	IF (IVAL.NE.0) THEN			!CAN DO
	  IF (LIB$STAT_TIMER(1,TM)) THEN	!ELAPSED TIME
	    CALL LIB$CVTF_FROM_INTERNAL_TIME(LIB$K_DELTA_SECONDS_F,
	1			RAR(0),TM)	!MAKE SECONDS
	  END IF
	  IF (LIB$STAT_TIMER(2,TM)) RAR(1)=TM(0)/100. !CPU TIME IN SEC.
	  IF (LIB$STAT_TIMER(4,TM)) IAR(0)=TM(0) !DIRECT I/O COUNT
	  IF (LIB$STAT_TIMER(5,TM)) IAR(1)=TM(0) !PAGEFAULT COUNT
	END IF
C
	RETURN
C
C RE-INIT
C
	ENTRY WNGCS0
C
	IVAL=0					!RE-INIT
C
	RETURN
C
C
	END

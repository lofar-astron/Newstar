# WNGFEX.SSC
# WNB 920911
#
# Revisions:
#       HjV 920914      Add type LA (print text on laser-printer)
#       WNB 920917      New spooling command atnf
#       WNB 920917      Delete setenv WNG_SITE and other typos ({}!!)
#       HjV 920922      Get correct filename and replace loch by locr
#       WNB 921006      Change to non-binary for PostScript
#       WNB 921006      Error in RUG TXA4:: and 5::
#       WNB 921013      Change ATNF for PostScript error
#       WNB 921021      Add A3 plotter
#       WNB 921126      More lines for atnf printer
#       WNB 921130      Change tr for HP
#       HjV 921203      Add site RAIUB
#       HjV 921215      Change for RUG
#       WNB 921222      Add LN, RL, LR
#       WNB 921222      Make it into WNGFEX.SSC; remove A3 etc from non-nfra
#       HjV 930115      Finalize A3 plotter for UNIX
#                       print direct on PS-printer on NFRA for UNIX-machines
#       HjV 930226      Add site WSRT, add HP for NFRA
#	HjV 930414	Take correct PS-printer on NFRA-VAX
#			Change command to print on NFRA-HP
#	HjV 930630	Add site KOSMA, change VAX-NFRA queue CMPQ into CMPS
#	HjV 930715	Remove a part of QMS
#	HjV 930914	Add site ARECB
#
# General file handling
#       Use as: WNGFEX "type" nam1 nam2 action
#       Type can be:
#               SP      spool file nam1 as nam2
#               RE      rename file nam1 into nam2
#               CC      concatenate file nam1 onto nam2
#               LN      make logical link nam2 to nam1
#               RL      delete all .log, .tmp, .PLT or size == 0
#                               older than action (or 5) days
#               LR      combine LN and RL
#               QM      spool nam1 as nam2 to QMS plotter
#               PS      spool nam1 as nam2 to PS plotter
#               A3      spool nam1 as nam2 to A3-PS plotter
#               LA      spool nam1 as nam2 to LAser printer
#       Action is series of letters:
#               D       delete file after spooling and concatenation
#       or an unsigned value for RL/LR
#
	set Upc="ABCDEFGHIJKLMNOPQRSTUVWXYZ"            # for translation
	set Lowc="abcdefghijklmnopqrstuvwxyz"
	set loa=""
	if ($#argv > 1) set loa=`echo $argv[1] | tr $Upc $Lowc` # type
	set lod=""
	if ($#argv > 3) set lod=`echo $argv[4] | tr $Upc $Lowc` # action
	if ($#argv < 2) goto EXIT                       # no file names
	set lob=$argv[2]                                # input name
	if ($#argv < 3) then                            # no output name
	  set loc=$lob                                  # same
	else
	  set loc=$argv[3]                              # output name
	endif
	set loct=$loc:t
	set locr=$loct:r                                # output name
	set loce=$loc:e                                 # output extension
	if (-e ${USER}_${locr}.$loce) then
	  'rm' ${USER}_${locr}.$loce
	endif
	if ($loa =~ sp*) goto SPL                       # spool
	if ($loa =~ re*) goto REN                       # rename
	if ($loa =~ cc*) goto CAT                       # concatenate
	if ($loa =~ ln*) goto LNK                       # link
	if ($loa =~ rl*) goto REM                       # remove tmp, log
	if ($loa =~ lr*) goto LRM                       # link and remove
	if ($loa =~ qm*) goto QMS                       # spool QMS
	if ($loa =~ ps*) goto PSP                       # spool PS
	if ($loa =~ a3*) goto PA3                       # spool A3
	if ($loa =~ la*) goto LAS                       # spool LA
EXIT:
	if (-e ${USER}_${locr}.$loce) then
	  'rm' ${USER}_${locr}.$loce
	endif
	exit                                            # unknown
#
# Spool
#
SPL:
	if (! -e $lob) goto EXIT                        # file unknown
	ln -s $lob ${USER}_${locr}.$loce
	     @ statx = { ftp -n << qqq }
	       open rzmvx5
	       user printvax printvax_90a
	       put $lob lpa0:${USER}_${locr}.$loce      # print
	       close
	       quit
qqq
#	   endif
#	  endif
	if (! $statx) then                              # ok
	  if ($lod =~ *d*) 'rm' $lob                    # delete
	endif
	goto EXIT                                       # ready
#
# Rename
#
REN:
	if (! -e $lob) goto EXIT                        # file unknown
	'mv' $lob $loc                                  # rename
	goto EXIT                                       # ready
#
# Catenate
#
CAT:
	if (! -e $lob) goto EXIT                        # file unknown
	if (-e $loc) then                               # append to known
	  @ statx = { cat $lob >> $loc }
	else                                            # copy to unknown
	  @ statx = { cat $lob > $loc }
	endif
	if (! $statx) then                              # ok
	  if ($lod =~ *d*) 'rm' $lob                    # delete
	endif
	goto EXIT                                       # ready
#
# Link
#
LNK:
	'rm' $loc >& /dev/null                          # remove old link
	ln -s $lob $loc                                 # make link
	goto EXIT
#
# Link and remove
#
LRM:
	'rm' $loc >& /dev/null                          # remove old link
	ln -s $lob $loc                                 # make link
#
# Remove log, tmp, PLT, size 0
#
REM:
	if ("$lod" == "" || "0123456789" !~ *$lod*) set lod=5
	set loo='( -name *.[tT][mM][pP] -o -name *.[lL][oO][gG]'
	set loo="$loo -o -name *.PLT -o -size 0 )"
	set lop="-atime +$lod -exec rm -f {} ;"
	set noglob; find . $loo $lop >& /dev/null; unset noglob
	goto EXIT
#
# Spool QMS plot
#
QMS:
	if (! -e $lob) goto EXIT                        # file unknown
	ln -s $lob ${USER}_${locr}.$loce
	@ statx = 0                                     # ok
	if (! $statx) then                              # ok
	  if ($lod =~ *d*) 'rm' $lob                    # delete
	endif
	goto EXIT                                       # ready
#
# Spool PS plot
#
PSP:
	if (! -e $lob) goto EXIT                        # file unknown
	ln -s $lob ${USER}_${locr}.$loce
	     if ("$WNG_TYPE" == "sw" ) then
	       @ statx = { lpr -Ppsprint ${USER}_${locr}.$loce }
	       set statx=1                              # make sure file kept
	     else if ("$WNG_TYPE" == "hp") then
	       @ statx = { lpr -dpsprint ${USER}_${locr}.$loce }
	       set statx=1                              # make sure file kept
	     else if ("$WNG_TYPE" == "al") then
	       @ statx = { lpr -Ppmq ${USER}_${locr}.$loce }
	       set statx=1                              # make sure file kept
	     else
	       set statx=1                              # make sure file kept
	     endif
#	    endif
#	   endif
	if (! $statx) then                              # ok
	  if ($lod =~ *d*) 'rm' $lob                    # delete
	endif
	goto EXIT                                       # ready
#
# Spool A3 plot
#
PA3:
	if (! -e $lob) goto EXIT                        # file unknown
	ln -s $lob ${USER}_${locr}.$loce
	@ statx = 0                                     # ok
	if (! $statx) then                              # ok
	  if ($lod =~ *d*) 'rm' $lob                    # delete
	endif
	goto EXIT                                       # ready
#
# Spool LA plot
#
LAS:
	if (! -e $lob) goto EXIT                        # file unknown
	ln -s $lob ${USER}_${locr}.$loce
	@ statx = 0                                     # 0
	if (! $statx) then                              # ok
	  if ($lod =~ *d*) 'rm' $lob                    # delete
	endif
	goto EXIT                                       # ready
#

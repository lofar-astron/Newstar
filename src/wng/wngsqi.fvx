C+ WNGSQI.FVX
C  WNB 930818
C
C  Revisions:
C
	LOGICAL FUNCTION WNGSQI(ENTRY,HEAD)
C
C  Manipulate absolute queues
C
C  Result:
C
C	WNGSQI_L = WNGSQI( ENTRY_J(*):IO, HEAD_J(2):IO)
C			Insert entry at head: .TRUE. if first inserted
C	WNGSQR_L = WNGSQR( ENTRY_J(*):IO, ADDR_J:O)
C			Remove entry at FROM, and give its ADDRess
C			.TRUE. if entry existed
C			Note: WNGSQI and WNGSQR are not interlocked against
C				AST and other interrupts
C
C  Include files:
C
	INCLUDE 'WNG_DEF'
C
C  Parameters:
C
C
C  Arguments:
C
	INTEGER ENTRY(0:*)	!ENTRY
	INTEGER HEAD(0:*)	!ENTRY WHERE TO INSERT
	INTEGER ADDR		!ADDRESS OF ENTRY REMOVED
C
C  Entry points:
C
	LOGICAL WNGSQR
C
C  Function references:
C
C
C  Data declarations:
C
C-
C
C WNGSQI
C
	ENTRY(0)=HEAD(0)			!FORWARD LINK ENTRY
	ENTRY(1)=%LOC(HEAD)			!BACKWARD LINK ENTRY
	A_J((HEAD(0)-A_OB)/LB_J+1)=%LOC(ENTRY)	!BACKWARD LINK SUCCESSOR
	HEAD(0)=%LOC(ENTRY)			!FORWARD LINK PREDECESSOR
	WNGSQI=ENTRY(0).EQ.ENTRY(1)		!SET IF FIRST
C
	RETURN
C
C WNGSQR
C
	ENTRY WNGSQR(ENTRY,ADDR)
C
	A_J((ENTRY(1)-A_OB)/LB_J)=ENTRY(0)	!FORWARD LINK PREDECESSOR
	A_J((ENTRY(0)-A_OB)/LB_J+1)=ENTRY(1)	!BACKWARD LINK PREDECESSOR
	ADDR=%LOC(ENTRY)
	WNGSQR=ADDR.NE.ENTRY(1)			!EXISTED
C
	RETURN
C
C
	END

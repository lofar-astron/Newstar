C+ WNMLIA.FOR
C  WNB 950330
C
C  Revisions:
C
	SUBROUTINE WNMLIA(MAR,TYPE,PREC)
C
C  Initialise least squares area
C
C  Result:
C
C	CALL WNMLIA( MAR_J:I, TYPE_J:I, PREC_E:I)
C				Iniialise the least squares area MAR, according
C				to the TYPE:
C				LSQ_I_ALL (or default) : init full area
C				LSQ_I_NORM : init unknown part of normal
C						equations
C				LSQ_I_KNOWN: init known part of equations
C				LSQ_I_NONLIN: init non-linear part
C				LSQ_I_SOL: init all but non-linear part
C				LSQ_I_PREC: fill precision factor with PREC
C	CALL WNMLID( MAR_J:I)	Init diagonal elements to 1 if near zero
C	CALL WNMLIF( MAR_J:I, FAC_D:I)
C				Multiply diagonal elements with FAC
C		
C
C  Include files:
C
	INCLUDE 'WNG_DEF'
	INCLUDE 'LSQ_O_DEF'
C
C  Parameters:
C
C
C  Arguments:
C
	INTEGER MAR				!AREA POINTER
	INTEGER TYPE				!TYPE OF INIT
	REAL PREC				!PRECISION FACTOR
	DOUBLE PRECISION FAC			!MULTIPLICATION FACTOR
C
C  Function references:
C
	INTEGER WNMLGE				!GET ARRAY ELEMENT POINTER
C
C  Data declarations:
C
C-
	IF (IAND(TYPE,LSQ_I_ALL+LSQ_I_PREC).EQ.0) THEN
	  J0=LSQ_I_ALL				!ASSUME ALL
	ELSE
	  J0=TYPE
	END IF
	J1=A_J(MAR+LSQ_DBL_J)			!A_D POINTER
	I1=A_J(MAR+LSQ_N_J)			!N
	I2=A_J(MAR+LSQ_M_J)			!M
C
C NON-LINEAR PART
C
	IF (IAND(J0,LSQ_I_NONLIN).NE.0) THEN	!NON-LINEAR PART
	  A_D(J1+LSQ_NONLIN_D)=NLFAC 		!START NON-LINEAR FACTOR
	  A_J(MAR+LSQ_BITS_J)=IAND(A_J(MAR+LSQ_BITS_J),NOT(LSQ_U_NONLIN))
	END IF
C
C UNKNOWN PART
C
	IF (IAND(J0,LSQ_I_NORM).NE.0) THEN
	  A_J(MAR+LSQ_R_J)=I1			!ASSUME RANK=N
	  I3=A_J(MAR+LSQ_PIV_J)			!PIVOT INDEX
	  DO I=0,I1-1				!INIT PIVOT
	    A_J(I3+I)=I
	  END DO
	  I3=A_J(MAR+LSQ_NORM_J)		!NORMAL EQUATIONS
	  I4=(I1*(I1+1))/2-1			!LENGTH
	  DO I=I3,I3+I4
	    A_D(I)=0D0
	  END DO
	  A_J(MAR+LSQ_BITS_J)=IAND(A_J(MAR+LSQ_BITS_J),
	1	NOT(LSQ_U_INVERTED+LSQ_U_TRIANGLE))
	END IF
C
C KNOWN PART
C
	IF (IAND(J0,LSQ_I_KNOWN).NE.0) THEN
	  I3=A_J(MAR+LSQ_KNOWN_J)		!KNOWN PART
	  I4=I2*I1-1				!LENGTH
	  DO I=I3,I3+I4
	    A_D(I)=0D0
	  END DO
	  I3=A_J(MAR+LSQ_ERROR_J)		!ERROR PART
	  I4=LERR__N*I2-1			!LENGTH
	  DO I=I3,I3+I4
	    A_D(I)=0D0
	  END DO
	END IF
C
C PRECISION FACTOR
C
	IF (IAND(J0,LSQ_I_PREC).NE.0) THEN
	  A_D(J1+LSQ_FACTOR_D)=ABS(PREC)
	END IF
C
	RETURN
C
C WNMLID
C
	ENTRY WNMLID(MAR)
C
	D0=A_D(A_J(MAR+LSQ_DBL_J)+LSQ_FACTOR_D)	!PRECISION
	DO I=0,A_J(MAR+LSQ_NUN_J)-1
	  I2=WNMLGE(MAR,I,I)
	  IF (ABS(A_D(I2)).LE.D0) A_D(I2)=1D0
	END DO
C
	RETURN
C
C WNMLIF
C
	ENTRY WNMLIF(MAR,FAC)
C
	DO I=0,A_J(MAR+LSQ_NUN_J)-1
	  I2=WNMLGE(MAR,I,I)
	  A_D(I2)=A_D(I2)*FAC
	END DO
C
	RETURN
C
C
	END

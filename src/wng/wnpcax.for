C+ WNPCAX.FOR
C  WNB 911223
C
C  Revisions:
C	GvD	920501 Use J5 iso. JS
C
C  Calcomp routines for WQ package
C
	SUBROUTINE AXIS(RR1,RR2,SS1,II4,RR5,RR6,RR7,RR8)
C
C  Result:
C
C
C  Include files:
C
	INCLUDE 'WNG_DEF'
C
C  Entry points:
C
C
C  Parameters:
C
C
C  Arguments:
C
	REAL RR1,RR2,RR5,RR6,RR7,RR8
	INTEGER II3,II4,II5,II6
	CHARACTER*(*) SS1
	REAL AR1(*),AR2(*)
C
C  Function references:
C
C
C  Data declarations:
C
	REAL RC,RS
	REAL RFX,RFY,RSX,RSY,RSC,RAN
	INTEGER JSC
C-
C
C AXIS
C
	J5=SIGN(1,II4)				!DIRECTION ANNOTATION
	RC=COS(RR6*RAD)				!ROTATION
	RS=SIN(RR6*RAD)
	CALL PLOT(RR1,RR2,3)			!DRAW AXIS
	CALL PLOT(RR1+RR5*RC,RR2+RR5*RS,2)
C
	DO I=0,NINT(RR5)
	  CALL PLOT(RR1+I*RC,RR2+I*RS,3)	!TICKS
	  CALL PLOT(RR1+I*RC+J5*.04*RS,RR2+I*RS+J5*.04*RC,2)
	END DO
C
	RAN=MIN((RR5-ABS(II4)*0.12)/2.,0.)	!ANNOTATION OFFSET
	CALL SYMBOL(RR1+RAN*RC+J5*.24*RS,RR2+RAN*RS+J5*0.24*RC,
	1		0.12,SS1(1:MIN(LEN(SS1),ABS(II4))),RR6,ABS(II4)) !ANNOT.
C
	RSC=1.					!GET SCALE
	DO WHILE (ABS(RR8/RSC).GT.100.)
	  RSC=RSC*10.
	END DO
	DO WHILE (ABS(RR8/RSC).LT..01)
	  RSC=RSC/10.
	END DO
	JSC=NINT(LOG10(RSC))
	IF (JSC.NE.0) THEN
	  CALL SYMBOL(RR1+(RAN+(ABS(II4)+1)*.12)*RC+J5*.24*RS,
	1		RR2+(RAN+(ABS(II4)+1)*.12)*RS+J5*.24*RC,
	2		0.12,'*10',RR6,3)
	  CALL NUMBER(RR1+(RAN+(ABS(II4)+4)*.12)*RC+J5*.24*RS,
	1		RR2+(RAN+(ABS(II4)+4)*.12)*RS+(J5*.24+.06)*RC,
	2		0.06,REAL(JSC),RR6,-1)
	END IF
C
	CALL NUMBER(RR1+J5*.12*RS,RR2+J5*.12*RC,RR7/RSC,.1,RR6,2)
	DO I=1,RR5
	  CALL NUMBER(RR1+J5*.12*RS+(I-.2)*RC,RR2+J5*.12*RC+(I-.2)*RS,
	1		(RR7+I*RR8)/RSC,.1,RR6,2)
	END DO
C
	RETURN
C
C LINE
C
	ENTRY LINE(AR1,AR2,II3,II4,II5,II6)
C
	RFX=AR1(II3*II4+1)					!SCALES
	RFY=AR2(II3*II4+1)
	RSX=AR1(II3*II4+II4+1)
	RSY=AR2(II3*II4+II4+1)
	DO I=1,II3,II4
	  IF (I.EQ.1) THEN
	    IF (II5.EQ.0) THEN
	      CALL PLOT((AR1(I)-RFX)/RSX,(AR2(I)-RFY)/RSY,3)
	    ELSE
	      CALL SYMBOL((AR1(I)-RFX)/RSX,(AR2(I)-RFY)/RSY,
	1			.08,CHAR(II6),0,-1)
	    END IF
	  ELSE
	    IF (II5.LT.0) THEN
	      CALL PLOT((AR1(I)-RFX)/RSX,(AR2(I)-RFY)/RSY,3)
	    ELSE
	      CALL PLOT((AR1(I)-RFX)/RSX,(AR2(I)-RFY)/RSY,2)
	    END IF
	    IF (II5.NE.0) THEN
	      IF (MOD(I-1,II5).EQ.0)
	1		CALL SYMBOL((AR1(I)-RFX)/RSX,(AR2(I)-RFY)/RSY,
	2				.08,CHAR(II6),0,-1)
	    END IF
	  END IF
	END DO
C
	RETURN
C
C
	END

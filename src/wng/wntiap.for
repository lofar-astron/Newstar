C+ WNTIAP.FOR
C  WNB 930501
C
C  Revisions:
C
	LOGICAL FUNCTION WNTIAP(TLIN,PT,NAM,CFLIN)
C
C  Analyse a parameter (%) line
C
C  Result:
C
C	WNTIAP_L = WNTIAP( TLIN_C*:I, PT_J:IO, NAM_C*:O, CFLIN_J:I)
C				Analyse a line given in TLIN at PT for
C				% statement. NAM returns the % name found.
C				CFLIN is the current comment line
C
C  Include files:
C
	INCLUDE 'WNG_DEF'
	INCLUDE 'WNT_O_DEF'
	INCLUDE 'WNT_DEF'
C
C  Parameters:
C
C
C  Arguments:
C
	CHARACTER*(*) TLIN		!LINE TO DO
	INTEGER PT			!POINTER INTO LINE
	CHARACTER*(*) NAM		!% NAME FOUND
	INTEGER CFLIN			!CURRENT COMMENT LINE
C
C  Function references:
C
	LOGICAL WNCASC			!TEST CHARACTER GIVEN
	LOGICAL WNCAFN			!GET NAME
	INTEGER WNCAFU			!MINIMAX FIT
	LOGICAL WNCAFS,WNCAFT,WNCAFF	!GET FIELD
	INTEGER WNCALN			!STRING LENGTH
	INTEGER WNTIBP			!SAVE AREA
	LOGICAL WNTIVP			!PUT VALUE
	LOGICAL WNTIVG			!GET VALUE
C
C  Data declarations:
C
	CHARACTER*(MXLNAM) LNAM,LNAM1	!LOCAL NAME
	CHARACTER*(MXSLIN) LLIN		!LOCAL LINE
	  BYTE BLLIN(0:MXSLIN-1)
	  EQUIVALENCE (LLIN,BLLIN)
	BYTE FENTB(0:WNTFHDL-1)		!FORMAT ENTRY FILLED
	  INTEGER FENTJ(0:WNTFHDL/LB_J-1)
	  EQUIVALENCE (FENTB,FENTJ)
	BYTE DFENTB(0:WNTDHDL-1)	!DATA INIT. ENTRY FILLED
	  INTEGER DFENTJ(0:WNTDHDL/LB_J-1)
	  EQUIVALENCE (DFENTB,DFENTJ)
C-
C
C INIT
C
	WNTIAP=.TRUE.				!ASSUME OK
	NAM=' '					!FOR ERROR MESSAGES
C
C %%
C
	IF (WNCASC(TLIN,PT,'%')) THEN		!%%
	  IF (.NOT.WNCAFN(TLIN,PT,NAM)) GOTO 900 !UNKNOWN
	  I=WNCAFU(NAM,P__TXT)			!TEST NAME
	  IF (I.LE.P_SYS .AND. I.GT.0) THEN
	    CALL WNCTXT(F_P,'!16C%!AS=!AS',
	1		P__TXT(I),PARM(I))	!SHOW DEFAULT
	  ELSE
	    GOTO 900				!UNKNOWN
	  END IF
	  CALL WNCASB(TLIN,PT)
	  IF (PT.LE.LEN(TLIN)) GOTO 900		!FORMAT ERROR
	ELSE
C
C %(NO)LIST
C
	  IF (.NOT.WNCAFN(TLIN,PT,NAM)) GOTO 900 !UNKNOWN
	  I=WNCAFU(NAM,P__TXT)			!TEST NAME
	  CALL WNCASB(TLIN,PT)			!SKIP BLANK
	  IF (.NOT.WNCASC(TLIN,PT,'=')) THEN	!NO =
	    CALL WNCASB(TLIN,PT)
	    IF (PT.LE.LEN(TLIN)) GOTO 900	!FORMAT ERROR
	    IF (I.EQ.P_LIS) THEN
	      LSTON=.TRUE.
	    ELSE IF (I.EQ.P_NOL) THEN
	      LSTON=.FALSE.
	    ELSE IF (I.EQ.P_PRI) THEN
	      PRTON=.TRUE.
	    ELSE IF (I.EQ.P_NOP) THEN
	      PRTON=.FALSE.
	    ELSE IF (I.EQ.P_ALI) THEN
	      ALGON=.TRUE.
	    ELSE IF (I.EQ.P_NOA) THEN
	      ALGON=.FALSE.
	    ELSE
	      GOTO 900				!ERROR
	    END IF
C
C %LOCAL/GLOBAL
C
	  ELSE IF (I.EQ.P_LOC .OR. I.EQ.P_GLO) THEN
	    CALL WNCASB(TLIN,PT)		!SKIP BLANK
	    IF (.NOT.WNCAFN(TLIN,PT,LNAM)) GOTO 900 !ILLEGAL NAME
	    CALL WNCASB(TLIN,PT)		!SKIP BLANK
	    IF (.NOT.WNCASC(TLIN,PT,'=')) GOTO 900 !ILLEGAL FORMAT
	    IF (.NOT.WNTIVP(TLIN,PT,LNAM,I.EQ.P_GLO)) GOTO 900 !PUT NAME
	    IF (I.EQ.P_GLO) THEN		!MAKE A PARAMETER ENTRY
	      I1=1				!POINTER
	      IF (.NOT.WNTIVG(LNAM,I1,JS,I2,LNAM1)) GOTO 900 !GET VALUE
	      CALL WNGMVZ(WNTFHDL,FENTJ)	!CLEAN
	      FENTJ(WNTF_BTYP_J)=BT_PAR		!BLOCK TYPE
	      IF (JS) THEN			!INTEGER
	        FENTJ(WNTF_ALEN_J)=LB_J		!ALIGN LENGTH
	        FENTJ(WNTF_DTP_J)=T_J		!DATA TYPE
	        FENTJ(WNTF_ULEN_J)=LB_J		!UNIT LENGTH
	        FENTJ(WNTF_SLEN_J)=0		!STRING LENGTH
	      ELSE				!CHARACTER
	        FENTJ(WNTF_ALEN_J)=LB_C		!ALIGN LENGTH
	        FENTJ(WNTF_DTP_J)=T_C		!DATA TYPE
	        FENTJ(WNTF_ULEN_J)=LB_C		!UNIT LENGTH
	        FENTJ(WNTF_SLEN_J)=WNCALN(LNAM1) !STRING LENGTH
	      END IF
	      FENTJ(WNTF_DIM_J)=0		!DIMENSION
	      FENTJ(WNTF_TLEN_J)=1		!LENGTH TO FILL
	      CALL WNGMFS(WNTF_NAM_N,LNAM,FENTB(WNTF_NAM_1)) !SET NAME
	      FENTJ(WNTF_NINI_J)=1		!# OF DATA INIT
	      DFENTJ(WNTD_REP_J)=1		!REPEAT FACTOR
	      CALL WNGMFS(WNTD_STR_N,LNAM1,DFENTB(WNTD_STR_1)) !SET DATA INIT
	      FENTJ(WNTF_INIP_J)=WNTIBP(DFDES,DFENTB) !SET POINTER
	      FENTJ(WNTF_ENT_J)=CFLIN		!COMMENT POINTER
	      I=WNTIBP(XFDES,FENTB)		!WRITE PARAMETER LINE
	      PARSN=.TRUE.			!SET PARAMETER SEEN
	    END IF
C
C %NAME/DATE/USER/VERSION/SYSTEM
C
	  ELSE IF (I.GT.0 .AND. I.LE.P_SYS) THEN
	    CALL WNCASB(TLIN,PT)		!SKIP BLANK
	    IF (.NOT.WNTIVG(TLIN,PT,JS,I2,PARM(I))) GOTO 900 !SET PARAMETER
C
C %INSERT/INCLUDE
C
	  ELSE IF (I.EQ.P_INS .OR. I.EQ.P_INC) THEN
	    CALL WNCASB(TLIN,PT)		!SKIP BLANK
	    IF (.NOT.WNCAFS(TLIN,PT,INFIL)) GOTO 900 !GET FILE NAME
C
C %REVISION
C
	  ELSE IF (I.EQ.P_REV) THEN
	    CALL WNCASB(TLIN,PT)		!SKIP BLANK
	    IF (.NOT.WNCAFT(TLIN,PT,LLIN,'=')) GOTO 900 !GET USER NAME
	    IF (.NOT.WNCASC(TLIN,PT,'=')) GOTO 900 !NO =
	    CALL WNCASB(TLIN,PT)		!SKIP BLANK
	    IF (.NOT.WNCAFT(TLIN,PT,LLIN(MXLPAR+1:),'=')) GOTO 900 !DATE
	    IF (.NOT.WNCASC(TLIN,PT,'=')) GOTO 900 !NO =
	    IF (.NOT.WNCAFF(TLIN,PT,LLIN(2*MXLPAR+1:))) !TEXT
	1		LLIN(2*MXLPAR+1:)=' '
	    I=WNTIBP(RBDES,BLLIN)		!SAVE REVISION INFO
C
C %COMMENT
C
	  ELSE IF (I.EQ.P_COM) THEN
	    IF (.NOT.WNCAFF(TLIN,PT,LLIN)) LLIN=' ' !TEXT
	    I=WNTIBP(CMDES,BLLIN)		!SAVE COMMENT INFO
C
C %FORTRAN
C
	  ELSE IF (I.EQ.P_FOR) THEN
	    CALL WNCASB(TLIN,PT)		!SKIP BLANK
	    IF (.NOT.WNCAFF(TLIN,PT,LLIN)) LLIN=' ' !TEXT
	    IF (DEP.EQ.0) THEN
	      I=WNTIBP(FMDES,BLLIN)		!SAVE FORTRAN INFO
	    ELSE
	      I=WNTIBP(FEDES,BLLIN)
	    END IF
C
C %CC
C
	  ELSE IF (I.EQ.P_CC) THEN
	    CALL WNCASB(TLIN,PT)		!SKIP BLANK
	    IF (.NOT.WNCAFF(TLIN,PT,LLIN)) LLIN=' ' !TEXT
	    IF (DEP.EQ.0) THEN
	      I=WNTIBP(CCDES,BLLIN)		!SAVE CC INFO
	    ELSE
	      I=WNTIBP(CEDES,BLLIN)
	    END IF
C
C END %
C
	  ELSE
	    GOTO 900				!UNKNOWN % NAME
	  END IF
	END IF
C
C FINISH
C
 800	CONTINUE
C
	RETURN
C
C ERROR
C
 900	CONTINUE
	WNTIAP=.FALSE.
	GOTO 800
C
C
	END

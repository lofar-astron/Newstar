C+ WNTIO0.FOR
C  WNB 930501
C
C  Revisions:
C
	SUBROUTINE WNTIO0(TP,FENTJ,STR)
C
C  Obtain array indices string
C
C  Result:
C
C	CALL WNTIO0( TP_J:I, FENTJ_S:I, STR_C*:O)
C			Using TP (0=Fortran, else C) produce an array string
C			using the data entry FENTJ in STR
C
C  Include files:
C
	INCLUDE 'WNG_DEF'
	INCLUDE 'WNT_O_DEF'
C
C  Parameters:
C
C
C  Arguments:
C
	INTEGER TP		!FORTRAN(0)/C
	INTEGER FENTJ(0:*)	!DATA STRUCTURE
	CHARACTER*(*) STR	!OUTPUT STRING
C
C  Function references:
C
	INTEGER WNCALN		!STRING LENGTH
C
C  Data declarations:
C
C-
C
C INIT
C
	STR=' '						!ARRAY STRING
	IF (FENTJ(WNTF_DIM_J).GT.0) THEN		!ARRAY
C
C FORTRAN
C
	  IF (TP.EQ.0) THEN
	    STR='('					!INDEX STRING
	    DO I3=0,FENTJ(WNTF_DIM_J)-1			!ALL DIMENSIONS
	      J=WNCALN(STR)+1				!PTR STRING
	      CALL WNCTXS(STR(J:),'!SJ:!SJ,',
	1			FENTJ(WNTF_IND_J+2*I3),
	1			FENTJ(WNTF_IND_J+2*I3)+
	1			FENTJ(WNTF_IND_J+2*I3+1)-1) !INDICES
	    END DO
	    J=WNCALN(STR)				!PTR STRING
	    STR(J:J)=')'
C
C C
C
	  ELSE						!C
	    STR=' '					!INDEX STRING
	    DO I3=FENTJ(WNTF_DIM_J)-1,0,-1		!ALL DIMENSIONS
	      J=WNCALN(STR)+1				!PTR STRING
	      CALL WNCTXS(STR(J:),'[!SJ]',
	1		FENTJ(WNTF_IND_J+2*I3+1)) 	!INDEX LENGTH
	    END DO
	    IF (FENTJ(WNTF_DTP_J).EQ.T_X .OR.
	1		FENTJ(WNTF_DTP_J).EQ.T_Y) THEN 	!COMPLEX
	      J=WNCALN(STR)+1				!PTR STRING
	      STR(J:)='[2]'
	    END IF
C
C READY
C
	  END IF					!FORTRAN/C
	END IF						!ARRAY
C
	RETURN
C
C
	END

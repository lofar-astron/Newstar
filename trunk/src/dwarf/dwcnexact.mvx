;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
;.Ident:	DWC_NEXACT
;.Keywords:	Process Information
;.Author:	Ger van Diepen (NFRA, Dwingeloo)
;.Language:	VAX/Macro
;.Environment:	VAX/VMS
;.Comments:
;.Version:	830103 GVD - creation DWCNEXACT.MAR
;.Version:	840808 GVD - image name extracted
;.Version:	910820 FMO - new header
;.Version:	920224 GvD - no optional arguments in MSG anymore
;.Version:	930202 HjV - $CODE, $PDATA and $LOCAL expanded
;.Version:	940203 CMV - Changed call to MSG_SWRITE to MSG_SET
;-----------------------------------------------------------------------
;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
;	INTEGER*4 FUNCTION DWC_NEXACT (NEXT,PID,PROCNAME,IMGNAME,UIC,TIME,OWNER)
;
;	INTEGER*4	NEXT		!(m) code (see notes)
;	INTEGER*4	PID		!(o) pidnr of process
;	CHARACTER*(*)	PROCNAME	!(o) name of process
;	CHARACTER*(*)	IMGNAME		!(o) program name
;	INTEGER*4	UIC		!(m) UIC-nr of the process
;				0=UIC-nr will be written in UIC
;				else=UIC of the process must be equal
;					to this UIC
;	REAL*8		TIME		!(o) starting-time of the process
;	INTEGER*4	OWNER		!(o) pidnr of the process-owner
;				(=0 if it's a detached process)
;
;.Purpose:	Get information about active processes
;.Returns:
;	success		1
;	error		2	end of processes
;	error code from SYS$GETJPI
;.Notes:
;	The information consists of pidnr, process-name, uic, starting-time
;	and owner-pid.
;
;	NEXT determines for which process the information will be gotten
;	(own process, arbitrary process or all processes):
;	- 0  = get information about own process
;	- <0 = get information about all processes
;	  NEXT = -1 initially, DWC_NEXACT will update NEXT.
;	  The user must call DWC_NEXACT, until the return-code = 0.
;	  Every call gives information about the next process.
;	- >0 = get information about process with this pidnr
;
;	If UIC = 0, the UIC of the process will be written into UIC.
;	Otherwise, the UIC of the process must equal the given UIC.
;-----------------------------------------------------------------------
;
	.TITLE	DWC_NEXACT GET (NEXT) ACTIVE PROCESS-INFORMATION
	.IDENT	/GVD7AUG84/
;
;
	$JPIDEF
;
	ONEXT=4
	OPID=8
	OPROC=12
	OIMG=16
	OUIC=20
	OTIME=24
	OOWNER=28
;
;
;
	.MACRO	$PDATA
	.PSECT	$PDATA,	PIC,CON,REL,LCL,SHR,NOEXE,RD,NOWRT,LONG
	.IF NDF	$PDATA
$PDATA:
	.ENDC
$RELOC=$PDATA
	.ENDM
ZERO:	.LONG	0
;
;
	.MACRO	$LOCAL
	.PSECT	$LOCAL,	PIC,CON,REL,LCL,NOSHR,NOEXE,RD,WRT,LONG
	.IF NDF	$LOCAL
$LOCAL:
	.ENDC
$RELOC=$LOCAL
	.ENDM
IOSB:	.BLKQ
UIC:	.BLKL
LEN:	.BLKL
LENPRC:	.BLKL
LENIMG:	.BLKL
IMGNAM:	.BLKL	32
;
LIST:
	.WORD	4
	.WORD	JPI$_PID
LISPID:	.BLKL
	.ADDRESS LEN
LISLPR:	.BLKW
	.WORD	JPI$_PRCNAM
LISTPR:	.BLKL
	.ADDRESS LENPRC
	.WORD	128
	.WORD	JPI$_IMAGNAME
	.ADDRESS IMGNAM
	.ADDRESS LENIMG
	.WORD	4
	.WORD	JPI$_UIC
	.ADDRESS UIC
	.ADDRESS LEN
	.WORD	8
	.WORD	JPI$_LOGINTIM
LISTIM:	.BLKL
	.ADDRESS LEN
	.WORD	4
	.WORD	JPI$_OWNER
LISOWN:	.BLKL
	.ADDRESS LEN
	.LONG	0
;
;
;
	.MACRO	$CODE
	.PSECT	$CODE,	PIC,CON,REL,LCL,SHR,EXE,RD,NOWRT,LONG
	.IF NDF	$CODE
$CODE:
	.ENDC
	.ENDM
	.ENTRY	DWC_NEXACT,^M<R2,R3,R4,R5,R6,R7>
;
	MOVL	OPID(AP),LISPID		;ADDRESS PIDNR
	MOVL	OPROC(AP),R7		;ADDRESS STRING-DESCRIPTOR PROCESS-NAME
	MOVW	(R7),LISLPR		;STRING-LENGTH
	MOVL	4(R7),LISTPR		;STRING-ADDRESS
	MOVL	OUIC(AP),R6		;UIC-ADDRESS
	MOVL	OTIME(AP),LISTIM	;TIME-ADDRESS
	MOVL	OOWNER(AP),LISOWN	;OWNER-ADDRESS
;
;			GET NEXT PROCESS
NEXT:	$GETJPI_S EFN=#0,PIDADR=@ONEXT(AP),ITMLST=LIST,IOSB=IOSB
	CMPL	R0,#SS$_NOMOREPROC
	BNEQ	10$
	MOVL	#2,R0			;END-OF-PROCESSES
	BRW	END
;
10$:	CMPL	R0,#SS$_NOPRIV
	BEQL	LOOP			;NO PRIVILEGE, TRY NEXT PROCESS
	CMPL	R0,#SS$_SUSPENDED
	BEQL	LOOP			;SUSPENDED, TRY NEXT PROCESS
	BLBC	R0,ENDERR		;OTHER ERROR
;
;
;			WAIT FOR GETJPI
	$WAITFR_S EFN=#0
	BLBC	R0,ENDERR		;ERROR
	MOVL	IOSB,R0			;RETURN-CODE
	BLBC	R0,ENDERR		;ERROR
;
;			TEST FOR UIC?
	TSTL	(R6)
	BEQL	20$			;NO
	CMPL	(R6),UIC
	BNEQ	LOOP			;WRONG UIC, TRY NEXT PROCESS
	BRW	FOUND			;OK
20$:	MOVL	UIC,(R6)		;FILL UIC
	BRW	FOUND
;
;			NEXT PROCESS?
LOOP:	TSTL	@ONEXT(AP)
	BLSS	NEXT			;YES
	BRW	END			;NO
;
;			ERROR, CREATE MESSAGE
ENDERR:	MOVL	R0,IOSB
	PUSHAL	ZERO
	PUSHAL	IOSB
	CALLS	#2,G^MSG_SET
	BRW	END
;
;
;			BLANK REMAINDER OF PROCESS-NAME
FOUND:	MOVW	LISLPR,LEN		;LENGTH OF PROCESS-NAME-FIELD
	MOVL	LISTPR,R7		;ADDRESS
	ADDL2	LENPRC,R7		;START FOR BLANKING
	SUBW2	LENPRC,LEN		;LENGTH FOR BLANKING
	MOVC5	#0,(SP),#^A' ',LEN,(R7)	;BLANK
;
;			EXTRACT IMAGE-NAME FROM COMPLETE IMAGE-FILENAME
	LOCC	#^A']',LENIMG,IMGNAM	;LOCATE END-OF-DIRECTORY
	BEQL	10$			;NOT FOUND
	ADDL3	#1,R1,R7		;START OF FILENAME
	LOCC	#^A'.',LENIMG,(R7)	;LOCATE END OF IMAGENAME
	BEQL	10$			;NOT FOUND
	SUBL3	R7,R1,R0		;NOW LENGTH OF IMAGE-NAME IN R0
;			NOW MOVE IMAGE-NAME TO DESTINATION
10$:	MOVL	OIMG(AP),R2		;DESTINATION STRING
	MOVL	4(R2),R3
	MOVC5	R0,(R7),#^A' ',(R2),(R3)	;PUT IMAGENAME IN DESTINATION
;
;			SET FOR SUCCESS
	MOVL	#1,R0
;
;
END:	RET
;
;
	.END

;+++
;.Ident:	VGEN_CALL
;.Keywords:	Call interface, optional arguments
;.Author:	Ger van Diepen (NFRA, Dwingeloo)
;.Language:	VAX/Macro
;.Environment:	VAX/VMS
;.File:		[.SRC.VGEN]GENCALL.MAR
;.Version:	870824 GVD - creation
;.Version:	930129 HjV - $CODE expanded
;.Version:	940120 CMV - GEN_CALL_FAO removed
;----------------------------------------------------------------------
	.TITLE	GEN_CALL Complete argument-list
;
	.MACRO	$CODE
	.PSECT	$CODE,	PIC,CON,REL,LCL,SHR,EXE,RD,NOWRT,LONG
	.IF NDF	$CODE
$CODE:
	.ENDC
	.ENDM
;+
	.ENTRY	GEN_CALL,^M<R2,R3>
;
;.Invocation:
;
;	STATUS = GEN_CALL (ROUTINE,DEFARG_1,...,DEFARG_N)
;
;	INTEGER*4	ROUTINE		! (i) routine to be called
;	<datatype>	DEFARG_i	! (i/m/o) i-th default argument
;
;.Purpose:	pass completed argument list to action routine
;.Returns:	function value of action routine
;.Notes:	Default arguments are inserted for missing arguments.
;	The nr of passed arguments will always be equal to the nr of
;	default arguments, which means that extra original arguments
;	will be ignored.
;------------------------------------------------------------------------
;
;			Get original argument-list via the frame-pointer.
;			Get #arguments.
;			Determine maximum #arguments.
;
	MOVL	8(FP),R2		; address original argument-list
	MOVZBL	(R2),R3			; #original arguments in R3
	MOVZBL	(AP),R1
	DECL	R1			; #default  arguments in R1
	ADDL2	#4,AP			; set AP to routine-address
;
;
;
;
;			Loop through both argument-lists in reverse order.
;			Push the arguments on the stack.
;			R0 is used as loop counter.
;
STORE:	MOVL	R1,R0			; #arguments
;
ST:	CMPL	R0,R3
	BGTR	PDEF			; no original argument
	TSTL	(R2)[R0]
	BEQL	PDEF			; original argument is nil
;
	PUSHL	(R2)[R0]		; push original argument
	BRB	NEXT
PDEF:	PUSHL	(AP)[R0]		; push default argument
NEXT:	SOBGTR	R0,ST
;
;
;			Okay, the argument-list is completed.
;			Now call the routine with the maximum #arguments.
;
	CALLS	R1,@(AP)
	RET
;
;
	.END

C	Include module PPDREC_4
C	Created by BLDDEF from: _$1$DIA3:[TESTDWARF.SRC.DEF]PPDREC.DEF; on 17-OCT-90
C
C+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C.Ident:	DEF_PPDREC
C.Keywords:	PPD File, Records, Layout
C.Author:	Kasper Kombrink (NFRA, Dwingeloo)
C.Language:	DWARF-DEF
C.Environment:	VAX
C.Comments:
C.Version:	841130 KK  - version 3 of PPD.DEF
C.Version:	841213 KK  - version 1 of PPDREC.DEF
C.Version:	850627 KK  - version 2
C			- Add comments
C			- Include layout of index-entries
C			- Include minimum number of characters which uniquely
C			identifies user parameter name
C.Version:	850901 KK  - version 3
C			- add EXTEN into PPDPD
C.Version:	890124 FMO - version 4
C			- new DEF syntax
C			- PPDFD_ local array i.s.o. common array
C			- extend PPDPD_ to include the variable-length fields
C			- removed IN__ and added local PPDID_ for index entry
C			- added AMAS_ and CMAS_ from PPD.DEF (now bit nrs)
C.Version:	930510 HjV - Change all INTEGER*2 into INTEGER*4
C.Version:	010709 AXC - Linux port -byte equivalence removed
C--------------------------------------------------------------------
C
C
C		*** File description block ***
C
	INTEGER*4  PPDFD_LENGTH
	PARAMETER (PPDFD_LENGTH         =1)         !&1     !#J !generated: field to contain the block length
	INTEGER*4  PPDFD_TYPE
	PARAMETER (PPDFD_TYPE           =5)         !&1     !#J !generated: field to contain the block type
	INTEGER*4  PPDFD_INDEX
	PARAMETER (PPDFD_INDEX          =1)         !&1     !#J !pointer to index area
	INTEGER*4  PPDFD_PARM
	PARAMETER (PPDFD_PARM           =5)         !&1     !#J !pointer to parameter area
	INTEGER*4  PPDFD_HELP
	PARAMETER (PPDFD_HELP           =9)         !&1     !#J !pointer to help area
	INTEGER*4  PPDFD_PARMPT
	PARAMETER (PPDFD_PARMPT         =13)        !&1     !#J !pointer to prototype area
	INTEGER*4  PPDFD_SINDEX
	PARAMETER (PPDFD_SINDEX         =17)        !&1     !#J !size index area
	INTEGER*4  PPDFD_SPARM
	PARAMETER (PPDFD_SPARM          =21)        !&1     !#J !size parameter area
	INTEGER*4  PPDFD_SHELP
	PARAMETER (PPDFD_SHELP          =25)        !&1     !#J !size help area
	INTEGER*4  PPDFD_SPARMPT
	PARAMETER (PPDFD_SPARMPT        =29)        !&1     !#J !size prototype area
	INTEGER*4  PPDFD_STOT
	PARAMETER (PPDFD_STOT           =33)        !&1     !#J !total size ppd file
	INTEGER*4  PPDFD_NINDEX
	PARAMETER (PPDFD_NINDEX         =37)        !&1     !#J !number of index entries
	INTEGER*4  PPDFD_NPARM
	PARAMETER (PPDFD_NPARM          =41)        !&1     !#J !number of parameter entries
	INTEGER*4  PPDFD_NPARMPT
	PARAMETER (PPDFD_NPARMPT        =45)        !&1     !#J !number of prototype entries
	INTEGER*4  PPDFD_RESERVED
	PARAMETER (PPDFD_RESERVED       =49)        !&1     !#J !reserved
	INTEGER*4  PPDFD_IMAGE
	PARAMETER (PPDFD_IMAGE          =53)        !&16    !#C !program name
	INTEGER*4  PPDFD__LENGTH
	PARAMETER (PPDFD__LENGTH        =17)                    !generated: block length (in longwords)
	INTEGER*4  PPDFD__TYPE
	PARAMETER (PPDFD__TYPE          =16)                    !generated: block type
C
C
C		*** (Prototype) parameter description entry ***
C
	INTEGER*4  PPDPD_LENGTH
	PARAMETER (PPDPD_LENGTH         =1)         !&1     !#J !generated: field to contain the block length
	INTEGER*4  PPDPD_TYPE
	PARAMETER (PPDPD_TYPE           =5)         !&1     !#J !generated: field to contain the block type
	INTEGER*4  PPDPD_DESCR
	PARAMETER (PPDPD_DESCR          =1)         !&512   !#C !complete description (string overlay)
	INTEGER*4  PPDPD_FORW
	PARAMETER (PPDPD_FORW           =1)         !&1     !#J !offset of next entry (w.r.t. start of area)
	INTEGER*4  PPDPD_EXTEN
	PARAMETER (PPDPD_EXTEN          =5)         !&1     !#J !offset of extension area (filled at run time)
	INTEGER*4  PPDPD_LENG
	PARAMETER (PPDPD_LENG           =9)         !&1     !#J !significant length of the description (bytes)
	INTEGER*4  PPDPD_UNAM
	PARAMETER (PPDPD_UNAM           =13)        !&16    !#C !parameter name (user)
	INTEGER*4  PPDPD_PNAM
	PARAMETER (PPDPD_PNAM           =29)        !&16    !#C !parameter name (program)
	INTEGER*4  PPDPD_LUNAM
	PARAMETER (PPDPD_LUNAM          =45)        !&1     !#J !minimum number of characters for unam
	INTEGER*4  PPDPD_DTYPE
	PARAMETER (PPDPD_DTYPE          =49)        !&1     !#C !parameter type
	INTEGER*4  PPDPD_IOCD
	PARAMETER (PPDPD_IOCD           =50)        !&1     !#C !code input/output
	INTEGER*4  PPDPD_DUMMY
	PARAMETER (PPDPD_DUMMY		=51)        !&1     !#C	!DUMMY
	INTEGER*4  PPDPD_PLEN
	PARAMETER (PPDPD_PLEN           =53)        !&1     !#J !length of parameter value
	INTEGER*4  PPDPD_NVAL
	PARAMETER (PPDPD_NVAL           =57)        !&1     !#J !number of values
	INTEGER*4  PPDPD_NSETS
	PARAMETER (PPDPD_NSETS          =61)        !&1     !#J !maximum number of value sets
	INTEGER*4  PPDPD_MNVAL
	PARAMETER (PPDPD_MNVAL          =65)        !&1     !#J !minimum number of values
	INTEGER*4  PPDPD_MXVAL
	PARAMETER (PPDPD_MXVAL          =69)        !&1     !#J !maximum number of values
	INTEGER*4  PPDPD_CMAS
	PARAMETER (PPDPD_CMAS           =73)        !&1     !#J !check mask
	INTEGER*4  PPDPD_AMAS
	PARAMETER (PPDPD_AMAS           =77)        !&1     !#J !attribute mask
	INTEGER*4  PPDPD_MNOFF
	PARAMETER (PPDPD_MNOFF          =81)        !&1     !#J !offset minimum value(s) (w.r.t. start entry)
	INTEGER*4  PPDPD_MNLEN
	PARAMETER (PPDPD_MNLEN          =85)        !&1     !#J !length minimum value(s)
	INTEGER*4  PPDPD_MXOFF
	PARAMETER (PPDPD_MXOFF          =89)        !&1     !#J !offset maximum value(s)
	INTEGER*4  PPDPD_MXLEN
	PARAMETER (PPDPD_MXLEN          =93)        !&1     !#J !length maximum value(s)
	INTEGER*4  PPDPD_UOFF
	PARAMETER (PPDPD_UOFF           =97)        !&1     !#J !offset units string
	INTEGER*4  PPDPD_ULEN
	PARAMETER (PPDPD_ULEN           =101)        !&1     !#J !length units string
	INTEGER*4  PPDPD_SOFF
	PARAMETER (PPDPD_SOFF           =105)       !&1     !#J !offset search string
	INTEGER*4  PPDPD_SLEN
	PARAMETER (PPDPD_SLEN           =109)       !&1     !#J !length search string
	INTEGER*4  PPDPD_DVOFF
	PARAMETER (PPDPD_DVOFF          =113)       !&1     !#J !offset default value string
	INTEGER*4  PPDPD_DVLEN
	PARAMETER (PPDPD_DVLEN          =117)       !&1     !#J !length default value string
	INTEGER*4  PPDPD_OPOFF
	PARAMETER (PPDPD_OPOFF          =121)       !&1     !#J !offset options string
	INTEGER*4  PPDPD_OPLEN
	PARAMETER (PPDPD_OPLEN          =125)       !&1     !#J !length options string
	INTEGER*4  PPDPD_PROFF
	PARAMETER (PPDPD_PROFF          =129)       !&1     !#J !offset prompt string
	INTEGER*4  PPDPD_PRLEN
	PARAMETER (PPDPD_PRLEN          =133)       !&1     !#J !length prompt string
	INTEGER*4  PPDPD_GOFF
	PARAMETER (PPDPD_GOFF           =137)       !&1     !#J !offset ppd name for global search
	INTEGER*4  PPDPD_GLEN
	PARAMETER (PPDPD_GLEN           =141)       !&1     !#J !length ppd name for global search
	INTEGER*4  PPDPD_HOFF
	PARAMETER (PPDPD_HOFF           =145)       !&1     !#J !offset help string (w.r.t. start help area)
	INTEGER*4  PPDPD_HLEN
	PARAMETER (PPDPD_HLEN           =149)       !&1     !#J !length of help string
	INTEGER*4  PPDPD__LENGTH
	PARAMETER (PPDPD__LENGTH        =128)                   !generated: block length (in longwords)
	INTEGER*4  PPDPD__TYPE
	PARAMETER (PPDPD__TYPE          =17)                    !generated: block type
C
C
C		*** Index entry ***
C
	INTEGER*4  PPDID_LENGTH
	PARAMETER (PPDID_LENGTH         =1)         !&1     !#J !generated: field to contain the block length
	INTEGER*4  PPDID_TYPE
	PARAMETER (PPDID_TYPE           =2)         !&1     !#J !generated: field to contain the block type
	INTEGER*4  PPDID_PNAM
	PARAMETER (PPDID_PNAM           =1)         !&16    !#C !parameter name (program)
	INTEGER*4  PPDID_UNAM
	PARAMETER (PPDID_UNAM           =5)         !&16    !#C !parameter name (user)
	INTEGER*4  PPDID_LUNAM
	PARAMETER (PPDID_LUNAM          =9)         !&1     !#J !minimum number of characters for unam
	INTEGER*4  PPDID_PARMOFF
	PARAMETER (PPDID_PARMOFF        =10)        !&1     !#J !offset of parm descr (w.r.t. start of area)
	INTEGER*4  PPDID__LENGTH
	PARAMETER (PPDID__LENGTH        =10)                    !generated: block length (in longwords)
	INTEGER*4  PPDID__TYPE
	PARAMETER (PPDID__TYPE          =33)                    !generated: block type
C
C
C		*** Check-mask bits (CMAS) ***
C
C
	INTEGER*4  CMAS_MIN
	PARAMETER (CMAS_MIN             =0)                     !minimum
	INTEGER*4  CMAS_MAX
	PARAMETER (CMAS_MAX             =1)                     !maximum
	INTEGER*4  CMAS_ASC
	PARAMETER (CMAS_ASC             =2)                     !ascending order
	INTEGER*4  CMAS_DES
	PARAMETER (CMAS_DES             =3)                     !descending order
	INTEGER*4  CMAS_ALP
	PARAMETER (CMAS_ALP             =4)                     !alphabetic
	INTEGER*4  CMAS_NUM
	PARAMETER (CMAS_NUM             =5)                     !numeric
	INTEGER*4  CMAS_ANM
	PARAMETER (CMAS_ANM             =6)                     !alphanumeric
	INTEGER*4  CMAS_OPT
	PARAMETER (CMAS_OPT             =7)                     !options
	INTEGER*4  CMAS_OPS
	PARAMETER (CMAS_OPS             =8)                     !abbreviated optons
	INTEGER*4  CMAS_NOD
	PARAMETER (CMAS_NOD             =9)                     !node name
	INTEGER*4  CMAS_NAS
	PARAMETER (CMAS_NAS             =10)                    !non-ascending
	INTEGER*4  CMAS_NDE
	PARAMETER (CMAS_NDE             =11)                    !non-descending
C
C
C		*** Attribute-mask bits (AMAS) ***
C
	INTEGER*4  AMAS_LOP
	PARAMETER (AMAS_LOP             =0)                     !used for controlling program loops
	INTEGER*4  AMAS_VEC
	PARAMETER (AMAS_VEC             =1)                     !vector-type value set
	INTEGER*4  AMAS_WLD
	PARAMETER (AMAS_WLD             =2)                     !wild-card values allowed
	INTEGER*4  AMAS_IMM
	PARAMETER (AMAS_IMM             =3)                     !immediate symbol substitutions
	INTEGER*4  AMAS_ASK
	PARAMETER (AMAS_ASK             =4)                     !always ask user for values
	INTEGER*4  AMAS_UND
	PARAMETER (AMAS_UND             =5)                     !undefined values allowed
	INTEGER*4  AMAS_TST
	PARAMETER (AMAS_TST             =6)                     !test
	INTEGER*4  AMAS_PUT
	PARAMETER (AMAS_PUT             =7)                     !PUT_PARM may create a GLOBAL$0 symbol
	INTEGER*4  AMAS_DYN
	PARAMETER (AMAS_DYN             =8)                     !GET_PARM must get default from DCL symbol
	INTEGER*4  AMAS_NUL
	PARAMETER (AMAS_NUL             =9)                     !null value allowed
	INTEGER*4  AMAS_NND
	PARAMETER (AMAS_NND             =10)                    !node "0" allowed
	INTEGER*4	PPDREC__DEFTYP
	PARAMETER	(PPDREC__DEFTYP=19)
	INTEGER*4	PPDREC__DEFVSN
	PARAMETER	(PPDREC__DEFVSN=4)
C
	EXTERNAL	PPDREC_BLOCK
C
C Local block specification
C
	INTEGER*4 PPDFD$LENGTH
	EQUIVALENCE (PPDFD$LENGTH,PPDFD__(0))
	INTEGER*4 PPDFD$TYPE
	EQUIVALENCE (PPDFD$TYPE,PPDFD__(4))
	INTEGER*4 PPDFD$INDEX
	EQUIVALENCE (PPDFD$INDEX,PPDFD__(0))
	INTEGER*4 PPDFD$PARM
	EQUIVALENCE (PPDFD$PARM,PPDFD__(4))
	INTEGER*4 PPDFD$HELP
	EQUIVALENCE (PPDFD$HELP,PPDFD__(8))
	INTEGER*4 PPDFD$PARMPT
	EQUIVALENCE (PPDFD$PARMPT,PPDFD__(12))
	INTEGER*4 PPDFD$SINDEX
	EQUIVALENCE (PPDFD$SINDEX,PPDFD__(16))
	INTEGER*4 PPDFD$SPARM
	EQUIVALENCE (PPDFD$SPARM,PPDFD__(20))
	INTEGER*4 PPDFD$SHELP
	EQUIVALENCE (PPDFD$SHELP,PPDFD__(24))
	INTEGER*4 PPDFD$SPARMPT
	EQUIVALENCE (PPDFD$SPARMPT,PPDFD__(28))
	INTEGER*4 PPDFD$STOT
	EQUIVALENCE (PPDFD$STOT,PPDFD__(32))
	INTEGER*4 PPDFD$NINDEX
	EQUIVALENCE (PPDFD$NINDEX,PPDFD__(36))
	INTEGER*4 PPDFD$NPARM
	EQUIVALENCE (PPDFD$NPARM,PPDFD__(40))
	INTEGER*4 PPDFD$NPARMPT
	EQUIVALENCE (PPDFD$NPARMPT,PPDFD__(44))
	INTEGER*4 PPDFD$RESERVED
	EQUIVALENCE (PPDFD$RESERVED,PPDFD__(48))
	CHARACTER*16 PPDFD$IMAGE
	EQUIVALENCE (PPDFD$IMAGE,PPDFD__(52))
	BYTE PPDFD__(0:67)
	BYTE PPDFD_(68)
	EQUIVALENCE (PPDFD_,PPDFD__)
C
C Common block specification
C
	INTEGER*4 PPDPD$LENGTH
	EQUIVALENCE (PPDPD$LENGTH,PPDPD__(0))
	INTEGER*4 PPDPD$TYPE
	EQUIVALENCE (PPDPD$TYPE,PPDPD__(4))
	CHARACTER*512 PPDPD$DESCR
	EQUIVALENCE (PPDPD$DESCR,PPDPD__(0))
	INTEGER*4 PPDPD$FORW
	EQUIVALENCE (PPDPD$FORW,PPDPD__(0))
	INTEGER*4 PPDPD$EXTEN
	EQUIVALENCE (PPDPD$EXTEN,PPDPD__(4))
	INTEGER*4 PPDPD$LENG
	EQUIVALENCE (PPDPD$LENG,PPDPD__(8))
	CHARACTER*16 PPDPD$UNAM
	EQUIVALENCE (PPDPD$UNAM,PPDPD__(12))
	CHARACTER*16 PPDPD$PNAM
	EQUIVALENCE (PPDPD$PNAM,PPDPD__(28))
	INTEGER*4 PPDPD$LUNAM
	EQUIVALENCE (PPDPD$LUNAM,PPDPD__(44))
	CHARACTER*1 PPDPD$DTYPE
	EQUIVALENCE (PPDPD$DTYPE,PPDPD__(48))
	CHARACTER*1 PPDPD$IOCD
	EQUIVALENCE (PPDPD$IOCD,PPDPD__(49))
	CHARACTER*2 PPDPD$DUMMY
	EQUIVALENCE (PPDPD$DUMMY,PPDPD__(50))
	INTEGER*4 PPDPD$PLEN
	EQUIVALENCE (PPDPD$PLEN,PPDPD__(52))
	INTEGER*4 PPDPD$NVAL
	EQUIVALENCE (PPDPD$NVAL,PPDPD__(56))
	INTEGER*4 PPDPD$NSETS
	EQUIVALENCE (PPDPD$NSETS,PPDPD__(60))
	INTEGER*4 PPDPD$MNVAL
	EQUIVALENCE (PPDPD$MNVAL,PPDPD__(64))
	INTEGER*4 PPDPD$MXVAL
	EQUIVALENCE (PPDPD$MXVAL,PPDPD__(68))
	INTEGER*4 PPDPD$CMAS
	EQUIVALENCE (PPDPD$CMAS,PPDPD__(72))
	INTEGER*4 PPDPD$AMAS
	EQUIVALENCE (PPDPD$AMAS,PPDPD__(76))
	INTEGER*4 PPDPD$MNOFF
	EQUIVALENCE (PPDPD$MNOFF,PPDPD__(80))
	INTEGER*4 PPDPD$MNLEN
	EQUIVALENCE (PPDPD$MNLEN,PPDPD__(84))
	INTEGER*4 PPDPD$MXOFF
	EQUIVALENCE (PPDPD$MXOFF,PPDPD__(88))
	INTEGER*4 PPDPD$MXLEN
	EQUIVALENCE (PPDPD$MXLEN,PPDPD__(92))
	INTEGER*4 PPDPD$UOFF
	EQUIVALENCE (PPDPD$UOFF,PPDPD__(96))
	INTEGER*4 PPDPD$ULEN
	EQUIVALENCE (PPDPD$ULEN,PPDPD__(100))
	INTEGER*4 PPDPD$SOFF
	EQUIVALENCE (PPDPD$SOFF,PPDPD__(104))
	INTEGER*4 PPDPD$SLEN
	EQUIVALENCE (PPDPD$SLEN,PPDPD__(108))
	INTEGER*4 PPDPD$DVOFF
	EQUIVALENCE (PPDPD$DVOFF,PPDPD__(112))
	INTEGER*4 PPDPD$DVLEN
	EQUIVALENCE (PPDPD$DVLEN,PPDPD__(116))
	INTEGER*4 PPDPD$OPOFF
	EQUIVALENCE (PPDPD$OPOFF,PPDPD__(120))
	INTEGER*4 PPDPD$OPLEN
	EQUIVALENCE (PPDPD$OPLEN,PPDPD__(124))
	INTEGER*4 PPDPD$PROFF
	EQUIVALENCE (PPDPD$PROFF,PPDPD__(128))
	INTEGER*4 PPDPD$PRLEN
	EQUIVALENCE (PPDPD$PRLEN,PPDPD__(132))
	INTEGER*4 PPDPD$GOFF
	EQUIVALENCE (PPDPD$GOFF,PPDPD__(136))
	INTEGER*4 PPDPD$GLEN
	EQUIVALENCE (PPDPD$GLEN,PPDPD__(140))
	INTEGER*4 PPDPD$HOFF
	EQUIVALENCE (PPDPD$HOFF,PPDPD__(144))
	INTEGER*4 PPDPD$HLEN
	EQUIVALENCE (PPDPD$HLEN,PPDPD__(148))
	BYTE PPDPD$TRAILER(360)
	EQUIVALENCE (PPDPD$TRAILER,PPDPD__(152))
	BYTE PPDPD__(0:511)
	BYTE PPDPD_(512)
	EQUIVALENCE (PPDPD_,PPDPD__)
C
	COMMON /PPDPD/ PPDPD_
C
C
C Local block specification
C
	INTEGER*4 PPDID$LENGTH
	EQUIVALENCE (PPDID$LENGTH,PPDID__(0))
	INTEGER*4 PPDID$TYPE
	EQUIVALENCE (PPDID$TYPE,PPDID__(4))
	CHARACTER*16 PPDID$PNAM
	EQUIVALENCE (PPDID$PNAM,PPDID__(0))
	CHARACTER*16 PPDID$UNAM
	EQUIVALENCE (PPDID$UNAM,PPDID__(16))
	INTEGER*4 PPDID$LUNAM
	EQUIVALENCE (PPDID$LUNAM,PPDID__(32))
	INTEGER*4 PPDID$PARMOFF
	EQUIVALENCE (PPDID$PARMOFF,PPDID__(36))
	BYTE PPDID__(0:39)
	INTEGER*4 PPDID_(10)
	EQUIVALENCE (PPDID_,PPDID__)



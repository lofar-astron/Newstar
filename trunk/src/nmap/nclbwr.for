C+ NCLBWR.FOR
C  WNB 910809
C
C  Revisions:
C	JPH 940228	Comments
C
	SUBROUTINE NCLBWR(CLAR3,CLAR4,MAP,IMPH)
C
C  Write residual map
C
C  Result:
C	CALL NCLBWR( CLAR3_J:I, CLAR4_J:I, MAP_E(-*:*,-*:*), IMPH_B(0:*):I)
C				Write residual map using MAP area of size
C				CLAR3, CLAR4 and the original map header IMPH.
C
C
C  Include files:
C
	INCLUDE 'WNG_DEF'
	INCLUDE 'GFH_O_DEF'		!GENERAL FILE HEADER
	INCLUDE 'SGH_O_DEF'		!SUB-GROUP HEADER
	INCLUDE 'MPH_O_DEF'		!MAP HEADER
	INCLUDE 'NCL_DEF'	
C
C  Parameters:
C
C
C  Arguments:
C
	INTEGER CLAR3,CLAR4		!MAP BOUNDARIES
	REAL MAP(-CLAR3/2:CLAR3/2,-CLAR4/2:CLAR4/2) !MAP
	BYTE IMPH(0:MPHHDL-1)		!MAP HEADER
C
C  Function references:
C
	LOGICAL WNFRD			!READ DISK
	LOGICAL WNFWR			!WRITE DISK
	INTEGER WNFEOF			!FILE POINTER
	LOGICAL WNDLNF,WNDLNG,WNDLNK	!FIND/MAKE SUB-GROUPS
	INTEGER WNGGJ			!GET VALUE
	CHARACTER*32 WNTTSG		!SET NAME
C
C  Data declarations:
C
	INTEGER JC			!MULTIPLE AREA CNT
	INTEGER HIST			!HISTOGRAM AREA
	CHARACTER*32 TXT
	REAL RMAX,RMIN			!MAX/MIN
	INTEGER RMXR,RMXD,RMNR,RMND	!POS. MAX/MIN
	INTEGER SGNR(0:7),SGPH(0:7)	!NAME FINDERS
	INTEGER MPHP			!POINTER RES. MAP HEADER
	BYTE MPH(0:MPHHDL-1)		!RESIDUAL MAP HEADER
	  INTEGER MPHJ(0:MPHHDL/4-1)
	  REAL MPHE(0:MPHHDL/4-1)
	  EQUIVALENCE (MPH,MPHJ,MPHE)
	REAL LBUF(0:8192)		!DATA BUFFER
C-
C
C INITIALISE
C
	CALL WNGMV(MPHHDL,IMPH,MPH)		!INIT. RESIDUAL MAP HEADER
	MPHP=WNFEOF(FCAMAP)			!HEADER POINTER
	IF (.NOT.WNFWR(FCAMAP,MPHHDL,MPH,MPHP)) GOTO 10 !WRITE RESIDUAL HEADER
	RMAX=-1E36				!INIT MAX/MIN
	RMIN=1E36
	D0=1D0					!NORMALISATION
	CALL WNMHS8(HIST,1,1E0)			!GET HISTO AREA
	IF (.NOT.WNDLNF(GFH_LINKG_1,MAPNAM(0),SGH_GROUPN_1,FCAMAP,SGPH(0),
	1		SGNR(0))) THEN		!FIND CORRECT SET
 20	  CONTINUE
	  CALL WNCTXT(F_TP,'Cannot create residual map linkage')
	  CALL WNGEX				!STOP PROGRAM
	END IF
	DO I=1,4				!FIND ALL LEVELS
	  IF (.NOT.WNDLNF(SGPH(I-1)+SGH_LINKG_1,MAPNAM(I),SGH_GROUPN_1,
	1		FCAMAP,SGPH(I),SGNR(I))) GOTO 20
	END DO
	IF (.NOT.WNDLNK(GFH_LINK_1,MPHP,MPH_SETN_1,FCAMAP)) GOTO 20 !LINK MAP
	IF (.NOT.WNDLNG(SGPH(4)+SGH_LINKG_1,MPHP,SGH_GROUPN_1,
	1		FCAMAP,SGPH(5),SGNR(5))) GOTO 20 !LINK SUB-GROUP
	SGNR(6)=-1				!CLOSE OFF NAME
	IF (.NOT.WNFRD(FCAMAP,MPHHDL,MPH,MPHP)) GOTO 10 !REREAD RESIDUAL HEADER
C
C WRITE CLEANED MAP
C
	J=WNGGJ(IMPH(MPH_MDP_1))		!START DISK POINTER
	J0=WNFEOF(FCAMAP)			!START WRITE POINTER
	MPHJ(MPH_MDP_J)=J0			!SAVE POINTER
	J2=LB_E*MPHJ(MPH_NRA_J)			!LENGTH LINE
	DO I=-MPHJ(MPH_NDEC_J)/2,MPHJ(MPH_NDEC_J)/2-1 !ALL MAP LINES
	  IF (.NOT.WNFRD(FCAMAP,J2,LBUF,J)) THEN !READ LINE
C
C All errors associated with writing the residuals are reported here; rereading
C  the map header is part of thios and therefor reported as a write error
C
 10	    CONTINUE
	    CALL WNCTXT(F_TP,'!/Write error residual map!/')
	    CALL WNGEX
	  END IF
	  IF (I.GE.TAREA(2,1) .AND. I.LE.TAREA(3,1)) THEN !GET RESIDUAL
	    J1=0				!START POINT
	    DO JC=1,NAREA			!ALL AREAS
	      IF (I.GE.PAREA(2,JC,1) .AND.
	1			I.LE.PAREA(3,JC,1)) THEN !LINE OK
		J1=MAX(J1,PAREA(0,JC,1)-TAREA(0,1)) !START POINT
		DO I1=J1+TAREA(0,1),PAREA(1,JC,1) !ALL POINTS
		  LBUF(I1+MPHJ(MPH_NRA_J)/2)=
	1			MAP(I1-TAREA(0,1)-TAREA(2,0)/2,
	1			I-TAREA(2,1)-TAREA(3,0)/2) !SET RESIDUAL POINT
		  J1=J1+1			!CNT POINT
		END DO
	      END IF
	    END DO
	  END IF
	  IF (.NOT.WNFWR(FCAMAP,J2,LBUF,J0)) GOTO 10 !WRITE
	  R0=-1E36
	  R1=1E36
	  CALL WNMFMX(MPHJ(MPH_NRA_J),LBUF,1D0,R0,I3,R1,I4) !FIND MAX/MIN
	  IF (R0.GT.RMAX) THEN
	    RMAX=R0				!NEW MAX
	    RMXR=I3-MPHJ(MPH_NRA_J)/2
	    RMXD=I
	  END IF
	  IF (R1.LT.RMIN) THEN
	    RMIN=R1				!NEW MIN
	    RMNR=I4-MPHJ(MPH_NRA_J)/2
	    RMND=I
	  END IF
	  CALL WNMHS1(HIST,MPHJ(MPH_NRA_J),LBUF) !MAKE HISTOGRAM
	  J=J+J2				!NEXT LINE POINTER
	  J0=J0+J2				!NEXT OUTPUT POINTER
	END DO
	CALL WNMHS4(HIST,MPHE(MPH_NOS_E),F_TP)	!SET NOISE
	MPHE(MPH_MAX_E)=RMAX			!SAVE MAX/MIN
	MPHE(MPH_MIN_E)=RMIN
	MPHJ(MPH_MXR_J)=RMXR
	MPHJ(MPH_MNR_J)=RMNR
	MPHJ(MPH_MXD_J)=RMXD
	MPHJ(MPH_MND_J)=RMND
	CALL WNCTXS(TXT,'Residual !AS',WNTTSG(MAPNAM,0)) !SET TEXT
	CALL WNGMFS(MPH_UCM_N,TXT,MPH(MPH_UCM_1))
	IF (.NOT.WNFWR(FCAMAP,MPHHDL,MPH,MPHP)) GOTO 10 !REWRITE HEADER
	CALL WNMHS3(HIST,1,F_P)			!SHOW RESIDUAL HISTO
	CALL WNCTXT(F_P,'!^')
	CALL NMAPMH(F_TP,MPH,SGNR,NODMAP)	!SHOW RESIDUAL MAP
	CALL WNMHS9(HIST)			!RELEASE HISTO BUFFER
C
	RETURN
C
C
	END

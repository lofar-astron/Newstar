C+ NMACVX.FOR
C  WNB 910306
C
C  Revisions:
C
	SUBROUTINE NMACVX(APD,UVD,CSD,CVF,CSMAP,CSAP)

C
C  Do actual convolution of a data point
C
C  Result:
C
C	CALL NMACVX( APD_E:I, UVD_E(0:1):I, CSD_X:I, CVF_E(0:*):I,
C			CSMAP_X(0:*):O, CSAP_E(0:*):O)
C				Do the actual convolution of a point with
C				weight APD, with CSD as cos/sin data, and
C				UVD as U, V. CVF is the convolution weight
C				to be used. CSMAP is the output map data
C				plane, CSAP the antenna pattern plane.
C
C
C  PIN references:
C
C
C  Include files:
C
	INCLUDE 'WNG_DEF'
	INCLUDE 'NMA_DEF'
C
C  Parameters:
C
C
C  Arguments:
C
	REAL APD			!DATA WEIGHT
	REAL UVD(0:1)			!U, V COORDINATE
	COMPLEX CSD			!COS/SIN DATA
	REAL CVF(0:*)			!CONVOLUTION FUNCTION
	COMPLEX CSMAP(0:*)		!OUTPUT MAP PLANE
	REAL CSAP(0:*)			!OUTPUT AP PLANE
C
C  Function references:
C
	INTEGER WNMEJC			!CEIL(X)
	INTEGER WNMEJF			!FLOOR(X)
C
C  Data declarations:
C
	INTEGER LOU			!START U OFFSET
	INTEGER HIU			!HIGH U OFFSET
	INTEGER LOV			!LOW V OFFSET
	INTEGER HIV			!HIGH V OFFSET
	INTEGER FRU			!U FRACTION START
	INTEGER FRV			!V FRACTION START
	COMPLEX DAT			!DATA
C-
C
C INIT
C
	LOU=WNMEJC(UVD(0)-CVLWID(0))		!LOWEST U
	HIU=MIN(WNMEJF(UVD(0)+CVLWID(0)),UHIGH)-ULOB !HIGHEST RELATIVE U
	LOV=MAX(WNMEJC(UVD(1)-CVLWID(1)),VLOW)	!LOWEST V
	HIV=MIN(WNMEJF(UVD(1)+CVLWID(1)),VHIGH)-LOV !V LENGTH
	FRU=NINT(CVLSTP*(LOU-UVD(0)))		!START IN U CONVOL. TABLE
	FRV=NINT(CVLSTP*(LOV-UVD(1)))		!START IN V CONVOL. TABLE
	LOU=LOU-ULOB				!RELATIVE START U
C
C ACTUAL CONVOLUTION
C
	DO I=LOU,HIU				!ALL U LINES
	  IF (I.LT.0) THEN			!LEFT-HALF OF PLANE
	    J=ABS(I)				!TAKE CONJUGATE
	    DAT=CONJG(CSD)
	    J1=-LOV-VLOW			!OFFSET V
	    J2=-1				!STEP IN V
	  ELSE
	    J=I
	    DAT=CSD
	    J1=LOV-VLOW
	    J2=1
	  END IF
	  IF (J.GE.USIZE) J=J-USIZE		!WRAP AROUND
	  J=J*VSIZE+J1				!ARRAY POINTER
	  R0=APD*CVF(ABS(FRU))			!U WEIGHT * WEIGHT
	  J0=FRV				!V WEIGHT POINTER
	  IF (APD.GE.0) THEN
	    DO I1=0,HIV				!ALL V POINTS
	      R1=R0*CVF(ABS(J0))		!TOTAL WEIGHT
	      IF (MAKMAP) CSMAP(J)=CSMAP(J)+R1*DAT !SUM MAP
	      IF (MAKAP) CSAP(J)=CSAP(J)+R1	!SUM AP
	      SUM=SUM+R1			!NORMALIZE
	      J=J+J2				!NEXT V POINT
	      J0=J0+CVLSTP			!NEXT V WEIGHT
	    END DO
	  ELSE
	    DO I1=0,HIV				!ALL V POINTS
	      R1=R0*CVF(ABS(J0))		!TOTAL WEIGHT
	      IF (MAKMAP) CSMAP(J)=CSMAP(J)+R1*DAT !SUM MAP
	      IF (MAKAP) CSAP(J)=CSAP(J)-R1	!SUM AP
	      SUM=SUM-R1			!NORMALIZE
	      J=J+J2				!NEXT V POINT
	      J0=J0+CVLSTP			!NEXT V WEIGHT
	    END DO
	  END IF
	  FRU=FRU+CVLSTP			!NEXT U WEIGHT
	END DO
C
	RETURN
C
C
	END

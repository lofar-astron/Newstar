C+ NMAOFR.FOR
C  WNB 910403
C
C  Revisions:
C	WNB 930930	Use SMP
C       HjV 950519	Make available for VAX R-series files
C
	SUBROUTINE NMAOFR
C
C  Load map data from old SMP file
C
C  Result:
C
C	CALL NMAOFR	will load map data in WMP file from old SMP file
C
C  Include files:
C
	INCLUDE 'WNG_DEF'
	INCLUDE 'NMA_DEF'
	INCLUDE 'GFH_O_DEF'			!GENERAL FILE HEADER
	INCLUDE 'SGH_O_DEF'			!SUB-GROUP HEADER
	INCLUDE 'MPH_O_DEF'			!MAP HEADER
	INCLUDE 'SMP_O_DEF'			!RMAP HEADER
	INCLUDE 'SMP_T_DEF'			
C
C  Parameters:
C
C
C  Arguments:
C
C
C  Function references:
C
	LOGICAL WNFOP,WNFOPF			!OPEN FILE
	LOGICAL WNFRD				!READ DATA
	LOGICAL WNFWR				!WRITE DATA
	INTEGER WNFEOF				!FILE POSITION
	INTEGER WNCALN				!STRING LENGTH
	LOGICAL WNDLNK				!LINK SET
	LOGICAL WNDLNG,WNDLNF			!LINK GROUP
	CHARACTER*32 WNTTSG			!MAKE SUB-GROUP STRING
C
C  Data declarations:
C
	INTEGER FCAIN				!INPUT FILE
	REAL LBUF(0:8191)			!DATA LINE
	BYTE MPH(0:MPHHDL-1)			!MAP HEADER
	  INTEGER*2 MPHI(0:MPHHDL/2-1)
	  INTEGER   MPHJ(0:MPHHDL/4-1)
	  REAL MPHE(0:MPHHDL/4-1)
	  REAL*8 MPHD(0:MPHHDL/8-1)
	  EQUIVALENCE (MPH,MPHI,MPHJ,MPHE,MPHD)
	BYTE OFH(0:SMP__L-1)			!OLD FILE HEADER
	  CHARACTER*(SMP__L) OFHC
	  INTEGER*2 OFHI(0:SMP__L/LB_I-1)
	  INTEGER   OFHJ(0:SMP__L/LB_J-1)
	  REAL OFHE(0:SMP__L/LB_E-1)
	  REAL*8 OFHD(0:SMP__L/LB_D-1)
	  EQUIVALENCE (OFH,OFHC,OFHI,OFHJ,OFHE,OFHD)
	CHARACTER*32 SETSTR			!GROUP NAME
	INTEGER*2 DBH_T(0:1,0:1)		!DATA TRANSLATION
	  DATA DBH_T/4,0,0,1/
C-
C
C INIT
C
	IF (.NOT.WNFOP(FCAIN,FILIN,'R')) THEN
 10	  CONTINUE
	  CALL WNCTXT(F_TP,'!/I/O error input file')
	  GOTO 800
	END IF
	IF (.NOT.WNFRD(FCAIN,SMP__L,OFH,0)) GOTO 10	!READ FILE HEADER
	IF (DATTYP.NE.0) CALL WNTTTL(SMP__L,OFH,SMP_T,DATTYP)
	IF (OFHC(1:4).NE.'.SMP') THEN
	  CALL WNCTXT(F_TP,'!/Input file not old SMP file')
	  GOTO 800
	END IF
	IF (.NOT.WNDLNG(GFH_LINKG_1,0,SGH_GROUPN_1,FCAOUT,
	1		SGPH(0),SGNR(0))) THEN	!MAKE JOB GROUP
 11	  CONTINUE
	  CALL WNCTXT(F_TP,'!/Cannot create sub-group')
	  GOTO 800
	END IF
	IF (.NOT.WNDLNG(SGPH(0)+SGH_LINKG_1,0,SGH_GROUPN_1,FCAOUT,
	1		SGPH(1),SGNR(1))) GOTO 11 !MAKE FIELD GROUP
	IF (.NOT.WNDLNG(SGPH(1)+SGH_LINKG_1,0,SGH_GROUPN_1,FCAOUT,
	1		SGPH(2),SGNR(2))) GOTO 11 !MAKE CHANNEL GROUP
	IF (.NOT.WNDLNG(SGPH(2)+SGH_LINKG_1,0,SGH_GROUPN_1,FCAOUT,
	1		SGPH(3),SGNR(3))) GOTO 11 !MAKE POLARISATION GROUP
	IF (.NOT.WNDLNG(SGPH(3)+SGH_LINKG_1,0,SGH_GROUPN_1,FCAOUT,
	1		SGPH(4),SGNR(4))) GOTO 11 !MAKE MAP/AP GROUP
	SGNR(5)=0				!FINISH
	SGNR(6)=-1
	SETSTR=WNTTSG(SGNR(0),0)		!GROUP NAME
	CALL WNCTXT(F_TP,'Map !AS being copied to !AS',
	1		FILIN,SETSTR)
	CALL WNGMVZ(MPHHDL,MPH(0))		!CLEAR MPH
	MPHI(MPH_LEN_I)=MPHHDL			!LENGTH
	MPHI(MPH_VER_I)=MPHHDV			!VERSION
	CALL WNGMV(MPH_FNM_N,OFH(SMP_FNM_1),MPH(MPH_FNM_1)) !FIELD NAME
	MPHE(MPH_EPO_E)=OFHE(SMP_EPO_E)		!EPOCH
	MPHD(MPH_RA_D)=OFHD(SMP_RA_D)		!RA
	MPHD(MPH_DEC_D)=OFHD(SMP_DEC_D)		!DEC
	MPHD(MPH_FRQ_D)=OFHD(SMP_FRQ_D)		!FREQ
	MPHD(MPH_BDW_D)=OFHD(SMP_BDW_D)		!BANDWIDTH
	MPHD(MPH_RAO_D)=OFHD(SMP_RAO_D)		!OBS. RA
	MPHD(MPH_DECO_D)=OFHD(SMP_DCO_D)	!OBS. DEC
	MPHD(MPH_FRQO_D)=OFHD(SMP_FRO_D)	!OBS. FREQ
	MPHI(MPH_ODY_I)=OFHI(SMP_ODY_I)		!OBS. DAY
	MPHI(MPH_OYR_I)=OFHI(SMP_OYR_I)		!OBS. YEAR
	MPHI(MPH_DCD_I)=OFHI(SMP_DCD_I)		!DATA CODE
	MPHI(MPH_PCD_I)=OFHI(SMP_PCD_I)		!PROG. CODE
	MPHD(MPH_SRA_D)=OFHD(SMP_SRA_D)		!SEP. RA
	MPHD(MPH_SDEC_D)=OFHD(SMP_SDC_D)	!SEP. DEC
	MPHD(MPH_SFRQ_D)=OFHD(SMP_SFR_D)	!SEP. FREQ
	MPHJ(MPH_NRA_J)=OFHI(SMP_NRA_I)		!# RA
	MPHJ(MPH_NDEC_J)=OFHI(SMP_NDC_I)	!# DEC
	MPHJ(MPH_NFRQ_J)=OFHI(SMP_NFR_I)	!# FREQ
	MPHJ(MPH_ZRA_J)=OFHI(SMP_ZRA_I)		!0 RA
	MPHJ(MPH_ZDEC_J)=OFHI(SMP_ZDC_I)	!0 DEC
	MPHJ(MPH_ZFRQ_J)=OFHI(SMP_ZFR_I)	!0 FREQ
	MPHJ(MPH_MXR_J)=OFHI(SMP_MXR_I)		!MAX. POS. RA
	MPHJ(MPH_MXD_J)=OFHI(SMP_MXD_I)		!MAX. POS. DEC
	MPHJ(MPH_MXF_J)=OFHI(SMP_MXF_I)		!MAX. POS. FREQ
	MPHJ(MPH_MNR_J)=OFHI(SMP_MNR_I)		!MIN. POS. RA
	MPHJ(MPH_MND_J)=OFHI(SMP_MND_I)		!MIN. POS. DEC
	MPHJ(MPH_MNF_J)=OFHI(SMP_MNF_I)		!MIN. POS. FREQ
	MPHE(MPH_MAX_E)=OFHE(SMP_MAX_E)		!MAX.
	MPHE(MPH_MIN_E)=OFHE(SMP_MIN_E)		!MIN.
	MPHD(MPH_SHR_D)=OFHD(SMP_SHR_D)		!SHIFT RA
	MPHD(MPH_SHD_D)=OFHD(SMP_SHD_D)		!SHIFT DEC
	MPHD(MPH_SHF_D)=OFHD(SMP_SHF_D)		!SHIFT FREQ
	MPHD(MPH_SUM_D)=OFHD(SMP_SUM_D)		!NORM. SUM
	MPHE(MPH_UNI_E)=OFHE(SMP_UNI_E)		!UNIT FACTOR
	CALL WNGMV(MPH_UCM_N,OFH(SMP_UCM_1),MPH(MPH_UCM_1)) !USER COMMENT
	MPHJ(MPH_NPT_J)=OFHJ(SMP_NPT_J)		!# OF POINTS
	MPHJ(MPH_NBL_J)=OFHI(SMP_NBS_I)		!# OF BASELINES
	MPHJ(MPH_NST_J)=OFHI(SMP_NST_I)		!# OF SETS
	CALL WNGMV(MPH_TYP_N,OFH(SMP_TYP_1),MPH(MPH_TYP_1)) !MAP TYPE
	CALL WNGMV(MPH_POL_N,OFH(SMP_POL_1),MPH(MPH_POL_1)) !POL. TYPE
	DO I=0,7				!TAPER TYPE ETC
	  MPHI(MPH_CD_I+I)=OFHI(SMP_CD_I+I)
	END DO
	MPHI(MPH_EPT_I)=OFHI(SMP_EPT_I)		!APP. TYPE
	MPHE(MPH_OEP_E)=OFHE(SMP_OEP_E)		!OBS. EPOCH
	MPHE(MPH_NOS_E)=OFHE(SMP_NOS_E)		!NOISE
	MPHE(MPH_FRA_E)=OFHE(SMP_FRA_E)		!FIELD RA
	MPHE(MPH_FDEC_E)=OFHE(SMP_FDC_E)	!FIELD DEC
	MPHE(MPH_FFRQ_E)=OFHE(SMP_FFR_E)	!FIELD FREQ
	CALL WNGMV(MPH_TEL_N,OFH(SMP_TEL_1),MPH(MPH_TEL_1)) !TEL. NAME
	MPHJ(MPH_FSR_J)=OFHI(SMP_FSR_I)		!FFT SIZE RA
	MPHJ(MPH_FSD_J)=OFHI(SMP_FSD_I)		!FFT SIZE DEC
	MPHJ(MPH_MDP_J)=WNFEOF(FCAOUT)+MPHHDL	!MAP DATA POINTER
	IF (.NOT.WNFWR(FCAOUT,MPHHDL,MPH(0),MPHJ(MPH_MDP_J)-MPHHDL))
	1			THEN		!WRITE MAP HEADER
 12	  CONTINUE
	  CALL WNCTXT(F_TP,'!/Write error')
	  GOTO 800
	END IF
C
C COPY DATA
C
	IF (MPHI(MPH_DCD_I).EQ.2) THEN
	   DBH_T(0,0)=2				!I
	ELSE IF (MPHI(MPH_DCD_I).EQ.4) THEN
	   DBH_T(0,0)=3				!J
	ELSE IF (MPHI(MPH_DCD_I).EQ.5) THEN
	   DBH_T(0,0)=4				!E
	ELSE IF (MPHI(MPH_DCD_I).EQ.8) THEN
	   DBH_T(0,0)=5				!D
	ELSE 
	   DBH_T(0,0)=4				!ASSUME E
	END IF
	DBH_T(1,0)=LB_E*MPHJ(MPH_NRA_J)
	J=DBH_T(1,0)
	DO I=0,MPHJ(MPH_NDEC_J)-1		!ALL LINES
	  IF (.NOT.WNFRD(FCAIN,LB_E*MPHJ(MPH_NRA_J),LBUF,
	1		SMP__L+I*LB_E*MPHJ(MPH_NRA_J)))
	1			GOTO 10		!READ LINE
	  IF (DATTYP.NE.0) CALL WNTTTL(J,LBUF,DBH_T,DATTYP)
	  IF (.NOT.WNFWR(FCAOUT,LB_E*MPHJ(MPH_NRA_J),LBUF,
	1		MPHJ(MPH_MDP_J)+I*LB_E*MPHJ(MPH_NRA_J)))
	1			GOTO 12		!WRITE LINE
	END DO
	IF (.NOT.WNDLNK(GFH_LINK_1,MPHJ(MPH_MDP_J)-MPHHDL,
	1		MPH_SETN_1,FCAOUT)) GOTO 12 !LINK SET
	IF (.NOT.WNDLNG(SGPH(4)+SGH_LINKG_1,MPHJ(MPH_MDP_J)-MPHHDL,
	1		SGH_GROUPN_1,FCAOUT,
	1		SGPH(5),SGNR(5))) GOTO 11 !MAKE DATA GROUP
C
 800	CONTINUE
	CALL WNFCL(FCAIN)			!CLOSE INPUT
	CALL WNFCL(FCAOUT)			!CLOSE OUTPUT
C
	RETURN					!READY
C
C
	END

C+ NMAPRT.FOR
C  WNB 910402
C
C  Revisions:
C	HjV 930423	Change name of some keywords
C	CMV 931119	Change call to NMAPFL (include NODIN)
C	WNB 931214	Delete auto SHOW for EDIT
C	CMV 931216	Separate layout/overview options
C	CMV 931220	Pass FCA of input file to WNDXLP and WNDSTA/Q
C	CMV 940331	Add total flux calculation to Noise and Show Data
C	CMV 940530	Option to print Job Summary
C
	SUBROUTINE NMAPRT
C
C  Show/edit data in WMP file
C
C  Result:
C
C	CALL NMAPRT	will show and/or edit data in WMP file
C
C PIN references:
C
C	INPUT_WMP_NODE
C	WMP_SETS
C	FILE_ACTION
C	MAP_ACTION
C	DATA_ACTION
C
C  Include files:
C
	INCLUDE 'WNG_DEF'
	INCLUDE 'NMA_DEF'
	INCLUDE 'MPH_O_DEF'		!MAP HEADER
C
C  Parameters:
C
	INTEGER MXNAR			!MAX. # OF AREAS
	  PARAMETER (MXNAR=10)
C
C  Arguments:
C
C
C  Function references:
C
	LOGICAL WNDPAR			!GET DWARF PARAMETER
	LOGICAL WNDNOD			!GET NODE NAME
	LOGICAL WNDNOC			!UPDATE NODE
	LOGICAL WNFOP			!OPEN FILE
	LOGICAL WNFRD			!READ FILE
	LOGICAL WNDSTA			!GET MAPS TO DO
	LOGICAL NMASTG			!GET A MAP
C
C  Data declarations:
C
	INTEGER FCAIN			!INPUT FILE
	CHARACTER*24 ACT		!ACTION ASKED
	INTEGER MPHP			!SUB-GROUP POINTER
	INTEGER SNAM(0:7)		!SET NAME
	CHARACTER*12 F1000		!FORMATS
	LOGICAL LOF			!CALCULATE OFFSET
	INTEGER HISBAD			!HISTOGRAM AREA
	REAL NOIS(0:1)			!CALCULATED NOISE AND OFFSET
	REAL R2
	CHARACTER*1 MODE		!FILE-OPEN MODE
	INTEGER FAREA(0:3)		!FULL MAP AREA
	INTEGER TAREA(0:3,0:1)		!TOTAL AREA (0=NORM, 1=EDGE)
	INTEGER PAREA(0:3,MXNAR,0:1)	!PARTIAL AREAS
	INTEGER MXAREA(0:3)		!MAX. SHOW AREA
	  DATA MXAREA/0,0,20,20/
	INTEGER MXARE2(0:3)
	  DATA MXARE2/0,0,0,0/
	REAL LBUF(0:8191)		!DATA BUF
	BYTE MPH(0:MPHHDL-1)		!MAP HEADER
	  INTEGER MPHJ(0:MPHHDL/4-1)
	  INTEGER*2 MPHI(0:MPHHDL/2-1)
	  REAL MPHE(0:MPHHDL/4-1)
	  EQUIVALENCE (MPH,MPHJ,MPHI,MPHE)
C-
C
C GET NODE
C
	MODE='R'				!ASSUME READ-ONLY FOR NOW
 100	CONTINUE
	IF (.NOT.WNDNOD('INPUT_WMP_NODE',' ','WMP','R',NODIN,FILIN)) THEN !NODE
	  IF (E_C.EQ.DWC_ENDOFLOOP) RETURN	!READY WITH SHOW
	  CALL WNCTXT(F_TP,'Node does not exist')
	  GOTO 100
	ELSE IF (E_C.EQ.DWC_NULLVALUE) THEN
	  RETURN				!END
	ELSE IF (E_C.EQ.DWC_WILDCARD) THEN
	  GOTO 100				!MUST SPECIFY
	END IF
	IF (.NOT.WNFOP(FCAIN,FILIN,MODE)) THEN	!OPEN MAP FILE
	  CALL WNCTXT(F_TP,'Cannot open file attached to node')
	  GOTO 100
	END IF
	CALL NSCPFH(F_TP,FCAIN)			!PRINT FILE HEADER
C
C FILE ACTION
C
 101	CONTINUE
	IF (.NOT.WNDPAR('FILE_ACTION',ACT,LEN(ACT),J,'CONT')) THEN !FILE ACTION
	  IF (E_C.EQ.DWC_ENDOFLOOP) THEN	!^Z
 102	    CONTINUE
	    CALL WNFCL(FCAIN)			!CLOSE FILE
	    GOTO 100				!RETRY NODE
	  END IF
	  GOTO 101				!RETRY
	ELSE IF (E_C.EQ.DWC_NULLVALUE) THEN
	  GOTO 102				!READY
	ELSE IF (E_C.EQ.DWC_WILDCARD) THEN
	  ACT='CONT'				!ASSUME CONT
	END IF
	IF (ACT.EQ.'LAYOUT') THEN		!SHOW LAYOUT
	  CALL NMAPFL(F_TP,FCAIN,NODIN,.FALSE.)	!SHOW LAYOUT
	ELSE IF (ACT.EQ.'OVERVIEW') THEN	!SHOW OVERVIEW
	  CALL NMAPFL(F_TP,FCAIN,NODIN,.TRUE.)	!SHOW OVERVIEW
	ELSE IF (ACT.EQ.'SHOW') THEN		!SHOW DETAILS
	  CALL NSCXFH(F_TP,FCAIN)
	ELSE IF (ACT.EQ.'EDIT') THEN		!EDIT
	  IF (MODE.EQ.'R') THEN			!CHANGE TO UPDATE MODE
	    MODE='U'				!MAKE UPDATE
	    CALL WNFCL(FCAIN)			!CLOSE FILE
	    IF (.NOT.WNDNOC(' ',' ','WMP',MODE,' ',FILIN)) THEN !CHANGE DATES
	      CALL WNCTXT(F_TP,'Node is not writable')
	      GOTO 100
	    END IF
	    IF (.NOT.WNFOP(FCAIN,FILIN,MODE)) THEN !OPEN WMP FILE
	      CALL WNCTXT(F_TP,'Cannot write to file attached to node')
	      GOTO 100
	    END IF
	  END IF
	  CALL NSCEFH(F_TP,FCAIN)		!EDIT HEADER
	ELSE IF (ACT.EQ.'CONT') THEN		!CONT
	  GOTO 200				!DO MAP
	ELSE
	  GOTO 102				!QUIT
	END IF
	GOTO 101				!UNKNOWN
C
C DO MAP
C
 200	CONTINUE
	IF (.NOT.WNDSTA('WMP_SETS',MXNSET,SETS,FCAIN)) GOTO 102 !GET SETS TO DO
	IF (SETS(0,0,1).EQ.0) GOTO 102		!NONE
 201	CONTINUE				!DO NEXT SET
	IF (.NOT.NMASTG(FCAIN,SETS,MPH,MPHP,SNAM)) GOTO 102 !GET MAP
	CALL NMAPMH(F_TP,MPH,SNAM,NODIN)	!SHOW MAP HEADER
C
C MAP ACTION
C
 301	CONTINUE
	IF (.NOT.WNDPAR('MAP_ACTION',ACT,LEN(ACT),J,'CONT')) THEN !MAP ACTION
	  IF (E_C.EQ.DWC_ENDOFLOOP) GOTO 101	!^Z, RETRY FILE ACTION
	  GOTO 301				!RETRY
	ELSE IF (E_C.EQ.DWC_NULLVALUE) THEN
	  GOTO 101				!RETRY FILE ACTION
	ELSE IF (E_C.EQ.DWC_WILDCARD) THEN
	  ACT='CONT'				!ASSUME CONT
	END IF
	IF (ACT.EQ.'NEXT') THEN			!NEXT MAP
	  GOTO 201				!NEXT MAP
	ELSE IF (ACT.EQ.'SHOW') THEN		!SHOW DETAILS
	  CALL NMAXMH(F_TP,FCAIN,MPHP,SNAM)
	ELSE IF (ACT.EQ.'JOB') THEN		!SHOW JOB SUMMARY
	  CALL NMAJSP(F_TP,FCAIN,MPHJ,SNAM,NODIN)
	ELSE IF (ACT.EQ.'EDIT') THEN		!EDIT
	  IF (MODE.EQ.'R') THEN			!CHANGE TO UPDATE MODE
	    MODE='U'				!MAKE UPDATE
	    CALL WNFCL(FCAIN)			!CLOSE FILE
	    IF (.NOT.WNDNOC(' ',' ','WMP',MODE,' ',FILIN)) THEN !CHANGE DATES
	      CALL WNCTXT(F_TP,'Node is not writable')
	      GOTO 100
	    END IF
	    IF (.NOT.WNFOP(FCAIN,FILIN,MODE)) THEN !OPEN WMP FILE
	      CALL WNCTXT(F_TP,'Cannot write to file attached to node')
	      GOTO 100
	    END IF
	  END IF
	  CALL NMAEMH(F_TP,FCAIN,MPHP,SNAM)	!EDIT
	ELSE IF (ACT.EQ.'CONT') THEN		!CONT
	  GOTO 400				!DO DATA
	ELSE
	  GOTO 101				!QUIT
	END IF
	GOTO 301				!UNKNOWN
C
C DO DATA
C
 400	CONTINUE
 401	CONTINUE
	IF (.NOT.WNDPAR('DATA_ACTION',ACT,LEN(ACT),J,'Q')) THEN !ACTION
	  IF (E_C.EQ.DWC_ENDOFLOOP) GOTO 301	!^Z, RETRY SET ACTION
	  GOTO 401				!RETRY
	ELSE IF (E_C.EQ.DWC_NULLVALUE) THEN
	  GOTO 301				!RETRY SET ACTION
	ELSE IF (E_C.EQ.DWC_WILDCARD) THEN
	  ACT='Q'				!ASSUME >
	END IF
	CALL WNCAUC(ACT)			!MAKE UC
	IF (ACT(1:1).EQ.'Q') THEN		!QUIT
	  GOTO 301
C
C NOISE
C
	ELSE IF (ACT(1:1).EQ.'N' .OR. ACT(1:1).EQ.'O') THEN !NOISE
	  IF (ACT(1:1).EQ.'O') THEN		!OFFSET
	    LOF=.TRUE.
	  ELSE
	    LOF=.FALSE.
	  END IF
	  DO I=0,3
	    TAREA(I,0)=0			!DEFAULT AREA
	    FAREA(I)=0				!FULL AREA
	  END DO
	  FAREA(2)=MPHJ(MPH_NRA_J)		!LENGTH LINE
	  FAREA(3)=MPHJ(MPH_NDEC_J)
	  TAREA(2,0)=FAREA(2)			!DEFAULT=FULL
	  TAREA(3,0)=FAREA(3)
	  MXARE2(2)=FAREA(2)			!MAX=FULL
	  MXARE2(3)=FAREA(3)
	  CALL NMADAR(MXNAR,J0,FAREA,0,MXARE2,TAREA(0,0),PAREA(0,1,0),
	1		TAREA(0,1),PAREA(0,1,1)) !GET AREAS
	  IF (J0.GT.0) THEN			!AREA GIVEN
	    R0=0.0				!INIT. SUM
	    IF (LOF) THEN			!INIT. HISTOGRAM
	      CALL WNMHS8(HISBAD,-1,0.25E0)
	    ELSE
	      CALL WNMHS8(HISBAD,+1,0.25E0)
	    END IF
	    DO I=TAREA(2,1),TAREA(3,1)		!ALL LINES
	      IF (.NOT.WNFRD(FCAIN,LB_E*MPHJ(MPH_NRA_J),
	1		LBUF,MPHJ(MPH_MDP_J)+
	1		(I+MPHJ(MPH_NDEC_J)/2)*LB_E*MPHJ(MPH_NRA_J))) THEN !READ
		CALL WNCTXT(F_TP,'Error reading map')
	        GOTO 401
	      END IF
	      J2=-32768				!START POINT
	      DO I1=1,J0			!ALL AREAS
		IF (I.GE.PAREA(2,I1,1) .AND. I.LE.PAREA(3,I1,1)) THEN !THIS LINE
		  J2=MAX(J2,PAREA(0,I1,1))	!START POINT
		  J1=PAREA(1,I1,1)-J2+1		!LENGTH
		  DO J3=0,J1-1
	            R0=R0+LBUF(J2+MPHJ(MPH_NRA_J)/2+J3)
		  END DO
		  CALL WNMHS1(HISBAD,J1,
	1		LBUF(J2+MPHJ(MPH_NRA_J)/2)) !HISTO DATA
		  J2=PAREA(1,I1,1)+1		!NEXT START POINT
		END IF				!END SUB-AREA
	      END DO				!END SUB AREAS
	    END DO				!END LINES
	    CALL WNMHS3(HISBAD,1,F_P)		!SHOW HISTOGRAM
	    CALL WNMHS4(HISBAD,NOIS,F_TP)	!GET NOISE (AND OFFSET)
	    CALL WNMHS9(HISBAD)			!CLEAR HISTOGRAM
	    CALL WNCTXT(F_TP,'Total flux in areas: !8$E7.1',R0)
	  END IF				!END AREA
	ELSE IF (ACT(1:1).EQ.'S') THEN		!SHOW DATA
C
C DATA DISPLAY
C
	  DO I=0,3
	    TAREA(I,0)=0			!DEFAULT AREA
	    FAREA(I)=0				!FULL AREA
	  END DO
	  FAREA(2)=MPHJ(MPH_NRA_J)		!LENGTH LINE
	  FAREA(3)=MPHJ(MPH_NDEC_J)
	  CALL NMADAR(1,J0,FAREA,0,MXAREA,TAREA(0,0),PAREA(0,1,0),
	1		TAREA(0,1),PAREA(0,1,1)) !GET AREA
	  IF (J0.GT.0) THEN			!AREA SPECIFIED
	    CALL WNCTXT(F_TP,'!/   l      m!/')	!HEADING
	    R0=0.0				!INIT. SUM
	    DO I=TAREA(2,1),TAREA(3,1)		!ALL LINES
	      IF (.NOT.WNFRD(FCAIN,LB_E*MPHJ(MPH_NRA_J),
	1		LBUF,MPHJ(MPH_MDP_J)+
	1		(I+MPHJ(MPH_NDEC_J)/2)*LB_E*MPHJ(MPH_NRA_J))) THEN !READ
		CALL WNCTXT(F_TP,'Error reading map')
	        GOTO 401
	      END IF
	      DO J3=0,TAREA(1,1)-TAREA(0,1)
	         R0=R0+LBUF(TAREA(0,1)+MPHJ(MPH_NRA_J)/2+J3)
	      END DO
	      CALL WNCTXT(F_TP,'!80$13Q1!5$SJ !5$SJ !13C!8$#E7.1',
	1		TAREA(0,1),I,TAREA(1,1)-TAREA(0,1)+1,
	1		LBUF(TAREA(0,1)+MPHJ(MPH_NRA_J)/2)) !SHOW DATA
	    END DO				!END LINES
	    CALL WNCTXT(F_TP,'Total flux in area: !8$E7.1',R0)
	  END IF				!END AREAS
	END IF
C
C NEXT ACTION
C
	GOTO 401				!NEXT ACTION
C
C
	END

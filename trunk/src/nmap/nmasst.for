C+ NMASST.FOR
C  WNB 910307
C
C  Revisions:
C	WNB 910417	Read only one set for test values
C	WNB 910913	Change loops
C	WNB 920828	Update for line velocities and INST
C	WNB 921104	J2000
C	WNB 930127	Change weighting averages, proper bandwidth
C	WNB 930414	Cater for empty sets
C	HjV 930423	Change some text
C	CMV 950314	Add MAXPOS (also works if RTP(13)=0)
C
	SUBROUTINE NMASST
C
C  Get sorting statistics map making
C
C  Result:
C
C	CALL NMASST	will get the statistics from input data to
C				be able to produce a map.
C	CALL NMASS1(STHFCA_J:I, STHPX_J:I)
C			will get the start statistics for data of one map.
C			Data to be found in file STHFCA at STHPX.
C
C  Include files:
C
	INCLUDE 'WNG_DEF'
	INCLUDE 'STH_O_DEF'		!SET HEADER
	INCLUDE 'NMA_DEF'
C
C  Parameters:
C
	INTEGER STHFCA			!DATA FILE
	INTEGER STHPX			!SET HEADER POINTER
C
C  Arguments:
C
C
C  Function references:
C
	LOGICAL WNDXLN			!NEXT LOOP
	LOGICAL WNFOP			!OPEN FILE
	LOGICAL WNFRD			!READ DATA
	LOGICAL NSCSTL			!GET SET
C
C  Data declarations:
C
	LOGICAL ONLY1			!SS1 INDICATOR
	REAL MAXPOS			!MAX. TELESCOPE POSITION
	INTEGER FCAIN			!FILE AREA
	INTEGER SNAM(0:7)		!FULL SET NAME
	INTEGER STHP			!SET HEADER POINTER
	BYTE STH(0:STHHDL-1)		!SET HEADER
	  INTEGER*2 STHI(0:STHHDL/2-1)
	  INTEGER STHJ(0:STHHDL/4-1)
	  REAL STHE(0:STHHDL/4-1)
	  DOUBLE PRECISION STHD(0:STHHDL/8-1)
	  EQUIVALENCE (STH,STHI,STHJ,STHE,STHD)
C-
	ONLY1=.FALSE.
	GOTO 10
C
C NMASS1
C
	ENTRY NMASS1(STHFCA,STHPX)
C
	ONLY1=.TRUE.
	GOTO 10
C
C INIT
C
 10	CONTINUE
	DO I=0,CNTJ-1				!ZERO AVERAGES AND COUNTS
	  CNTJVL(I)=0
	END DO
	DO I=0,CNTD-1
	  CNTDVL(I)=0
	END DO
	DO I=0,CNTC-1
	  IF (I.NE.1) CNTCVL(I)=' '		!SKIP USER COMMENT
	END DO
	DO I=0,1
	  UVMAX(I)=0				!MAX. UV
	  UV1MAX(I)=0				!MAX. UV FOR BASHA
	  UV2MAX(I)=0				!MAX. UV FOR IFRHA
	END DO
	FRQMIN=1E30				!MIN FREQ.
	FRQMAX=-1E30				!MAX FREQ.
	UV1MAX(1)=PI/2				!MAX V BASHA
	UV2MAX(0)=STHIFR			!MAX U IFRHA
	UV2MAX(1)=PI/2				!MAX V IFRHA
	IF (.NOT.ONLY1) THEN
	  CALL WNDXLI(LPOFF)			!INIT LOOP OFFSETS
	END IF
C
C CHECK ALL FILES AND SETS
C
	IF (ONLY1) THEN				!ONLY ONE
	  IF (.NOT.WNFRD(STHFCA,STHHDL,STH,STHPX)) THEN !READ SET HEADER
	    CALL WNCTXT(F_TP,'Fatal error reading MAP header')
	    CALL WNGEX				!STOP
	  END IF
	  GOTO 40				!FOUND ONE
	END IF
	DO WHILE (WNDXLN(LPOFF))		!LOOP
	  DO I=1,NFILE				!ALL FILES
	    IF (.NOT.WNFOP(FCAIN,FILIN(I),'R')) THEN
	      CALL WNCTXT(F_TP,'Cannot open input node !AS',NODIN(I))
	      CALL WNGEX			!STOP PROGRAM
	    END IF
 20	    CONTINUE
	    IF (NSCSTL(FCAIN,SETS(0,0,I),STH,STHP,SNAM,LPOFF)) THEN !SET FOUND
	      IF (STHJ(STH_SCN_J).LE.0) GOTO 20	!NO DATA IN SET
	      CALL WNFCL(FCAIN)			!CLOSE FILE
	      DO I3=1,7				!RESET SETS
	        SETS(I3,0,I)=0
	      END DO
	      GOTO 40				!FOUND ONE
	    END IF
	    CALL WNFCL(FCAIN)			!CLOSE FILE
	  END DO				!END FILES
	END DO
C
	RETURN					!NONE FOUND
C
C A SET WAS FOUND
C
 40	CONTINUE
	MAXPOS=0				!FIND MAX. TEL.POS.
	DO I=0,STHTEL-1
	  MAXPOS=MAX(MAXPOS,STHE(STH_RTP_E+I))
	END DO
	MAXPOS=MAXPOS-STHE(STH_RTP_E)
	FRQMAX=MAX(FRQMAX,REAL(STHD(STH_FRQ_D))) !MAX. FREQ.
	FRQMIN=MIN(FRQMIN,REAL(STHD(STH_FRQ_D))) !MIN. FREQ.
	UVMAX(0)=MAX(UVMAX(0),REAL(MAXPOS*
	1			STHD(STH_FRQ_D)/(CL*1E-6))) !MAX. U
	UVMAX(1)=MAX(UVMAX(1),ABS(REAL(SIN(STHD(STH_DEC_D)*PI2)*
	1			MAXPOS*
	1			STHD(STH_FRQ_D)/(CL*1E-6)))) !MAX. V
	UV1MAX(0)=MAX(UV1MAX(0),MAXPOS) 	!MAX U BASHA
	CNTDVL(0)=STHD(STH_RA_D)		!RA
	CNTDVL(1)=STHD(STH_DEC_D)		!DEC
	CNTDVL(2)=STHD(STH_RAE_D)		!RA EPOCH
	CNTDVL(3)=STHD(STH_DECE_D)		!DEC EPOCH
	CNTDVL(4)=STHE(STH_OEP_E)		!OBS. EPOCH
	CNTDVL(13)=STHE(STH_EPO_E)		!1950/2000
	CNTJVL(0)=STHI(STH_OBS_I)		!OBS. DAY
	CNTJVL(1)=STHI(STH_OBS_I+1)		!OBS. YEAR
	CNTJVL(3)=STHJ(STH_VELC_J)		!VELOCITY CODE
	CNTJVL(6)=STHJ(STH_INST_J)		!INSTRUMENT TYPE
	CALL WNGMTS(STH_FIELD_N,STH(STH_FIELD_1),CNTCVL(0)) !FIELD NAME
	D0=STHE(STH_BAND_E)*STHJ(STH_SCN_J)*STHE(STH_HAV_E) !SET WEIGHT
	CNTDVL(14)=2*D0*CNTDVL(5)*ABS(STHD(STH_FRQ_D)-CNTDVL(6))/
	1			(CNTDVL(5)**2+D0**2)*(CNTDVL(5)+D0)+
	1			CNTDVL(5)*CNTDVL(14)+D0*
	1			STHE(STH_BAND_E) !BANDWIDTH
	CNTDVL(6)=CNTDVL(5)*CNTDVL(6)+D0*
	1			STHD(STH_FRQ_D)	!FREQUENCY
	CNTDVL(7)=CNTDVL(5)*CNTDVL(7)+D0*
	1			STHE(STH_VEL_E)	!VELOCITY
	CNTDVL(8)=CNTDVL(5)*CNTDVL(8)+D0*
	1			STHE(STH_VELR_E) !REF. VELOCITY
	CNTDVL(9)=CNTDVL(5)*CNTDVL(9)+D0*
	1			STHD(STH_FRQC_D) !BAND REF. FREQUENCY
	CNTDVL(12)=CNTDVL(5)*CNTDVL(12)+D0*
	1			STHD(STH_FRQ0_D) !REST FREQUENCY
	CNTDVL(5)=CNTDVL(5)+D0			!TOTAL WEIGHTED BAND
	CNTDVL(6)=CNTDVL(6)/CNTDVL(5)		!AVERAGE FREQUENCY
	CNTDVL(7)=CNTDVL(7)/CNTDVL(5)		!AVERAGE VELOCITY
	CNTDVL(8)=CNTDVL(8)/CNTDVL(5)		!AVERAGE REF. VEL.
	CNTDVL(9)=CNTDVL(9)/CNTDVL(5)		!AVERAGE REF. FREQ.
	CNTDVL(12)=CNTDVL(12)/CNTDVL(5)		!AVERAGE REST FREQ.
	CNTDVL(14)=CNTDVL(14)/CNTDVL(5)		!AVERAGE BANDWIDTH
	CNTJVL(2)=CNTJVL(2)+1			!COUNT SETS
C
C A COORDINATE
C
 30	CONTINUE
	IF (.NOT.ONLY1) THEN
	  MAPCRD(0)=CNTDVL(0)			!APP. RA FIRST SET
	  MAPCRD(1)=CNTDVL(1)			!APP. DEC FIRST SET
	ELSE IF (MAPCTP.EQ.1) THEN		!APPARENT
	  MAPCRD(0)=CNTDVL(0)			!APP. RA FIRST SET
	  MAPCRD(1)=CNTDVL(1)			!APP. DEC FIRST SET
	ELSE IF (MAPCTP.EQ.2) THEN		!B1950
	  MAPCRD(0)=CNTDVL(2)			!RA FIRST SET
	  MAPCRD(1)=CNTDVL(3)			!DEC FIRST SET
	END IF
C
	RETURN					!READY
C
C
	END

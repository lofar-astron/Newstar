C+ NMASTG.FOR
C  WNB 910327
C
C  Revisions:
C
	LOGICAL FUNCTION NMASTG(FCA,SETS,MPH,MPHP,SNAM)
C
C  Get next map set
C
C  Result:
C
C	NMASTG_L = NMASTG( FCA_J:I, SETS_J(0:7,0:*):IO, MPH_B(0:*):O,
C				MPHP_J:O, SNAM_J(0:7):O)
C				Get next set in file FCA, using the
C				specification in SETS (see WNDSTA).
C				NMASTG will be .false. if no more sets.
C				MPH will be the header of the set, MPHP the
C				diskpointer. SNAM is the full name of the
C				group, coded. A check is made for the right
C				version.
C	NMASTH_L = NMASTH( FCA_J:I, SETS_J(0:7,0:*):IO, MPH_B(0:*):O,
C				MPHP_J:O, SNAM_J(0:7):O)
C				Same, but no check for version
C	NMASTL_L = NMASTL( FCA_J:I, SETS_J(0:7,0:*):IO, MPH_B(0:*):O,
C				MPHP_J:O, SNAM_J(0:7):O,
C				OFFSET_J(0:7):I)
C				As NMASTG, but the check in the set list SETS
C				is done with offsets OFFSET.
C
C  Include files:
C
	INCLUDE 'WNG_DEF'
	INCLUDE 'MPH_O_DEF'		!SET HEADER
C
C  Parameters:
C
C
C  Entry points:
C
	LOGICAL NMASTH			!NO VERSION CHECK
	LOGICAL NMASTL			!OFFSET FOR LOOPS
C
C  Arguments:
C
	INTEGER FCA			!FILE TO SEARCH
	INTEGER SETS(0:7,0:*)		!SETS TO DO
	BYTE MPH(0:*)			!SET HEADER
	INTEGER MPHP			!POINTER TO SET HEADER
	INTEGER SNAM(0:7)		!FULL SET NAME
	INTEGER OFFSET(0:7)		!CHECK OFFSET FOR LOOPS
C
C  Function references:
C
	LOGICAL WNFRD			!READ DISK
	LOGICAL WNDSTG			!FUNCTIONS THAT DO THE WORK
	LOGICAL WNDSTH,WNDSTL
C
C  Data declarations:
C
C-
	NMASTG=WNDSTG(FCA,SETS,MPHHDV,MPHP,SNAM)	!GET SET
	GOTO 10
C
C NMASTH
C
	ENTRY NMASTH(FCA,SETS,MPH,MPHP,SNAM)
C
	NMASTH=WNDSTH(FCA,SETS,MPHHDV,MPHP,SNAM)	!GET SET
	GOTO 10
C
C NMASTL
C
	ENTRY NMASTL(FCA,SETS,MPH,MPHP,SNAM,OFFSET)
C
	NMASTL=WNDSTL(FCA,SETS,MPHHDV,MPHP,SNAM,OFFSET)	!GET SET
	GOTO 10
C
C SET SET HEADER
C
 10	CONTINUE
	IF (NMASTG) THEN				!ONE FOUND
	  IF (.NOT.WNFRD(FCA,MPHHDL,MPH(0),MPHP)) GOTO 900 !READ SET HEADER
	END IF
C
	RETURN
C
C ERROR
C
 900	CONTINUE
	DO I=1,7
	  SETS(I,0)=0					!RESET SEARCH
	END DO
	NMASTG=.FALSE.					!NO MORE
C
	RETURN
C
C
	END

C+ NGCEXC.FOR
C  WNB 920821
C
C  Revisions:
C	WNB 930630	Add functions 78-83; change HA value for transpose
C	WNB 930711	Correct REAL, IMAG, PHASE, AMPL
C
	LOGICAL FUNCTION NGCEXC(COD,LCOD,PLOT,HA,UT,FQ,BL,RA,DEC,VALUE)
C
C  Calculate expression
C
C  Result:
C
C	NGCEXC_L =  NGCEXC( COD_J(*):I, LCOD_B(4,*):I, PLOT_X(*):I, HA_E:I,
C				UT_E:I, FQ_E:I, BL_E:I, RA_E:I, DEC_E:I,
C				VALUE_X:O)
C				Calculate VALUE using program in COD, and
C				values in PLOT. HA is hour angle of current
C				execution; as are UTime, FreQ, BaseLine,
C				RA, DEC
C
C  Include files:
C
	INCLUDE 'WNG_DEF'
	INCLUDE 'NGC_DEF'
C
C  Parameters:
C
C
C  Arguments:
C
	INTEGER COD(*)			!EXECUTABLE CODES
	  BYTE LCOD(4,*)
	COMPLEX PLOT(*)			!PLOT VALUES
	REAL HA				!HA OF THIS POINT (DEG)
	REAL UT				!UT OF THIS POINT (DEG)
	REAL FQ				!FQ OF THIS POINT (MHZ)
	REAL BL				!BL OF THIS POINT (M)
	REAL RA				!RA OF THIS POINT (DEG)
	REAL DEC			!DEC OF THIS POINT (DEG)
	COMPLEX VALUE			!RETURNED VALUE
C
C  Function references:
C
	REAL WNMEEF			!FLOOR
	REAL WNMEEC			!CEIL
C
C  Data declarations:
C
	INTEGER CDP			!CODE POINTER
	INTEGER NVAL			!VALUES ON STACK
	COMPLEX VAL(256)		!VALUE STACK
C-
C
C INIT
C
	NGCEXC=.TRUE.				!ASSUME OK
	NVAL=0					!NO VALUES
	CDP=0					!CODE POINTER
C
C EXECUTE CODE
C
10000	CONTINUE
	CDP=CDP+1				!NEXT CODE
	IF (COD(CDP).EQ.0) THEN			!READY
12000	  CONTINUE
	  IF (NVAL.EQ.1) THEN			!OK
	    VALUE=VAL(NVAL)			!RETURN VALUE
	  ELSE					!SOMETHING WRONG
11000	    CONTINUE
	    NGCEXC=.FALSE.			!ERROR
	    VALUE=CMPLX(NGCDLC,NGCDLC)		!DELETE CODE
	  END IF
C
	  RETURN
	END IF
	IF (LCOD(1,CDP).LT.30) THEN		!NORMAL OPERATION
	  GOTO (10,20,30,40,50,60,70,80,90,100,110,120,130,140,150,
	1		160,170,180) LCOD(1,CDP) !DISTRIBUTE
	ELSE					!FUNCTION
	  GOTO (500,510,520,530,540,550,560,570,580,590,600,610,620,
	1		630,640,650,660,670,680,690,700,710,720,730,740,
	1		750,760,770,780,790,800,810,820,830,840,850)
	1		LCOD(1,CDP)-49		!DISTRIBUTE
	END IF
	GOTO 11000				!ERROR
C
C OPERATORS
C
C +
 10	CONTINUE
	IF (NVAL.LT.1) GOTO 11000		!CANNOT DO
	GOTO 10000				!NOP
C -
 20	CONTINUE
	IF (NVAL.LT.1) GOTO 11000		!CANNOT DO
	VAL(NVAL)=-VAL(NVAL)
	GOTO 10000
C **, ^
 30	CONTINUE
	IF (NVAL.LT.2) GOTO 11000		!CANNOT DO
	J=NINT(ABS(VAL(NVAL)))			!DO ONLY FOR INTEGER EXPONENT
	IF (ABS(VAL(NVAL)).NE.J .OR. J.GT.30) THEN
 31	  CONTINUE
	  NVAL=1				!SET DELETE CODE
	  VAL(NVAL)=CMPLX(NGCDLC,NGCDLC)
	  GOTO 12000
	END IF
	VAL(NVAL-1)=VAL(NVAL-1)**J		!CALCULATE
 32	CONTINUE
	NVAL=NVAL-1
	GOTO 10000
C *
 40	CONTINUE
	IF (NVAL.LT.2) GOTO 11000		!CANNOT DO
	VAL(NVAL-1)=VAL(NVAL-1)*VAL(NVAL)
	GOTO 32
C /
 50	CONTINUE
	IF (NVAL.LT.2) GOTO 11000		!CANNOT DO
	IF (ABS(VAL(NVAL)).GT.1.E-20) THEN
	  VAL(NVAL-1)=VAL(NVAL-1)/VAL(NVAL)
	ELSE
	  VAL(NVAL-1)=CMPLX(1.,0.)
	END IF
	GOTO 32
C +
 60	CONTINUE
	IF (NVAL.LT.2) GOTO 11000		!CANNOT DO
	VAL(NVAL-1)=VAL(NVAL-1)+VAL(NVAL)
	GOTO 32
C -
 70	CONTINUE
	IF (NVAL.LT.2) GOTO 11000		!CANNOT DO
	VAL(NVAL-1)=VAL(NVAL-1)-VAL(NVAL)
	GOTO 32
C >=
 80	CONTINUE
	IF (NVAL.LT.2) GOTO 11000		!CANNOT DO
	IF (ABS(VAL(NVAL-1)).GE.ABS(VAL(NVAL))) THEN
	  VAL(NVAL-1)=CMPLX(1.,0.)
	ELSE
	  VAL(NVAL-1)=CMPLX(0.,0.)
	END IF
	GOTO 32
C <=
 90	CONTINUE
	IF (NVAL.LT.2) GOTO 11000		!CANNOT DO
	IF (ABS(VAL(NVAL-1)).LE.ABS(VAL(NVAL))) THEN
	  VAL(NVAL-1)=CMPLX(1.,0.)
	ELSE
	  VAL(NVAL-1)=CMPLX(0.,0.)
	END IF
	GOTO 32
C =
 100	CONTINUE
	IF (NVAL.LT.2) GOTO 11000		!CANNOT DO
	IF (ABS(VAL(NVAL-1)).EQ.ABS(VAL(NVAL))) THEN
	  VAL(NVAL-1)=CMPLX(1.,0.)
	ELSE
	  VAL(NVAL-1)=CMPLX(0.,0.)
	END IF
	GOTO 32
C <
 110	CONTINUE
	IF (NVAL.LT.2) GOTO 11000		!CANNOT DO
	IF (ABS(VAL(NVAL-1)).LT.ABS(VAL(NVAL))) THEN
	  VAL(NVAL-1)=CMPLX(1.,0.)
	ELSE
	  VAL(NVAL-1)=CMPLX(0.,0.)
	END IF
	GOTO 32
C >
 120	CONTINUE
	IF (NVAL.LT.2) GOTO 11000		!CANNOT DO
	IF (ABS(VAL(NVAL-1)).GT.ABS(VAL(NVAL))) THEN
	  VAL(NVAL-1)=CMPLX(1.,0.)
	ELSE
	  VAL(NVAL-1)=CMPLX(0.,0.)
	END IF
	GOTO 32
C <>
 130	CONTINUE
	IF (NVAL.LT.2) GOTO 11000		!CANNOT DO
	IF (ABS(VAL(NVAL-1)).NE.ABS(VAL(NVAL))) THEN
	  VAL(NVAL-1)=CMPLX(1.,0.)
	ELSE
	  VAL(NVAL-1)=CMPLX(0.,0.)
	END IF
	GOTO 32
C <> UNARY
 140	CONTINUE
	IF (NVAL.LT.1) GOTO 11000		!CANNOT DO
	IF (ABS(VAL(NVAL)).NE.0.) THEN
	  VAL(NVAL)=CMPLX(0.,0.)
	ELSE
	  VAL(NVAL)=CMPLX(1.,0.)
	END IF
	GOTO 10000
C &
 150	CONTINUE
	IF (NVAL.LT.2) GOTO 11000		!CANNOT DO
	IF (ABS(VAL(NVAL-1)).NE.0. .AND. ABS(VAL(NVAL)).NE.0.) THEN
	  VAL(NVAL-1)=CMPLX(1.,0.)
	ELSE
	  VAL(NVAL-1)=CMPLX(0.,0.)
	END IF
	GOTO 32
C !
 160	CONTINUE
	IF (NVAL.LT.2) GOTO 11000		!CANNOT DO
	IF (ABS(VAL(NVAL-1)).NE.0. .OR. ABS(VAL(NVAL)).NE.0.) THEN
	  VAL(NVAL-1)=CMPLX(1.,0.)
	ELSE
	  VAL(NVAL-1)=CMPLX(0.,0.)
	END IF
	GOTO 32
C PLOT VALUE
 170	CONTINUE
	NVAL=NVAL+1				!GET VALUE
	CDP=CDP+1
	J=COD(CDP)				!# OF PLOT
	VAL(NVAL)=PLOT(J)
	IF (REAL(VAL(NVAL)).EQ.NGCDLC) GOTO 31	!READY
	GOTO 10000
C CONSTANT VALUE
 180	CONTINUE
	NVAL=NVAL+1
	CDP=CDP+1
	CALL WNGMV(LB_E,COD(CDP),R0)		!SET VALUE
	VAL(NVAL)=CMPLX(R0,0.)
	GOTO 10000
C
C FUNCTIONS
C
C ATAN1
 500	CONTINUE
	IF (NVAL.LT.1) GOTO 11000		!CANNOT DO
	IF (VAL(NVAL)*VAL(NVAL).EQ.CMPLX(0.,-1.)) THEN
	  VAL(NVAL)=CMPLX(0.,0.)
	ELSE
	  R0=REAL(VAL(NVAL))
	  R1=AIMAG(VAL(NVAL))
	  VAL(NVAL)=CMPLX(0.5*ATAN2(2*R0,1-R0*R0-R1*R1),
	1		0.25*LOG((R0*R0+(R1+1)**2)/
	1		(R0*R0+(R1-1)**2)))*DEG
	END IF
	GOTO 10000
C ATAN2
 510	CONTINUE
	IF (NVAL.LT.2) GOTO 11000		!CANNOT DO
	IF (ABS(VAL(NVAL-1)).EQ.0. .AND.
	1		ABS(VAL(NVAL)).EQ.0.) THEN
	  VAL(NVAL-1)=CMPLX(0.,0.)
	ELSE IF(ABS(VAL(NVAL)).EQ.0) THEN
	  VAL(NVAL-1)=CMPLX(PI/2.,0.)
	ELSE
	  VAL(NVAL-1)=VAL(NVAL-1)/VAL(NVAL)
	  R0=REAL(VAL(NVAL-1))
	  R1=AIMAG(VAL(NVAL-1))
	  VAL(NVAL-1)=CMPLX(0.5*ATAN2(2*R0,1-R0*R0-R1*R1),
	1		0.25*LOG((R0*R0+(R1+1)**2)/
	1		(R0*R0+(R1-1)**2)))*DEG
	END IF
	GOTO 32
C SIN
 520	CONTINUE
	IF (NVAL.LT.1) GOTO 11000		!CANNOT DO
	VAL(NVAL)=SIN(VAL(NVAL)/DEG)
	GOTO 10000
C COS
 530	CONTINUE
	IF (NVAL.LT.1) GOTO 11000		!CANNOT DO
	VAL(NVAL)=COS(VAL(NVAL)/DEG)
	GOTO 10000
C ASIN
 540	CONTINUE
	IF (NVAL.LT.1) GOTO 11000		!CANNOT DO
	IF (ABS(VAL(NVAL)).GT.1.) THEN
	  GOTO 31				!ILLEGAL
	ELSE
	  VAL(NVAL)=-CMPLX(0.,1.)*
	1		LOG(SQRT(CMPLX(1.,0.)-VAL(NVAL)*VAL(NVAL))+
	1		CMPLX(0.,1.)*VAL(NVAL))*DEG
	END IF
	GOTO 10000
C ACOS
 550	CONTINUE
	IF (NVAL.LT.1) GOTO 11000		!CANNOT DO
	IF (ABS(VAL(NVAL)).GT.1.) THEN
	  GOTO 31				!ILLEGAL
	ELSE
	  VAL(NVAL)=-CMPLX(0.,1.)*
	1		LOG(CMPLX(0.,1.)*
	1			SQRT(CMPLX(1.,0.)-VAL(NVAL)*VAL(NVAL))+
	1		VAL(NVAL))*DEG
	END IF
	GOTO 10000
C EXP
 560	CONTINUE
	IF (NVAL.LT.1) GOTO 11000		!CANNOT DO
	VAL(NVAL)=EXP(VAL(NVAL))
	GOTO 10000
C EXP10
 570	CONTINUE
	IF (NVAL.LT.1) GOTO 11000		!CANNOT DO
	VAL(NVAL)=EXP(VAL(NVAL)*LOG(10.))
	GOTO 10000
C EXP2
 580	CONTINUE
	IF (NVAL.LT.1) GOTO 11000		!CANNOT DO
	VAL(NVAL)=EXP(VAL(NVAL)*LOG(2.))
	GOTO 10000
C LOG
 590	CONTINUE
	IF (NVAL.LT.1) GOTO 11000		!CANNOT DO
	IF (ABS(VAL(NVAL)).LT.1.E-30) THEN
	  GOTO 31				!SET DELETE CODE
	ELSE
	  VAL(NVAL)=LOG(VAL(NVAL))
	END IF
	GOTO 10000
C LOG10
 600	CONTINUE
	IF (NVAL.LT.1) GOTO 11000		!CANNOT DO
	IF (ABS(VAL(NVAL)).LT.1.E-30) THEN
	  GOTO 31				!SET DELETE CODE
	ELSE
	  VAL(NVAL)=LOG(VAL(NVAL))/LOG(10.)
	END IF
	GOTO 10000
C LOG2
 610	CONTINUE
	IF (NVAL.LT.1) GOTO 11000		!CANNOT DO
	IF (ABS(VAL(NVAL)).LT.1.E-30) THEN
	  GOTO 31				!SET DELETE CODE
	ELSE
	  VAL(NVAL)=LOG(VAL(NVAL))/LOG(2.)
	END IF
	GOTO 10000
C PI
 620	CONTINUE
	NVAL=NVAL+1
	VAL(NVAL)=CMPLX(PI,0.)
	GOTO 10000
C EE
 630	CONTINUE
	NVAL=NVAL+1
	VAL(NVAL)=CMPLX(EXP(1.),0.)
	GOTO 10000
C ABS
 640	CONTINUE
	IF (NVAL.LT.1) GOTO 11000		!CANNOT DO
	VAL(NVAL)=ABS(VAL(NVAL))
	GOTO 10000
C FLOOR
 650	CONTINUE
	IF (NVAL.LT.1) GOTO 11000		!CANNOT DO
	VAL(NVAL)=CMPLX(WNMEEF(REAL(VAL(NVAL))),
	1		WNMEEF(AIMAG(VAL(NVAL))))
	GOTO 10000
C CEIL
 660	CONTINUE
	IF (NVAL.LT.1) GOTO 11000		!CANNOT DO
	VAL(NVAL)=CMPLX(WNMEEC(REAL(VAL(NVAL))),
	1		WNMEEC(AIMAG(VAL(NVAL))))
	GOTO 10000
C ROUND
 670	CONTINUE
	IF (NVAL.LT.1) GOTO 11000		!CANNOT DO
	VAL(NVAL)=CMPLX(ANINT(REAL(VAL(NVAL))),
	1		ANINT(AIMAG(VAL(NVAL))))
	GOTO 10000
C INT
 680	CONTINUE
	IF (NVAL.LT.1) GOTO 11000		!CANNOT DO
	VAL(NVAL)=CMPLX(AINT(REAL(VAL(NVAL))),
	1		AINT(AIMAG(VAL(NVAL))))
	GOTO 10000
C FRACT
 690	CONTINUE
	IF (NVAL.LT.1) GOTO 11000		!CANNOT DO
	VAL(NVAL)=VAL(NVAL)-CMPLX(AINT(REAL(VAL(NVAL))),
	1		AINT(AIMAG(VAL(NVAL))))
	GOTO 10000
C REAL
 700	CONTINUE
	IF (NVAL.LT.1) GOTO 11000		!CANNOT DO
	VAL(NVAL)=CMPLX(REAL(VAL(NVAL)),0.)
	GOTO 10000
C IMAG
 710	CONTINUE
	IF (NVAL.LT.1) GOTO 11000		!CANNOT DO
	VAL(NVAL)=CMPLX(AIMAG(VAL(NVAL)),0.)
	GOTO 10000
C AMPL
 720	CONTINUE
	IF (NVAL.LT.1) GOTO 11000		!CANNOT DO
	VAL(NVAL)=CMPLX(ABS(VAL(NVAL)),0.)
	GOTO 10000
C PHASE
 730	CONTINUE
	IF (NVAL.LT.1) GOTO 11000		!CANNOT DO
	IF (REAL(VAL(NVAL)).EQ.0. .AND. AIMAG(VAL(NVAL)).EQ.0.) THEN
	  VAL(NVAL)=CMPLX(0.,0.)
	ELSE
	  VAL(NVAL)=CMPLX(ATAN2(AIMAG(VAL(NVAL)),
	1		REAL(VAL(NVAL)))*DEG,0.)
	END IF
	GOTO 10000
C SQRT
 740	CONTINUE
	IF (NVAL.LT.1) GOTO 11000		!CANNOT DO
	VAL(NVAL)=SQRT(VAL(NVAL))
	GOTO 10000
C HA
 750	CONTINUE
	NVAL=NVAL+1
	VAL(NVAL)=CMPLX(HA,0.)
	GOTO 10000
C UT
 760	CONTINUE
	NVAL=NVAL+1
	VAL(NVAL)=CMPLX(UT,0.)
	GOTO 10000
C IMUL
 770	CONTINUE
	IF (NVAL.LT.1) GOTO 11000		!CANNOT DO
	VAL(NVAL)=VAL(NVAL)*CMPLX(0.,1.)
	GOTO 10000
C CC
 780	CONTINUE
	NVAL=NVAL+1
	VAL(NVAL)=CMPLX(CL/1E6,0.)
	GOTO 10000
C DRAD
 790	CONTINUE
	NVAL=NVAL+1
	VAL(NVAL)=CMPLX(DEG,0.)
	GOTO 10000
C FQ
 800	CONTINUE
	NVAL=NVAL+1
	VAL(NVAL)=CMPLX(FQ,0.)
	GOTO 10000
C BL
 810	CONTINUE
	NVAL=NVAL+1
	VAL(NVAL)=CMPLX(BL,0.)
	GOTO 10000
C UU
 820	CONTINUE
	NVAL=NVAL+1
	VAL(NVAL)=CMPLX(FQ/CL/1E-6*COS(HA/DEG),0.)
	GOTO 10000
C VV
 830	CONTINUE
	NVAL=NVAL+1
	VAL(NVAL)=CMPLX(-FQ/CL/1E-6*SIN(HA/DEG)*SIN(DEC/DEG),0.)
	GOTO 10000
C RA
 840	CONTINUE
	NVAL=NVAL+1
	VAL(NVAL)=CMPLX(RA,0.)
	GOTO 10000
C DEC
 850	CONTINUE
	NVAL=NVAL+1
	VAL(NVAL)=CMPLX(DEC,0.)
	GOTO 10000
C
C
	END

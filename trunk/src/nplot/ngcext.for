C+ NGCEXT.FOR
C  WNB 920819
C
C  Revisions:
C	WNB 930608	New weights/flags
C	HJV 930618	Symbolic names for mask bits in CBITS_O_DEF
C	WNB 930628	Fill baseline/tel. position
C	WNB 930803	CBITS_DEF
C	WNB 930824	Change telescope selection
C	WNB 930825	Add dipole positions; pol. codes
C	WNB 930826	New HA range
C       HjV 940428      Add IFData option
C	CMV 940705	Correct IFData option
C	JPH 940811	Reduce action reporting
C	JPH 940822	Create Group header (moved from ngcdat.for), and create
C			 a new one for every new input group
C			Interferometer index contiguous i.s.o. from input
C       WNB 061023	Change test for telescope (error in Linux)
C
C
	SUBROUTINE NGCEXT
C
C  Extract data from scan file
C
C  Result:
C
C	CALL NGCEXT				Extract data from SCN file,
C						and save in NGF file.
C
C
C  Include files:
C
	INCLUDE 'WNG_DEF'
	INCLUDE 'CBITS_DEF'
	INCLUDE 'NGF_O_DEF'		!PLOT HEADER
	INCLUDE 'GFH_O_DEF'		!GENERAL FILE HEADER
	INCLUDE 'SGH_O_DEF'		!SUB-GROUP HEADER
	INCLUDE 'STH_O_DEF'		!SCAN SET HEADER
	INCLUDE 'SCH_O_DEF'		!SCAN HEADER
	INCLUDE 'NGC_DEF'
C
C  Parameters:
C
C
C  Arguments:
C
C
C  Function references:
C
	LOGICAL WNFOP			!OPEN FILE
	LOGICAL WNFRD			!READ DISK
	LOGICAL WNFWR			!WRITE DISK
	LOGICAL WNGGVA			!GET MEMORY
	INTEGER WNFEOF			!EOF POINTER
	DOUBLE PRECISION WNGDPF
	LOGICAL WNDLNF,WNDLNG,WNDLNK	!LINK DATA SET
	LOGICAL NSCSIF			!GET IFR TABLE
	LOGICAL NSCSTG			!GET NEXT SCAN SET
	LOGICAL NSCSCT			!GET SCAN TEL. CORR.
	LOGICAL NSCSCR			!READ SCAN DATA
	LOGICAL NSCSCM			!READ MODEL DATA
	LOGICAL NSCSCI			!READ IFR DATA
        LOGICAL NSCGIF                  !Read IF data
        LOGICAL NSCGF1                  !Get some data from IF header
C
C  Data declarations:
C
	REAL MODDAT(2,0:STHIFR-1)	!MODEL DATA
	REAL WGT(0:STHIFR-1,0:3)	!DATA WEIGHT
	COMPLEX CDAT(0:STHIFR-1,0:3)	!DATA
	INTEGER*2 IFRT(0:STHIFR-1)	!INTERFEROMETER LIST
	INTEGER IFRA(0:1,0:STHIFR-1)
	REAL ANG(0:2,0:STHIFR-1)
	INTEGER BUFAD			!DATA BUFFER ADDRESS
	INTEGER BLEN			!DATA BUFFER LENGTH
	INTEGER STHP			!SET HEADER POINTER
	INTEGER PTR(0:1)		!PLOT LINK POINTER
	INTEGER POLN,IPOL		!CURRENT POINTERS
	COMPLEX TCOR(0:STHTEL-1,0:1)	!TEL. CORRECTIONS
	REAL IFDATA(0:STHTEL-1,0:1)	!TOTAL POWERS ETC.
	INTEGER SETNAM(0:7)		!SET NAME
	INTEGER UFL			!FLAGS TO DISCARD
	REAL LHA			!LOCAL HA
        REAL HAB,HAI                    !START HA, INCREMENT
        INTEGER NSCN                    !NUMBER OF SCANS
	INTEGER NDONE			!NUMBER OF CUTS MADE
	INTEGER POLCD(0:3)		!POL. CODES
	INTEGER PRVNAM			! PREVIOUS GRP INDEX
	  DATA POLCD/XX_P,XY_P,YX_P,YY_P/
	BYTE NGF(0:NGFHDL-1)		!PLOT HEADER
	  INTEGER*2 NGFI(0:NGFHDL/2-1)
	  INTEGER NGFJ(0:NGFHDL/4-1)
	  REAL NGFE(0:NGFHDL/4-1)
	  CHARACTER*(NGFHDL) NGFC
	  EQUIVALENCE (NGF,NGFC,NGFI,NGFJ,NGFE)
	BYTE STH(0:STHHDL-1)		!SET HEADER
	  INTEGER*2 STHI(0:STHHDL/2-1)
	  INTEGER STHJ(0:STHHDL/4-1)
	  REAL STHE(0:STHHDL/4-1)
	  DOUBLE PRECISION STHD(0:STHHDL/8-1)
	  EQUIVALENCE (STH,STHI,STHJ,STHE,STHD)
	BYTE SCH(0:SCHHDL-1)		!SCAN HEADER
	  INTEGER*2 SCHI(0:SCHHDL/2-1)
	  INTEGER SCHJ(0:SCHHDL/4-1)
	  REAL SCHE(0:SCHHDL/4-1)
	  DOUBLE PRECISION SCHD(0:SCHHDL/8-1)
	  EQUIVALENCE (SCH,SCHI,SCHJ,SCHE,SCHD)
	COMPLEX C0
C-
C
C INIT
C
	CALL WNDDUF(UFL)			!GET UNFLAG DATA
	UFL=IAND(FL_ALL,NOT(UFL))		!SELECTOR
C
C DO SETS
C
	NDONE=0
	PRVNAM=-1
	DO WHILE (NSCSTG(FCAIN,SETS,STH(0),STHP,SETNAM)) !ALL SETS
	  IF (SETNAM(0).NE.PRVNAM) THEN
	    IF (.NOT.WNDLNG(GFH_LINKG_1,0,SGH_GROUPN_1,FCAOUT,
	1		SGPH(0),SGNR(0))) GOTO 10 !CREATE JOB SET
	    PRVNAM=SETNAM(0)
	  ENDIF
	  CALL WNDSTI(FCAIN,SETNAM)		!MAKE SURE PROPER NAME
	  IF (.NOT.WNDLNF(SGPH(0)+SGH_LINKG_1,SETNAM(2),
	1		SGH_GROUPN_1,FCAOUT,SGPH(1),SGNR(1))) THEN !FIELD
 10	    CONTINUE
	    CALL WNCTXT(F_TP,'!/Cannot create sub-group')
	    GOTO 900				!STOP
	  END IF
	  IF (.NOT.WNDLNF(SGPH(1)+SGH_LINKG_1,SETNAM(3),
	1		SGH_GROUPN_1,FCAOUT,SGPH(2),SGNR(2))) GOTO 10 !CHAN.
C
C GET POLARISATION
C
	  POLN=0				!POL. COUNT
 40	  CONTINUE
	  IF (IAND(SPOL,POLCD(POLN)).EQ.0) GOTO 42 !NOT THIS POL.
C
C TELESCOPE TYPE DATA
C
	  CALL WNGMVZ(NGFHDL,NGF)		!ZERO FILE
	  NGFE(NGF_MAX_E)=-1E20			!INIT MAX/MIN
	  NGFE(NGF_MIN_E)=1E20
	  IF (SOPT(1:1).EQ.'T') THEN		!TELESCOPE
	    IF (POLN.EQ.1 .OR. POLN.EQ.2) GOTO 42 !ONLY X,Y
	    IPOL=MOD(POLN,2)
	    IF (.NOT.WNDLNF(SGPH(2)+SGH_LINKG_1,IPOL,
	1		SGH_GROUPN_1,FCAOUT,SGPH(3),SGNR(3))) GOTO 10 !POL.
	    DO I1=1,STHTEL			!FOR ALL TELESCOPES
	      IF (STELS(I1-1).NE..TRUE.) GOTO 44 !DO NOT DO TELESCOPE-wnb061023
	      IF (.NOT.WNDLNF(SGPH(3)+SGH_LINKG_1,I1-1,
	1		SGH_GROUPN_1,FCAOUT,SGPH(4),SGNR(4))) GOTO 10 !TEL.
	      BLEN=STHJ(STH_SCN_J)*LB_X		!LENGTH DATA
	      IF (.NOT.WNGGVA(BLEN,BUFAD)) THEN	!GET BUFFER
		CALL WNCTXT(F_TP,'!/No buffer space')
	        GOTO 900
	      END IF
	      BUFAD=(BUFAD-A_OB)/LB_X		!BUFFER OFFSET
	      HAB=STHE(STH_HAB_E)		!START HA
	      HAI=STHE(STH_HAI_E) 		!HA INCREMENT
	      NSCN=STHJ(STH_SCN_J)
	      IF (IF_MODE.NE.' ') JS=NSCGF1(FCAIN,STH,HAB,HAI,NSCN) !GET FROM IFH
	      DO J=0,NSCN-1			!ALL SCANS
		LHA=HAB+J*HAI			!HA
		IF (IF_MODE.EQ.' ') THEN
		  IF (.NOT.NSCSCT(FCAIN,STH,0,J,CORAP,CORDAP,
	1		SCH,TCOR,R0)) THEN	!READ TEL. CORRECTIONS
		    CALL WNCTXT(F_TP,'!/Error reading scan header')
		    GOTO 900
		  END IF
		  IF (IAND(SCHJ(SCH_BITS_J),UFL).NE.0) THEN
		    C0=CMPLX(NGCDLC,NGCDLC)	!DELETED
		  ELSE
		    C0=EXP(-TCOR(I1-1,IPOL))	!SELECT CORRECTION
		  END IF
	        ELSE				!GET IF DATA
		  IF (.NOT.NSCGIF(IF_MODE,FCAIN,STH,
	1		LHA,LHA,IFDATA)) GOTO 43	!IGNORE SCAN
		  C0=CMPLX(IFDATA(I1-1,IPOL),0.)	!SELECT CORRECTION
		END IF
		CALL WNGMV(LB_X,C0,A_X(BUFAD+J)) !SET BUFFER POINT
		IF (REAL(C0).EQ.NGCDLC) THEN	!DELETED POINT
		  NGFJ(NGF_DEL_J)=NGFJ(NGF_DEL_J)+1
		ELSE
		  NGFE(NGF_MAX_E)=MAX(ABS(C0),NGFE(NGF_MAX_E))
		  NGFE(NGF_MIN_E)=MIN(ABS(C0),NGFE(NGF_MIN_E))
		END IF
 43		CONTINUE
	      END DO				!NEXT SCAN
	      NGFI(NGF_VER_I)=1			!FILL PLOT HEADER	     
	      NGFI(NGF_LEN_I)=NGFHDL
	      CALL WNGMTS(STH_FIELD_N,STH(STH_FIELD_1),
	1		NGFC(NGF_NAM_C+1:NGF_NAM_C+NGF_NAM_N))
	      NGFE(NGF_RA_E)=STHD(STH_RA_D)
	      NGFE(NGF_DEC_E)=STHD(STH_DEC_D)
	      NGFE(NGF_FRQ_E)=STHD(STH_FRQ_D)
	      NGFE(NGF_BDW_E)=STHE(STH_BAND_E)
	      NGFE(NGF_HAB_E)=STHE(STH_HAB_E)
	      NGFE(NGF_HAI_E)=STHE(STH_HAI_E)
	      NGFE(NGF_HAV_E)=STHE(STH_HAV_E)
	      NGFJ(NGF_SCN_J)=STHJ(STH_SCN_J)
	      NGFE(NGF_UTB_E)=MOD(STHD(STH_MJD_D),1D0)
	      NGFE(NGF_UTE_E)=WNGDPF(NGFE(NGF_UTB_E)+
	1		(NGFJ(NGF_SCN_J)-1)*NGFE(NGF_HAI_E)/
	1		STHD(STH_UTST_D))
	      NGFJ(NGF_VNR_J)=STHJ(STH_VNR_J)
	      NGFJ(NGF_BDN_J)=SETNAM(3)
	      NGFC(NGF_IFR_C+1:NGF_IFR_C+NGF_IFR_N)=TELNAM(I1:I1)
	      NGFC(NGF_POL_C+1:NGF_POL_C+NGF_POL_N)=POLNAM(POLN)
	      NGFE(NGF_BLN_E)=STHE(STH_RTP_E+I1-1)
	      NGFI(NGF_ODY_I)=STHI(STH_OBS_I+0)
	      NGFI(NGF_OYR_I)=STHI(STH_OBS_I+1)
	      IF (IF_MODE.EQ.' ') THEN
	        NGFC(NGF_TYP_C+1:NGF_TYP_C+NGF_TYP_N)=SOPT
	      ELSE
	        NGFC(NGF_TYP_C+1:NGF_TYP_C+NGF_TYP_N)=IF_MODE
	      END if
	      J=WNFEOF(FCAOUT)			!OUTPUT POINTER
	      NGFJ(NGF_DPT_J)=J+NGFHDL		!DATA POINTER
		JS=WNFWR(FCAOUT,NGFHDL,NGF,J)	!NEW PLOT HEADER
		IF (JS) JS=WNFWR(FCAOUT,BLEN,
	1		A_X(BUFAD),J+NGFHDL)	!NEW DATA
	        IF (.NOT.JS) GOTO 10		!ERROR
	      CALL WNGFVA(BLEN,BUFAD*LB_X+A_OB)	!RELEASE BUFFER
	      IF (.NOT.WNDLNK(GFH_LINK_1,J,
	1		NGF_SETN_1,FCAOUT)) GOTO 10 !LINK SET
	      IF (.NOT.WNDLNG(SGPH(4)+SGH_LINKG_1,J,
	1		SGH_GROUPN_1,FCAOUT,SGPH(5),SGNR(5))) GOTO 10 !INDEX
	      NDONE=NDONE+1
	      IF (MOD(NDONE,100).EQ.0) CALL NGCSPL(SGNR,NGF,NDONE) !SIGN OF LIFE
 44	      CONTINUE
	    END DO				!NEXT TELESCOPE
C
C IFR TYPE DATA
C
	  ELSE					!IFR
	    IPOL=POLN
	    IF (.NOT.WNDLNF(SGPH(2)+SGH_LINKG_1,IPOL,
	1		SGH_GROUPN_1,FCAOUT,SGPH(3),SGNR(3))) GOTO 10 !POL.
	    IF (.NOT.NSCSIF(FCAIN,STH,IFRT,IFRA,ANG)) THEN
	      CALL WNCTXT(F_TP,'!/Error reading interferometer table')
	      GOTO 900
	    END IF
	    I2=0				! output IFR index
	    DO I1=1,STHJ(STH_NIFR_J)		!FOR ALL IFRS
	      IF (.NOT.SIFR(IFRA(0,I1-1),IFRA(1,I1-1))) GOTO 54 !NOT THIS IFR
	      IF (.NOT.WNDLNF(SGPH(3)+SGH_LINKG_1,I2,
	1		SGH_GROUPN_1,FCAOUT,SGPH(4),SGNR(4))) GOTO 10 !IFR.
	      I2=I2+1
	      BLEN=STHJ(STH_SCN_J)*LB_X		!LENGTH DATA
	      IF (.NOT.WNGGVA(BLEN,BUFAD)) THEN	!GET BUFFER
		CALL WNCTXT(F_TP,'!/No buffer space')
	        GOTO 900
	      END IF
	      BUFAD=(BUFAD-A_OB)/LB_X		!BUFFER OFFSET
	      DO J=0,STHJ(STH_SCN_J)-1		!ALL SCANS
		IF (SOPT(1:1).EQ.'D') THEN	!DATA
		  IF (.NOT.NSCSCR(FCAIN,STH,IFRT,J,CORAP,CORDAP,
	1			SCH,WGT,CDAT)) THEN !READ DATA
 51		    CONTINUE
		    CALL WNCTXT(F_TP,'!/Error reading scan data')
		    GOTO 900
		  END IF
		ELSE IF (SOPT(1:1).EQ.'M') THEN	!MODEL
		  IF (.NOT.NSCSCM(FCAIN,STH,IFRT,J,CORAP,CORDAP,
	1			SCH,WGT,CDAT)) GOTO 51 !READ MODEL
		ELSE IF (SOPT(1:1).EQ.'W') THEN	!WEIGHT
		  IF (.NOT.NSCSCR(FCAIN,STH,IFRT,J,CORAP,CORDAP,
	1			SCH,WGT,CDAT)) GOTO 51 !READ DATA
		ELSE				!IFR CORRECTIONS
		  IF (.NOT.NSCSCI(FCAIN,STH,IFRT,J,CORAP,CORDAP,
	1			SCH,WGT,CDAT)) GOTO 51 !READ IFR CORR.
		END IF
		IF (IAND(SCHJ(SCH_BITS_J),UFL).NE.0) THEN
		  C0=CMPLX(NGCDLC,NGCDLC)	!DELETED
		ELSE IF (SOPT(1:1).EQ.'D') THEN
		  IF (WGT(I1-1,IPOL).LE.0) THEN
		    C0=CMPLX(NGCDLC,NGCDLC)	!DELETED
		  ELSE
		    C0=CDAT(I1-1,IPOL)
		  END IF
		ELSE IF (SOPT(1:1).EQ.'M') THEN	!MODEL
		  C0=-CDAT(I1-1,IPOL)
		ELSE IF (SOPT(1:1).EQ.'W') THEN	!WEIGHT
		  IF (WGT(I1-1,IPOL).LE.0) THEN
		    C0=CMPLX(NGCDLC,NGCDLC)	!DELETED
		  ELSE
		    C0=CMPLX(WGT(I1-1,IPOL),0.)
		  END IF
		ELSE				!IFR CORRECTIONS
		  C0=CDAT(I1-1,IPOL)
		END IF
		CALL WNGMV(LB_X,C0,A_X(BUFAD+J)) !SET BUFFER POINT
		IF (REAL(C0).EQ.NGCDLC) THEN	!DELETED POINT
		  NGFJ(NGF_DEL_J)=NGFJ(NGF_DEL_J)+1
		ELSE
		  NGFE(NGF_MAX_E)=MAX(ABS(C0),NGFE(NGF_MAX_E))
		  NGFE(NGF_MIN_E)=MIN(ABS(C0),NGFE(NGF_MIN_E))
		END IF
	      END DO				!NEXT SCAN
	      NGFI(NGF_VER_I)=1			!FILL PLOT HEADER	     
	      NGFI(NGF_LEN_I)=NGFHDL
	      CALL WNGMTS(STH_FIELD_N,STH(STH_FIELD_1),
	1		NGFC(NGF_NAM_C+1:NGF_NAM_C+NGF_NAM_N))
	      NGFE(NGF_RA_E)=STHD(STH_RA_D)
	      NGFE(NGF_DEC_E)=STHD(STH_DEC_D)
	      NGFE(NGF_FRQ_E)=STHD(STH_FRQ_D)
	      NGFE(NGF_BDW_E)=STHE(STH_BAND_E)
	      NGFE(NGF_HAB_E)=STHE(STH_HAB_E)
	      NGFE(NGF_HAI_E)=STHE(STH_HAI_E)
	      NGFE(NGF_HAV_E)=STHE(STH_HAV_E)
	      NGFJ(NGF_SCN_J)=STHJ(STH_SCN_J)
	      NGFE(NGF_UTB_E)=MOD(STHD(STH_MJD_D),1D0)
	      NGFE(NGF_UTE_E)=WNGDPF(NGFE(NGF_UTB_E)+
	1		(NGFJ(NGF_SCN_J)-1)*NGFE(NGF_HAI_E)/
	1		STHD(STH_UTST_D))
	      NGFJ(NGF_VNR_J)=STHJ(STH_VNR_J)
	      NGFJ(NGF_BDN_J)=SETNAM(3)
	      NGFC(NGF_IFR_C+1:NGF_IFR_C+NGF_IFR_N)=
	1		TELNAM(IFRA(0,I1-1)+1:IFRA(0,I1-1)+1)//
	1		TELNAM(IFRA(1,I1-1)+1:IFRA(1,I1-1)+1)
	      NGFC(NGF_POL_C+1:NGF_POL_C+NGF_POL_N)=POLNAM(POLN)
	      NGFE(NGF_BLN_E)=STHE(STH_RTP_E+IFRA(1,I1-1))-
	1		STHE(STH_RTP_E+IFRA(0,I1-1))
	      NGFI(NGF_ODY_I)=STHI(STH_OBS_I+0)
	      NGFI(NGF_OYR_I)=STHI(STH_OBS_I+1)
	      NGFC(NGF_TYP_C+1:NGF_TYP_C+NGF_TYP_N)=SOPT
	      J=WNFEOF(FCAOUT)			!OUTPUT POINTER
	      NGFJ(NGF_DPT_J)=J+NGFHDL		!DATA POINTER
		JS=WNFWR(FCAOUT,NGFHDL,NGF,J)	!NEW PLOT HEADER
		IF (JS) JS=WNFWR(FCAOUT,BLEN,
	1		A_X(BUFAD),J+NGFHDL)	!NEW DATA
	        IF (.NOT.JS) GOTO 10		!ERROR
	      CALL WNGFVA(BLEN,BUFAD*LB_X+A_OB)	!RELEASE BUFFER
	      IF (.NOT.WNDLNK(GFH_LINK_1,J,
	1		NGF_SETN_1,FCAOUT)) GOTO 10 !LINK SET
	      IF (.NOT.WNDLNG(SGPH(4)+SGH_LINKG_1,J,
	1		SGH_GROUPN_1,FCAOUT,SGPH(5),SGNR(5))) GOTO 10 !INDEX
	      NDONE=NDONE+1
	      IF (MOD(NDONE,100).EQ.0) CALL NGCSPL(SGNR,NGF,NDONE) !SIGN OF LIFE
 54	      CONTINUE
	    END DO				!NEXT IFR
	  END IF
C
 42	  CONTINUE
	  POLN=POLN+1				!NEXT POL
	  IF (POLN.LT.4) GOTO 40
	END DO					!NEXT SET
	CALL WNCTXT(F_T,'!UJ cuts created',NDONE)
C
 900	CONTINUE
	CALL WNFCL(FCAIN)			!CLOSE INPUT
C
	RETURN
C
C
	END

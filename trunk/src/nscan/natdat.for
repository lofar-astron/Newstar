C+ NATDAT.FOR
C  WNB 920428
C
C  Revisions:
C	WNB 921028	Add SOURCES, BANDS, CHANNELS, INTEGRATION
C	WNB 921104	Some ease of use if files
C	WNB 921123	Add Continuum and start time
C	HjV 930423	Change name of some keywords
C	CMV 940808	Add call to WNFMLI to list tape definitions
C	CMV 940926	Close old file before asking new one
C       HjV 941128	Initialize NIFS to select all interf. Until now 
C       		they are not asked anywhere but tested in NATLOD.FOR
C
	SUBROUTINE NATDAT
C
C  Get NATNF program parameters
C
C  Result:
C
C	CALL NATDAT	will ask and set all program parameters
C
C PIN references:
C
C	OPTION
C	INPUT_UNIT
C	INPUT_FILE
C	INPUT_LABELS
C	INPUT_SOURCES
C	INPUT_BANDS
C	INPUT_CHANNELS
C	INTEGRATION_TIME
C	START_OFFSET
C	CONTINUUM
C	OUTPUT_SCN_NODE
C
C  Include files:
C
	INCLUDE 'WNG_DEF'
	INCLUDE 'NAT_DEF'
C
C  Parameters:
C
C
C  Arguments:
C
C
C  Function references:
C
	LOGICAL WNDPAR			!GET DWARF PARAMETER
	LOGICAL WNDNOD			!GET NODE NAME
	LOGICAL WNFMOU			!MOUNT TAPE
	LOGICAL WNFOP			!OPEN FILE
	CHARACTER*80 WNFTVL		!GET VOLUME HEADER
C
C  Data declarations:
C
	CHARACTER*80 VOLHD		!VOLUME HEADER
	CHARACTER*160 FILOUT		!OUTPUT FILE NAME
C-
C
C SET DEFAULTS
C
	UNIT='""'
	IFILE(0)='""'
	NODOUT=' '
	NLAB(1)=0
	NSRC(1)=0
	NBND(1)=0
	NCHN(1)=0
	NFSRC=0
C
C GET INTERFEROMETERS
C    Until now (941128) there wasn't a question to specify which 
C    interferometers one wants to use, so assume * (which gives value -1)
C    See NATLOD.FOR: IF (NIFS(I1).GE.0) THEN
C
	DO I=1,MXNIFR
	  NIFS(I)=-1
	END DO
C
C GET OPTION
C
 100	CONTINUE
	IF (.NOT.WNDPAR('OPTION',OPTION,LEN(OPTION),J0,'QUIT')) THEN
	  OPTION='QUIT'				!ASSUME END
	ELSE IF (J0.LE.0) THEN
	  OPTION='QUIT'				!ASSUME END
	END IF
C
C LOAD RPFITS
C
	IF (OPT.EQ.'LOA') THEN			!LOAD RPFITS
 10	  CONTINUE
	  IF (.NOT.WNDPAR('INPUT_UNIT',UNIT,LEN(UNIT),J0,UNIT)) THEN !GET UNIT
	    IF (E_C.EQ.DWC_ENDOFLOOP) GOTO 100	!RETRY OPTION
	    GOTO 10				!REPEAT
	  ELSE IF (E_C.EQ.DWC_WILDCARD) THEN	!LIST TAPEUNITS AND RETRY
	    CALL WNFMLI()
	    GOTO 10
	  ELSE IF (J0.EQ.0) THEN
	    GOTO 100				!RETRY OPTION
	  ELSE IF (J0.LT.0) THEN
	    GOTO 10				!MUST SPECIFY
	  END IF
	  IF (UNIT.EQ.'D') THEN			!DISK INPUT
 11	    CONTINUE
	    IF (.NOT.WNDPAR('INPUT_FILE',IFILE(0),LEN(IFILE(0)),
	1		J0,IFILE(0))) THEN
	      IF (E_C.EQ.DWC_ENDOFLOOP) GOTO 10	!RETRY UNIT
	      GOTO 11				!REPEAT
	    ELSE IF (J0.EQ.0) THEN
	      GOTO 10				!RETRY UNIT
	    ELSE IF (J0.LT.0) THEN
	      GOTO 11				!MUST SPECIFY
	    END IF
	  ELSE					!TAPE INPUT
	    IF (.NOT.WNFMOU(IMCA,UNIT,'R')) THEN !MOUNT TAPE
	      CALL WNCTXT(F_TP,'Cannot mount tape on unit !AS (!XJ)'
	1			,UNIT,E_C)
	      GOTO 10				!RETRY UNIT
	    END IF
	    VOLHD=WNFTVL(IMCA)			!GET VOLUME HEADER
	    IF (VOLHD(1:4).EQ.'VOL1') THEN
	      CALL WNCTXT(F_TP,'!/Volume !AS mounted on unit !AS!/',
	1			VOLHD(5:10),UNIT)
	    ELSE
	      CALL WNCTXT(F_TP,'!/Unlabeled tape mounted on unit !AS!/',
	1			UNIT)
	    END IF
	  END IF
 30	  CONTINUE
	  CALL WNFCL(FCAOUT)
	  IF (.NOT.WNDNOD('OUTPUT_SCN_NODE',NODOUT,'SCN','U',NODOUT,
	1			FILOUT)) THEN
	    IF (E_C.EQ.DWC_ENDOFLOOP) GOTO 10	!RETRY UNIT
	    GOTO 30				!REPEAT
	  ELSE IF (E_C.EQ.DWC_NULLVALUE) THEN
	    GOTO 10				!RETRY UNIT
	  ELSE IF (E_C.EQ.DWC_WILDCARD) THEN
	    GOTO 30				!MUST SPECIFY
	  END IF
	  IF (.NOT.WNFOP(FCAOUT,FILOUT,'U')) THEN !OPEN OUTPUT SCAN FILE
	    GOTO 30				!RETRY
	  END IF
C
C GET INTEGRATION TIME
C
 23	  CONTINUE
	  IF (.NOT.WNDPAR('INTEGRATION_TIME',INTTIM,LB_E,
	1		J0,'60.')) THEN
	    IF (E_C.EQ.DWC_ENDOFLOOP) GOTO 10	!RETRY JOB
	    GOTO 23				!RETRY
	  END IF
	  IF (J0.EQ.0) GOTO 10			!RETRY JOB
	  IF (J0.LT.0) INTTIM=60.		!DEFAULT
C
C GET START TIME
C
 24	  CONTINUE
	  IF (.NOT.WNDPAR('START_OFFSET',INTOFF,LB_E,
	1		J0,'0.')) THEN
	    IF (E_C.EQ.DWC_ENDOFLOOP) GOTO 23	!RETRY JOB
	    GOTO 24				!RETRY
	  END IF
	  IF (J0.EQ.0) GOTO 23			!RETRY JOB
	  IF (J0.LT.0) INTOFF=0.		!DEFAULT
C
C GET CONTINUUM DEFINITION
C
 25	  CONTINUE
	  IF (.NOT.WNDPAR('CONTINUUM',CONTIN(1),MXNCNT*2*LB_J,
	1		CONTIN(0),'*')) THEN
	    IF (E_C.EQ.DWC_ENDOFLOOP) GOTO 23	!RETRY JOB
	    GOTO 25				!RETRY
	  END IF
C
C GET JOBS
C
	  NJOB=0				!# OF JOBS
 15	  CONTINUE
	  IF (NJOB.GE.MXNJOB) GOTO 900		!NO MORE
	  NJOB=NJOB+1
	  IFILE(NJOB)=IFILE(NJOB-1)		!COPY FILE NAME
	  CALL WNCTXT(F_TP,'!/Specify parameters for job !UJ\:!/',NJOB)
 14	  CONTINUE
	  IF (UNIT.EQ.'D' .AND. INDEX(IFILE(NJOB),'.').GT.0) THEN !EXTENSION
	    IF (NJOB.EQ.1) THEN
	      JS=WNDPAR('INPUT_FILE',IFILE(NJOB),LEN(IFILE(NJOB)),
	1		J0,IFILE(NJOB))
	    ELSE
	      JS=WNDPAR('INPUT_FILE',IFILE(NJOB),LEN(IFILE(NJOB)),
	1		J0,'""')
	    END IF
	    IF (.NOT.JS) THEN
	      IF (E_C.EQ.DWC_ENDOFLOOP) THEN
	        NJOB=NJOB-1			!NO MORE JOBS
	        GOTO 900
	      END IF
	      GOTO 14				!REPEAT
	    ELSE IF (J0.EQ.0) THEN
	      NJOB=NJOB-1			!NO MORE JOBS
	      GOTO 900
	    ELSE IF (J0.LT.0) THEN
	      GOTO 14				!MUST SPECIFY
	    END IF
	  END IF
	  IF (UNIT.NE.'D' .OR. INDEX(IFILE(NJOB),'.').EQ.0) THEN !NO EXT.
	    IF (NLAB(NJOB).LE.0) THEN		!DEFAULTS
	      IF (NJOB.EQ.1) THEN
	        JS=WNDPAR('INPUT_LABELS',ILAB(1,NJOB),
	1			MXNLAB*LB_J,NLAB(NJOB),'*')
	      ELSE
	        JS=WNDPAR('INPUT_LABELS',ILAB(1,NJOB),
	1			MXNLAB*LB_J,NLAB(NJOB),'""')
	      END IF
	    ELSE
	      JS=WNDPAR('INPUT_LABELS',ILAB(1,NJOB),
	1			MXNLAB*LB_J,NLAB(NJOB),
	1			A_B(-A_OB),ILAB(1,NJOB),NLAB(NJOB))
	    END IF
	    IF (.NOT.JS) THEN
	      IF (E_C.EQ.DWC_ENDOFLOOP) THEN	!READY
	        NJOB=NJOB-1			!NO MORE JOBS
	        GOTO 900
	      END IF
	      GOTO 14				!RETRY
	    END IF
	    IF (NLAB(NJOB).EQ.0) THEN		!READY
	      NJOB=NJOB-1
	      GOTO 900
	    END IF
	    IF (NJOB.LT.MXNJOB) THEN		!DEFAULTS FOR NEXT
	      NLAB(NJOB+1)=0
	      NSRC(NJOB+1)=0
	      NCHN(NJOB+1)=0
	      NBND(NJOB+1)=0
	    END IF
	  END IF
C
C GET SOURCES
C
 20	  CONTINUE
	  IF (NSRC(NJOB).LE.0) THEN		!DEFAULTS
	    JS=WNDPAR('INPUT_SOURCES',ISRC(1,NJOB),MXNSRC*MXLSRC,
	1		NSRC(NJOB),'*')
	  ELSE
	    JS=WNDPAR('INPUT_SOURCES',ISRC(1,NJOB),MXNSRC*MXLSRC,
	1		NSRC(NJOB),A_B(-A_OB),ISRC(1,NJOB),NSRC(NJOB))
	  END IF
	  IF (.NOT.JS) THEN
	    IF (E_C.EQ.DWC_ENDOFLOOP) GOTO 14	!RETRY JOB
	    GOTO 20				!RETRY
	  END IF
	  IF (NSRC(NJOB).EQ.0) GOTO 14		!RETRY JOB
C
C GET BANDS
C
 21	  CONTINUE
	  IF (NBND(NJOB).LE.0) THEN		!DEFAULTS
	    JS=WNDPAR('INPUT_BANDS',IBND(1,NJOB),MXNBND*LB_E,
	1		NBND(NJOB),'*')
	  ELSE
	    JS=WNDPAR('INPUT_BANDS',IBND(1,NJOB),MXNBND*LB_E,
	1		NBND(NJOB),A_B(-A_OB),IBND(1,NJOB),NBND(NJOB))
	  END IF
	  IF (.NOT.JS) THEN
	    IF (E_C.EQ.DWC_ENDOFLOOP) GOTO 14	!RETRY JOB
	    GOTO 21				!RETRY
	  END IF
	  IF (NBND(NJOB).EQ.0) GOTO 14		!RETRY JOB
C
C GET CHANNELS
C
 22	  CONTINUE
	  IF (NCHN(NJOB).LE.0) THEN		!DEFAULTS
	    JS=WNDPAR('INPUT_CHANNELS',ICHN(1,NJOB),MXNCHN*LB_J,
	1		NCHN(NJOB),'*')
	  ELSE
	    JS=WNDPAR('INPUT_CHANNELS',ICHN(1,NJOB),MXNCHN*LB_J,
	1		NCHN(NJOB),A_B(-A_OB),ICHN(1,NJOB),NCHN(NJOB))
	  END IF
	  IF (.NOT.JS) THEN
	    IF (E_C.EQ.DWC_ENDOFLOOP) GOTO 14	!RETRY JOB
	    GOTO 22				!RETRY
	  END IF
	  IF (NCHN(NJOB).EQ.0) GOTO 14		!RETRY JOB
C
C MORE JOBS
C
	  GOTO 15				!MORE JOBS
	END IF
C

 900	CONTINUE
	RETURN					!READY
C
C
	END

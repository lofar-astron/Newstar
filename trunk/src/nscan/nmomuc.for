C+ NMOMUC.FOR
C  WNB 900903
C
C  Revisions:
C	WNB 910802	Add MU1
C	WNB 911007	Add instrumental polarisation
C	WNB 920626	Change sign of Rot. measure
C	WNB 930127	Change sign spectral index
C	WNB 930819	Always calculate 4 polarisations; remove L_
C	WNB 931006	Text
C	WNB 931008	Add BEAMing
C	WNB 931019	Change where I beamed
C
	SUBROUTINE NMOMUC(IDX,UV0,LM0,FRQ0,RTP,NPOL,NIFR,IFR,TF,
	1			MINST,CMOD)
C
C  Calculate model
C
C  Result:
C
C	CALL NMOMUC( IDX_J:I, UV0_E(0:3):I, LM0_E(0:1):I, FRQ0_D:I,
C			RTP_E(0:*), NPOL_J:I, NIFR_J:I, IFR_I(0:*):I,
C			TF_E(0:1):I, MINST_J:I, CMOD_X(0:3,0:*):O)
C				Calculate model fringes in CMOD for all
C				specified NIFR's as detailed in interferometer
C				list IFR for a model in the GMDH list with
C				index IDX, and 4 polarisations.
C				RTP are the telescope positions (m),
C				LM0 the l,m offsets (rad),
C				FRQ0 the the frequency of the model (MHz),
C				TF the integration time (fractions) and
C				the bandwidth (MHz).
C				and UV0 the UV coordinates for a baseline
C				of 1 m (resp. cos(t), -sin(t).sin(dec),
C				cos(t).sin(dec), -sin(t)) in wavelengths*2*pi.
C				MINST the instrument
C	CALL NMOMUA( ...)
C				Add model to CMOD
C	CALL NMOMU1( ..., NMDL_J:I)
C				Calculate for source number NMDL only
C
C  Include files:
C
	INCLUDE 'WNG_DEF'
	INCLUDE 'NMO_DEF'
	INCLUDE 'MDH_O_DEF'		!MODEL HEADER
	INCLUDE 'MDL_O_DEF'		!MODEL LINE
	INCLUDE 'STH_O_DEF'		!SET HEADER
C
C  Parameters:
C
C
C  Arguments:
C
	INTEGER IDX			!MODEL LIST INDEX
	REAL UV0(0:3)			!UV COORDINATES
	REAL LM0(0:1)			!LM OFFSETS
	DOUBLE PRECISION FRQ0		!FREQUENCY
	REAL RTP(0:*)			!TEL. POSITIONS
	INTEGER NPOL			!# OF POL. (NOT USED ANYMORE)
	INTEGER NIFR			!# OF INTERFEROMETERS
	INTEGER*2 IFR(0:*)		!INTERFEROMETERS
	REAL TF(0:1)			!INTEGR. TIME, BANDWIDTH
	INTEGER MINST			!INSTRUMENT
	COMPLEX CMOD(0:3,0:*)		!CALCULATED MODEL (I,Q,U,V)
	INTEGER NMDL			!SOURCE TO CALCULATE
C
C  Function references:
C
	LOGICAL NMOBMF			!GET BEAM RANGE
	DOUBLE PRECISION NMOBMV		!GET BEAM VALUE
C
C  Data declarations:
C
	INTEGER SRC1,SRC2		!SOURCES TO DO
	INTEGER IFL(0:STHIFR-1),IFH(0:STHIFR-1) !LOW/HIGH TEL.
	INTEGER PB,PJ,PE		!ARRAY POINTERS SOURCE
	INTEGER TBIT,TCC		!MODEL TYPES
	REAL SRCAM			!AMPLITUDE
	REAL RL1(0:STHTEL-1),RL2(0:STHTEL-1), !SAVE TEL. DATA
	1	RL3(0:STHTEL-1),RL4(0:STHTEL-1),RL5(0:STHTEL-1),
	1	RL6(0:STHTEL-1),RL7(0:STHTEL-1),RL8(0:STHTEL-1)
	REAL RP1(0:2)			!INSTRUM. POL
	INTEGER F0			!INPOL FREQ.
	COMPLEX CX(0:STHTEL-1)		!SIMPLE MODEL
	REAL R2,R3,R4
C-
C
C CLEAR SOURCES
C
	CALL WNGMVZ(4*NIFR*LB_X,CMOD)			!CLEAR MODEL
	GOTO 10
C
C ADD SOURCES
C
	ENTRY NMOMUA(IDX,UV0,LM0,FRQ0,RTP,NPOL,NIFR,IFR,TF,
	1		MINST,CMOD)
C
	GOTO 10
C
C ONE SOURCE ONLY
C
	ENTRY NMOMU1(IDX,UV0,LM0,FRQ0,RTP,NPOL,NIFR,IFR,TF,
	1		MINST,CMOD,NMDL)
C
	CALL WNGMVZ(4*NIFR*LB_X,CMOD)			!CLEAR MODEL
	SRC1=NMDL					!START SOURCE
	SRC2=NMDL					!END SOURCE
	GOTO 11
C
C SET SOURCE RANGE
C
 10	CONTINUE
	SRC1=0
	SRC2=GMDHJ(MDH_NSRC_J,IDX)-1
 11	CONTINUE
C
C GET IFR POINTERS
C
	DO I=0,NIFR-1
	  IFL(I)=MOD(IFR(I),256)			!LOW TEL. (WEST)
	  IFH(I)=IFR(I)/256				!HIGH TEL. (EAST)
	END DO
C
C INSTRUM. POL. FREQUENCY
C
	IF (IAND(MODACT,NMO_IPO).NE.0) THEN		!ASKED INPOL
	  DO I1=0,6					!FIND FREQUENCY
	    IF (FRQ0.LT.INPOLF(I1)) THEN
	      F0=I1					!FOUND
	      GOTO 20
	    END IF
	  END DO
	  F0=6
 20	  CONTINUE
	END IF
C
C ALL SOURCES
C
	DO I=SRC1,SRC2
	  PB=GMDHJ(MDH_MODP_J,IDX)+I*MDL__L-A_OB	!ARRAY PTR SOURCE
	  PJ=PB/LB_J
	  PE=PB/LB_E
	  TBIT=A_B(PB+MDL_BITS_B)			!BITS
	  TCC=A_B(PB+MDL_TP_B)				!CLEAN TYPE
	  SRCAM=A_E(PE+MDL_I_E)				!AMPLITUDE
C
C DO BEAMING
C
	  IF (IAND(MODACT,NMO_BEA).NE.0) THEN		!BEAMING REQUESTED
	    IF (IAND(TCC,MDLBEM_M).EQ.0) THEN		!BEAM FIRST
	      IF (NMOBMF(IAND(MDHINS_M,GMDHJ(MDH_BITS_J,IDX)),
	1		GMDHD(MDH_FRQ_D,IDX))) THEN		!CAN DO
		R0=NMOBMV(GMDHD(MDH_FRQ_D,IDX),A_E(PE+MDL_L_E),
	1		A_E(PE+MDL_M_E),BEMLIM,.FALSE.)	!GET FACTOR
		SRCAM=R0*SRCAM				!BEAM INTENSITY
	      END IF
	    END IF
	    IF (NMOBMF(MINST,FRQ0)) THEN		!CAN CORRECT
	      R0=NMOBMV(FRQ0,A_E(PE+MDL_L_E),
	1		A_E(PE+MDL_M_E),BEMLIM,.TRUE.)	!GET FACTOR
		SRCAM=R0*SRCAM				!DE-BEAM INTENSITY
	    END IF
	  END IF					!BEAMING
C
C GET TELESCOPE DATA
C
	  R0=UV0(0)*(A_E(PE+MDL_L_E)-LM0(0))+
	1		UV0(1)*(A_E(PE+MDL_M_E)-LM0(1))	!SRC PHASE
	  IF (IAND(MDLCLN_M,TCC).EQ.0) THEN		!NOT CLEAN COMPONENT
	    IF (IAND(MODACT,NMO_BAN).NE.0) R2=R0*(TF(1)/2/FRQ0) !BANDWIDTH SMEAR
	    IF (IAND(MODACT,NMO_TIM).NE.0) R1=PI*TF(0)*
	1		(UV0(3)*(A_E(PE+MDL_L_E)-LM0(0))-
	1		UV0(2)*(A_E(PE+MDL_M_E)-LM0(1))) !TIME SMEARING
	  END IF
	  DO I1=0,STHTEL-1				!ALL TELESCOPES
	    R3=RTP(I1)*R0				!TRUE PHASE
	    CX(I1)=CMPLX(COS(R3),SIN(R3))		!SIMPLE MODEL
	    IF (IAND(MDLCLN_M,TCC).EQ.0) THEN		!NOT CLEAN COMPONENT
	      IF (IAND(MODACT,NMO_TIM).NE.0) THEN	!TIME SMEARING
		R3=RTP(I1)*R1
		RL1(I1)=SIN(R3)				!SAVE DATA
		RL2(I1)=COS(R3)
		RL5(I1)=R3
	      END IF
	      IF (IAND(MODACT,NMO_BAN).NE.0) THEN	!BAND SMEARING
		R3=RTP(I1)*R2
		RL3(I1)=SIN(R3)
		RL4(I1)=COS(R3)
		RL6(I1)=R3
	      END IF
	      IF (IAND(1,TBIT).NE.0) THEN		!EXTENDED
		RL7(I1)=RTP(I1)*UV0(0)			!U
		RL8(I1)=RTP(I1)*UV0(1)			!V
	      END IF
	    END IF					!END CLEAN
	  END DO					!END TEL
C
C INSTRUM. POL.
C
	  IF (IAND(MODACT,NMO_IPO).NE.0) THEN		!INSTRUM. POL
	    R0=SQRT((A_E(PE+MDL_L_E)-LM0(0))**2+
	1		(A_E(PE+MDL_M_E)-LM0(1))**2)*DEG*FRQ0 !RADIUS
	    R1=ATAN2(-A_E(PE+MDL_L_E)+LM0(0),
	1		A_E(PE+MDL_M_E)-LM0(1))		!ANGLE
	    DO I1=0,2					!Q,U,V
	      RP1(I1)=INPOL(0,I1,F0)*SIN(INPOL(1,I1,F0)*R0)**2+
	1		(INPOL(2,I1,F0)*SIN(INPOL(3,I1,F0)*R0)**2)*
	1		(INPOL(6,I1,F0)*SIN(R1)+INPOL(7,I1,F0)*COS(R1))+
	1		(INPOL(0,I1,F0)*SIN(INPOL(5,I1,F0)*R0)**2)*
	1		(INPOL(8,I1,F0)*SIN(2*R1)+INPOL(9,I1,F0)*COS(2*R1))
	    END DO
	  END IF
C
C ALL BASELINES
C
	  DO I1=0,NIFR-1
	    J2=IFH(I1)					!TEL. POINTER (EAST)
	    J1=IFL(I1)					! (WEST)
	    R4=SRCAM					!AMPLITUDE
	    IF (IAND(MDLCLN_M,TCC).EQ.0) THEN		!NOT CLEAN COMPONENT
	      IF (IAND(MODACT,NMO_TIM).NE.0) THEN	!TIME SMEARING
		R0=RL5(J1)-RL5(J2)
		IF (R0.NE.0) THEN
		  R4=R4*(RL1(J2)*RL2(J1)-RL2(J2)*RL1(J1))/R0
		END IF
	      END IF
	      IF (IAND(MODACT,NMO_BAN).NE.0) THEN	!BAND SMEARING
		R1=RL6(J1)-RL6(J2)
		IF (R1.NE.0) R4=R4*(RL3(J2)*RL4(J1)-RL4(J2)*RL3(J1))/R1
	      END IF
	      IF (IAND(1,TBIT).NE.0) THEN		!EXTENDED
		R0=RL7(J2)-RL7(J1)			!U
		R1=RL8(J2)-RL8(J1)			!V
		R4=R4*EXP(-A_E(PE+MDL_EXT_E+0)*R0*R0-
	1		A_E(PE+MDL_EXT_E+1)*R1*R1-
	1		A_E(PE+MDL_EXT_E+2)*R0*R1)
	      END IF
	    END IF					!END CLEAN COMP.
	    IF (A_E(PE+MDL_SI_E).NE.0) THEN		!SPECTR. INDEX
	      IF (GMDHD(MDH_FRQ_D,IDX).NE.0)
	1		R4=R4*((FRQ0/GMDHD(MDH_FRQ_D,IDX))**
	1			A_E(PE+MDL_SI_E))
	    END IF
	    CMOD(0,I1)=R4*(CX(J2)*CONJG(CX(J1)))+CMOD(0,I1) !MODEL I
	    IF (A_E(PE+MDL_RM_E).NE.0) THEN		!ROT. MEASURE
	      R2=2*A_E(PE+MDL_RM_E)*(((DCL*1E-6/GMDHD(MDH_FRQ_D,IDX))**2)-
	1		((DCL*1E-6/FRQ0)**2))
	      R0=A_E(PE+MDL_Q_E)*COS(R2)-A_E(PE+MDL_U_E)*SIN(R2) !Q
	      R1=+A_E(PE+MDL_Q_E)*SIN(R2)+A_E(PE+MDL_U_E)*COS(R2) !U
	    ELSE
	      R0=A_E(PE+MDL_Q_E)			!Q
	      R1=A_E(PE+MDL_U_E)			!U
	    END IF
	    R2=A_E(PE+MDL_V_E)				!V
	    CMOD(1,I1)=R0*R4*(CX(J2)*CONJG(CX(J1)))+CMOD(1,I1) !MODEL Q
	    IF (IAND(MODACT,NMO_IPO).NE.0) THEN		!INPOL
	      CMOD(1,I1)=RP1(0)*R4*(CX(J2)*CONJG(CX(J1)))+CMOD(1,I1) !MODEL Q
	    END IF
	    CMOD(2,I1)=R1*R4*(CX(J2)*CONJG(CX(J1)))+CMOD(2,I1) !MODEL U
	    CMOD(3,I1)=R2*R4*(CX(J2)*CONJG(CX(J1)))+CMOD(3,I1) !MODEL V
	    IF (IAND(MODACT,NMO_IPO).NE.0) THEN		!INPOL
	      CMOD(2,I1)=RP1(1)*R4*(CX(J2)*CONJG(CX(J1)))+CMOD(2,I1) !U
	      CMOD(3,I1)=RP1(2)*R4*(CX(J2)*CONJG(CX(J1)))+CMOD(3,I1) !V
	    END IF
	  END DO					!END IFR
C
C NEXT SOURCE
C
	END DO						!END SOURCES
C
	RETURN
C
C
	END

C+ NMORDS.FOR
C  WNB 900827
C
C  Revisions:
C	WNB 910806	RDD typo new count
C	WNB 920317	Typo in RDZ and change RDC for looping in NMOMSC
C	HjV 920520	HP does not allow extended source lines
C	WNB 920609	Copy header data for RDD
C	WNB 920825	Typo in RDD comparisons
C	WNB 921208	Add RDA
C	WNB 931005	Change L_
C	WNB 931008	Change NMOCVS call
C	WNB 931119	Change NMOCVS call
C	WNB 940301	Correct test for equal Q,U,V in RDD
C
	LOGICAL FUNCTION NMORDS(FCA)
C
C  Read a source model
C
C  Result:
C
C	NMORDS_L = NMORDS( FCA_J:I)
C				Read the source list from FCA and add it to
C				the general list.
C	NMORDX_L = NMORDX( FCA_J:I, DAD_J:I, IDX_J:I)
C				Read a source list from FCA at DAD into
C				header # IDX.
C	NMORDM_L = NMORDM( IDXI_J:I, IDXO_J:I)
C				Add sources in header # IDXI to IDXO, empty IDXI
C	NMORDA_L = NMORDA( IDXI_J:I, IDXO_J:I, NIN_J:I)
C				Add sources in header # IDXI to IDXO,
C				starting at number NIN
C	NMORDC_L = NMORDC( IDXI_J:I, IDXO_J:I)
C				Copy sources from header # IDXI to IDXO
C	NMORDZ_L = NMORDZ( IDXI_J:I)
C				Zero source list in header # IDXI
C	NMORDD_L = NMORDD( OX_J:I, NX_J:I, DX_J:I)
C				Determine the difference in header DX between
C				NX-OX source list headers.
C	NMORDH_L = NMORDH( IDXI_J:I, STP_J:O, SRA_D:O, SDEC_D:O, SFRQ_D:O)
C				Get some header information from header # IDXI
C
C  Include files:
C
	INCLUDE 'WNG_DEF'
	INCLUDE 'NMO_DEF'
	INCLUDE 'GFH_O_DEF'			!GENERAL FILE HEADER
	INCLUDE 'MDH_O_DEF'			!MODEL HEADER
	INCLUDE 'MDL_O_DEF'			!MODEL LINE
C
C  Entries:
C
	LOGICAL NMORDX,NMORDM,NMORDC,NMORDZ
	LOGICAL NMORDD,NMORDH,NMORDA
C
C  Parameters:
C
C
C  Arguments:
C
	INTEGER FCA				!FILE TO WRITE TO
	INTEGER DAD				!DISK ADDRESS
	INTEGER IDX,IDXI,IDXO			!HEADER INDICES
	INTEGER OX,NX,DX			!HEADER INDICES
	INTEGER NIN				!START NUMBER SOURCE
	INTEGER STP				!SOURCE TYPE
	REAL*8 SRA,SDEC,SFRQ			!SOURCE DATA VALUES
C
C  Function references:
C
	LOGICAL WNFRD				!READ FILE
	LOGICAL NMOCVS				!CONVERT SOURCE LIST
	LOGICAL NMOSLG				!GET SOURCE LIST
C
C  Data declarations:
C
	INTEGER GFHJ(0:GFHHDL/4-1)		!GENERAL FILE HEADER
	LOGICAL RDS				!TYPE
	INTEGER DPTR				!DISK POINTER
	INTEGER LIDX				!HEADER #
	INTEGER PE1,PE2,PE3			!MODEL POINTERS
C-
	RDS=.TRUE.					!INDICATE RDS
	DPTR=GFHHDL					!DISK POINTER
	LIDX=7						!WHERE TO READ
	GOTO 10
C
C NMORDX
C
	ENTRY NMORDX(FCA,DAD,IDX)
C
	RDS=.FALSE.					!TYPE
	DPTR=DAD					!DISK POINTER
	LIDX=IDX					!WHERE TO PUT
	GOTO 10
C
C INIT
C
 10	CONTINUE
	NMORDS=.TRUE.					!ASSUME OK
	CALL NMOHZD(GMDH(0,LIDX))			!CLEAR HEADER
C
C READ SOURCES
C
	IF (RDS) THEN
	  IF (.NOT.WNFRD(FCA,GFHHDL,GFHJ,0)) GOTO 900	!READ FILE HEADER
	  IF (GFHJ(GFH_LINK_J).EQ.GFH_LINK_1) DPTR=0	!NO MODEL PRESENT
	END IF
	IF (DPTR.NE.0) THEN				!PRESENT
	  IF (.NOT.WNFRD(FCA,MDHHDL,GMDH(0,LIDX),DPTR)) GOTO 900 !READ HEADER
	  IF (GMDHJ(MDH_MODL_J,LIDX).NE.MDHHDV) THEN	!WRONG VERSION
	    CALL WNCTXT(F_TP,'!/Wrong source model version,'//
	1		' use NVS first')
	    GOTO 900
	  END IF
	  J1=GMDHJ(MDH_MODP_J,LIDX)			!DISK POINTER
	  GMDHJ(MDH_MODP_J,LIDX)=0			!SET NOT IN CORE
	  GMDHJ(MDH_MODL_J,LIDX)=0
	  IF (.NOT.NMOSLG(GMDHJ(MDH_NSRC_J,LIDX),GMDH(0,LIDX))) GOTO 901 !SPACE
	  J0=GMDHJ(MDH_MODP_J,LIDX)-A_OB		!OUTPUT POINTER
	  IF (.NOT.WNFRD(FCA,GMDHJ(MDH_NSRC_J,LIDX)*MDLHDL,
	1		A_B(J0),J1)) GOTO 900		!READ SOURCES
	END IF
C
	IF (RDS) CALL WNFCL(FCA)			!CLOSE FILE
C
	RETURN
C
C NMORDM
C
	ENTRY NMORDM(IDXI,IDXO)
C
	NMORDM=.TRUE.					!ASSUME OK
	RDS=.FALSE.					!NOT RDS
	LIDX=IDXI					!FOR ERROR
	IF (GMDHJ(MDH_TYP_J,IDXO).EQ.0) THEN		!GENERAL=LOCAL TYPE
	  CALL NMOHMD(GMDH(0,IDXI),GMDH(0,IDXO))	!COPY HEADER DATA
	ELSE IF (GMDHJ(MDH_TYP_J,IDXI).EQ.0) THEN	!LEAVE TYPE (READ=LOCAL)
	ELSE
	  IF (.NOT.NMOCVS(GMDH(0,IDXI),GMDH(0,IDXO),
	1		0.,0)) GOTO 901			!CONVERT TYPE
	END IF
	IF (.NOT.NMOSLG(GMDHJ(MDH_NSRC_J,IDXO)+
	1		GMDHJ(MDH_NSRC_J,IDXI),GMDH(0,IDXO))) GOTO 901 !SPACE
	J0=GMDHJ(MDH_MODP_J,IDXI)-A_OB			!INPUT POINTER
	J1=GMDHJ(MDH_MODP_J,IDXO)+GMDHJ(MDH_NSRC_J,IDXO)*MDLHDL-
	1		A_OB				!OUTPUT POINTER
	CALL WNGMV(GMDHJ(MDH_NSRC_J,IDXI)*MDLHDL,A_B(J0),A_B(J1)) !MOVE SOURCES
	GMDHJ(MDH_NSRC_J,IDXO)=GMDHJ(MDH_NSRC_J,IDXO)+
	1		GMDHJ(MDH_NSRC_J,IDXI)		!COUNT SOURCE
C
	CALL NMOSLD(GMDH(0,IDXI))			!DELETE HEADER
C
	RETURN
C
C NMORDA
C
	ENTRY NMORDA(IDXI,IDXO,NIN)
C
	NMORDA=.TRUE.					!ASSUME OK
	RDS=.FALSE.					!NOT RDS
	LIDX=IDXI					!FOR ERROR
	IF (GMDHJ(MDH_TYP_J,IDXO).EQ.0) THEN		!GENERAL=LOCAL TYPE
	  CALL NMOHMD(GMDH(0,IDXI),GMDH(0,IDXO))	!COPY HEADER DATA
	ELSE IF (GMDHJ(MDH_TYP_J,IDXI).EQ.0) THEN	!LEAVE TYPE (READ=LOCAL)
	ELSE
	  IF (.NOT.NMOCVS(GMDH(0,IDXI),GMDH(0,IDXO),
	1		0.,0)) GOTO 901			!CONVERT TYPE
	END IF
	IF (.NOT.NMOSLG(GMDHJ(MDH_NSRC_J,IDXO)+1-NIN+
	1		GMDHJ(MDH_NSRC_J,IDXI),GMDH(0,IDXO))) GOTO 901 !SPACE
	J0=GMDHJ(MDH_MODP_J,IDXI)+(NIN-1)*MDLHDL-A_OB	!INPUT POINTER
	J1=GMDHJ(MDH_MODP_J,IDXO)+GMDHJ(MDH_NSRC_J,IDXO)*MDLHDL-
	1		A_OB				!OUTPUT POINTER
	CALL WNGMV((GMDHJ(MDH_NSRC_J,IDXI)-NIN+1)*MDLHDL,
	1		A_B(J0),A_B(J1))		!MOVE SOURCES
	GMDHJ(MDH_NSRC_J,IDXO)=GMDHJ(MDH_NSRC_J,IDXO)+1-NIN+
	1		GMDHJ(MDH_NSRC_J,IDXI)		!COUNT SOURCE
C
	RETURN
C
C NMORDC
C
	ENTRY NMORDC(IDXI,IDXO)
C
	NMORDC=.TRUE.					!ASSUME OK
	RDS=.FALSE.					!FOR ERROR
	LIDX=IDXO					!FOR ERROR
	CALL NMOHZD(GMDH(0,IDXO))			!ZERO OUTPUT
	CALL NMOHMD(GMDH(0,IDXI),GMDH(0,IDXO))		!FILL HEADER
	IF (.NOT.NMOSLG(GMDHJ(MDH_NSRC_J,IDXI),GMDH(0,IDXO))) GOTO 901 !SPACE
	J0=GMDHJ(MDH_MODP_J,IDXI)-A_OB			!INPUT POINTER
	J1=GMDHJ(MDH_MODP_J,IDXO)-A_OB			!OUTPUT POINTER
	CALL WNGMV(GMDHJ(MDH_NSRC_J,IDXI)*MDLHDL,A_B(J0),A_B(J1)) !MOVE SOURCES
	GMDHJ(MDH_NSRC_J,IDXO)=GMDHJ(MDH_NSRC_J,IDXI)	!COUNT SOURCE
C
	RETURN
C
C NMORDZ
C
	ENTRY NMORDZ(IDXI)
C
	NMORDZ=.TRUE.					!ASSUME OK
	CALL NMOHZD(GMDH(0,IDXI))			!ZERO OUTPUT
C
	RETURN
C
C NMORDD
C
	ENTRY NMORDD(OX,NX,DX)
C
C INIT
C
	NMORDD=.TRUE.					!ASSUME OK
	RDS=.FALSE.					!NOT RDS
	LIDX=DX						!FOR ERROR
	CALL NMOHZD(GMDH(0,DX))				!ZERO OUTPUT
	IF (.NOT.NMOSLG(GMDHJ(MDH_NSRC_J,OX)+
	1		GMDHJ(MDH_NSRC_J,NX),GMDH(0,DX))) GOTO 900 !GET SPACE
	CALL NMOHMD(GMDH(0,NX),GMDH(0,DX))		!FILL HEADER
C
C MERGE LISTS
C
	J1=1						!NEW DATA
	J2=1						!OLD DATA
	PE1=(GMDHJ(MDH_MODP_J,NX)-A_OB)/LB_E		!NEW DATA
	PE2=(GMDHJ(MDH_MODP_J,OX)-A_OB)/LB_E		!OLD DATA
	PE3=(GMDHJ(MDH_MODP_J,DX)-A_OB)/LB_E		!DIFFERENCE DATA
 33	CONTINUE
	IF (J1.GT.GMDHJ(MDH_NSRC_J,NX)) THEN		!END OF NEW LIST
 32	  CONTINUE
	  IF (J2.GT.GMDHJ(MDH_NSRC_J,OX)) THEN		!END OF OLD LIST
	  ELSE						!DELETE FROM OLD LIST
	    CALL WNGMV(MDLHDL,A_E(PE2),A_E(PE3)) 	!SET OLD DATA
	    A_E(PE3+MDL_I_E)=-A_E(PE3+MDL_I_E)		!-AMPL
	    GMDHJ(MDH_NSRC_J,DX)=GMDHJ(MDH_NSRC_J,DX)+1 !COUNT
	    PE3=PE3+MDLHDL/LB_E				!POINTER
	    J2=J2+1					!NEXT OLD
	    PE2=PE2+MDLHDL/LB_E
	    GOTO 32
	  END IF
	ELSE IF (J2.GT.GMDHJ(MDH_NSRC_J,OX)) THEN	!SET NEW DATA
	  CALL WNGMV(MDLHDL,A_E(PE1),A_E(PE3))		!SET NEW DATA
	  GMDHJ(MDH_NSRC_J,DX)=GMDHJ(MDH_NSRC_J,DX)+1	!COUNT
	  PE3=PE3+MDLHDL/LB_E				!POINTER
	  J1=J1+1					!NEXT NEW
	  PE1=PE1+MDLHDL/LB_E
	  GOTO 33
	ELSE						!OLD AND NEW PRESENT
	  IF (ABS(A_E(PE1+MDL_L_E)-A_E(PE2+MDL_L_E))
	1			.LT.1E-8 .AND.		!SAME L
	1		ABS(A_E(PE1+MDL_M_E)-A_E(PE2+MDL_M_E))
	1			.LT.1E-8) THEN		!SAME M
	    IF (ABS(A_E(PE1+MDL_SI_E)-A_E(PE2+MDL_SI_E))
	1			.LT.1E-3 .AND.		!SAME SI
	1		ABS(A_E(PE1+MDL_RM_E)-A_E(PE2+MDL_RM_E))
	1			.LT.1E-3 .AND.		!SAME RM
	1		A_B(PE1*LB_E+MDL_TP_B).EQ.
	1			A_B(PE2*LB_E+MDL_TP_B) .AND. !SAME CLEAN
	1		ABS(A_E(PE1+MDL_EXT_E+0)-A_E(PE2+MDL_EXT_E+0))
	1			.LT.1E-8 .AND.		!SAME EXTENT
	1		ABS(A_E(PE1+MDL_EXT_E+1)-A_E(PE2+MDL_EXT_E+1))
	1			.LT.1E-8 .AND.
	1		ABS(A_E(PE1+MDL_EXT_E+2)-A_E(PE2+MDL_EXT_E+2))
	1			.LT.1E-8) THEN
	      IF (ABS(A_E(PE1+MDL_I_E)-A_E(PE2+MDL_I_E))
	1			.LT.1E-4) THEN		!SAME AMPL.
		IF (ABS(A_E(PE1+MDL_Q_E)-A_E(PE2+MDL_Q_E))
	1			.LT.1E-4 .AND.		!SAME Q
	1		ABS(A_E(PE1+MDL_U_E)-A_E(PE2+MDL_U_E))
	1			.LT.1E-4 .AND.		!SAME U
	1		ABS(A_E(PE1+MDL_V_E)-A_E(PE2+MDL_V_E))
	1			.LT.1E-4) THEN		!SAME V
 34		  CONTINUE
	          J1=J1+1				!SKIP NEW
	          PE1=PE1+MDLHDL/LB_E
	          J2=J2+1				!SKIP OLD
	          PE2=PE2+MDLHDL/LB_E
	          GOTO 33				!NEXT SRC
		ELSE					!SET NEW AND OLD
 35		  CONTINUE
		  CALL WNGMV(MDLHDL,A_E(PE1),A_E(PE3))	!SAVE NEW
		  J1=J1+1
		  PE1=PE1+MDLHDL/LB_E
		  GMDHJ(MDH_NSRC_J,DX)=GMDHJ(MDH_NSRC_J,DX)+1 !COUNT
		  PE3=PE3+MDLHDL/LB_E
		  CALL WNGMV(MDLHDL,A_E(PE2),A_E(PE3))	!SAVE OLD
		  A_E(PE3+MDL_I_E)=-A_E(PE3+MDL_I_E)	!AMPL.
		  J2=J2+1
		  PE2=PE2+MDLHDL/LB_E
		  GMDHJ(MDH_NSRC_J,DX)=GMDHJ(MDH_NSRC_J,DX)+1 !COUNT
		  PE3=PE3+MDLHDL/LB_E
		  GOTO 33				!NEXT SOURCE
		END IF
	      ELSE					!DIFFERENT AMPL
	        CALL WNGMV(MDLHDL,A_E(PE2),A_E(PE3))	!COMBINE OLD/NEW
	        A_E(PE3+MDL_I_E)=A_E(PE1+MDL_I_E)-
	1			A_E(PE2+MDL_I_E)	!NEW AMPL
		A_E(PE3+MDL_Q_E)=(A_E(PE1+MDL_Q_E)*A_E(PE1+MDL_I_E)-
	1			A_E(PE2+MDL_Q_E)*A_E(PE2+MDL_I_E))/
	1			A_E(PE3+MDL_I_E)	!NEW Q
		A_E(PE3+MDL_U_E)=(A_E(PE1+MDL_U_E)*A_E(PE1+MDL_I_E)-
	1			A_E(PE2+MDL_U_E)*A_E(PE2+MDL_I_E))/
	1			A_E(PE3+MDL_I_E)	!NEW U
		A_E(PE3+MDL_V_E)=(A_E(PE1+MDL_V_E)*A_E(PE1+MDL_I_E)-
	1			A_E(PE2+MDL_V_E)*A_E(PE2+MDL_I_E))/
	1			A_E(PE3+MDL_I_E)	!NEW V
		GMDHJ(MDH_NSRC_J,DX)=GMDHJ(MDH_NSRC_J,DX)+1 !COUNT
		PE3=PE3+MDLHDL/LB_E
		GOTO 34					!NEXT SRC
	      END IF
	    ELSE					!DIFFERENT SOURCES
	      GOTO 35					!SAVE NEW AND OLD
	    END IF
	  ELSE						!DIFFERENT POS.
	    IF (ABS(A_E(PE1+MDL_M_E)-A_E(PE2+MDL_M_E)).LT.
	1			1E-8) THEN		!SAME M
	      IF (A_E(PE1+MDL_L_E).GT.A_E(PE2+MDL_L_E)) THEN !NEW
 36		CONTINUE
		CALL WNGMV(MDLHDL,A_E(PE1),A_E(PE3))
		GMDHJ(MDH_NSRC_J,DX)=GMDHJ(MDH_NSRC_J,DX)+1 !CNT SRC
		PE3=PE3+MDLHDL/LB_E
		J1=J1+1					!SKIP NEW
		PE1=PE1+MDLHDL/LB_E
		GOTO 33					!NEXT SRC
	      ELSE					!OLD FIRST
 37		CONTINUE
		CALL WNGMV(MDLHDL,A_E(PE2),A_E(PE3))
		GMDHJ(MDH_NSRC_J,DX)=GMDHJ(MDH_NSRC_J,DX)+1 !CNT SRC
		A_E(PE3+MDL_I_E)=-A_E(PE3+MDL_I_E)	!DELETE AMPL
		PE3=PE3+MDLHDL/LB_E
		J2=J2+1					!SKIP OLD
		PE2=PE2+MDLHDL/LB_E
		GOTO 33					!NEXT SOURCE
	      END IF
	    ELSE IF (A_E(PE1+MDL_M_E).GT.A_E(PE2+MDL_M_E)) THEN !NEW
	      GOTO 36
	    ELSE
	      GOTO 37					!OLD FIRST
	    END IF
	  END IF					!END POSITION
	END IF						!END NEW LIST
C
	RETURN
C
C ERRORS
C
 900	CONTINUE
	CALL WNCTXT(F_TP,'!/Error reading source file')
 901	CONTINUE
	CALL WNCTXT(F_TP,'!/Source file not read')
	NMORDS=.FALSE.					!INDICATE ERROR
	IF (RDS) CALL WNFCL(FCA)			!CLOSE FILE
	CALL NMOSLD(GMDH(0,LIDX))			!DELETE HEADER
C
	RETURN
C
C NMORDH
C
	ENTRY NMORDH(IDXI,STP,SRA,SDEC,SFRQ)
C
	NMORDH=.TRUE.					!ASSUME OK
	STP=GMDHJ(MDH_TYP_J,IDXI)			!TYPE
	SRA=GMDHD(MDH_RA_D,IDXI)			!RA
	SDEC=GMDHD(MDH_DEC_D,IDXI)			!DEC
	SFRQ=GMDHD(MDH_FRQ_D,IDXI)			!FREQ.
C
	RETURN
C
C
	END


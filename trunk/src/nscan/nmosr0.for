C+ NMOSR0.FOR
C  WNB 900327
C
C  Revisions:
C
	INTEGER FUNCTION NMOSR0(LST1,LST2)
C
C  Sort the source list elements
C
C  Result:
C
C	ORDER_J = NMOSR0( LST1_E(*), LST2_E(*))	Sort the source list,
C					decreasing intensity
C	ORDER_J = NMOSR1( LST1_E(*), LST2_E(*))	Sort the source list,
C					decreasing l,m
C	ORDER_J = NMOSR2( LSTJ1_J(*), LSTJ2_J(*)) Sort the source list,
C					J field
C	ORDER_J = NMOSR3( LST1_E(*), LST2_E(*))	Sort the source list,
C					E field
C	ORDER_J = NMOSR4( LSTB1_B(*), LSTB2_B(*)) Sort the source list,
C					B field
C	ORDER_J = NMOSR5( LST1_E(*), LST2_E(*)) Sort the source list,
C					distance
C	ORDER_J = NMOSR6( LST1_E(*), LST2_E(*)) Sort the source list,
C					lm
C	ORDER_J = NMOSR7( LST1_E(*), LST2_E(*)) Sort the source list,
C					ml
C	ORDER_J = NMOSR8( LST1_E(*), LST2_E(*)) Sort the source list,
C					polarised intensity
C
C  Include files:
C
	INCLUDE 'WNG_DEF'
	INCLUDE 'NMO_DEF'
	INCLUDE 'MDL_O_DEF'			!MODEL LINE
C
C  Parameters:
C
C
C  Arguments:
C
	REAL LST1(0:*)				!ELEMENT 1
	REAL LST2(0:*)				!ELEMENT 2
	INTEGER LSTJ1(0:*)			!ELEMENT 1
	INTEGER LSTJ2(0:*)			!ELEMENT 2
	BYTE LSTB1(0:*)				!ELEMENT 1
	BYTE LSTB2(0:*)				!ELEMENT 2
C
C  Function references:
C
C
C  Entry points:
C
	INTEGER NMOSR1				!SORT DECR. L,M
	INTEGER NMOSR2				!SORT J FIELD
	INTEGER NMOSR3				!SORT E FIELD
	INTEGER NMOSR4				!SORT B FIELD
	INTEGER NMOSR5				!SORT DISTANCE
	INTEGER NMOSR6				!SORT LM
	INTEGER NMOSR7				!SORT ML
	INTEGER NMOSR8				!SORT POL.
C
C  Data declarations:
C
C-
C
C SORT DECREASING INTENSITY
C
	IF (LST1(MDL_I_E).EQ.LST2(MDL_I_E)) THEN	!EQUAL
	  NMOSR0=0
	ELSE IF (LST1(MDL_I_E).GT.LST2(MDL_I_E)) THEN
	  NMOSR0=-1
	ELSE
	  NMOSR0=+1
	END IF
C
	RETURN
C
C DECREASING L,M
C
	ENTRY NMOSR1(LST1,LST2)
C
	IF (LST1(MDL_M_E).EQ.LST2(MDL_M_E)) THEN	!EQUAL M
	  IF (LST1(MDL_L_E).EQ.LST2(MDL_L_E)) THEN	!EQUAL L
	    NMOSR1=0
	  ELSE IF (LST1(MDL_L_E).GT.LST2(MDL_L_E)) THEN
	    NMOSR1=-1
	  ELSE
	    NMOSR1=+1
	  END IF
	ELSE IF (LST1(MDL_M_E).GT.LST2(MDL_M_E)) THEN
	  NMOSR1=-1
	ELSE
	  NMOSR1=+1
	END IF
C
	RETURN	
C
C J FIELD
C
	ENTRY NMOSR2(LSTJ1,LSTJ2)
C
	IF (LSTJ1(SOROFF).EQ.LSTJ2(SOROFF)) THEN	!EQUAL
	  NMOSR2=0
	ELSE IF (LSTJ1(SOROFF).GT.LSTJ2(SOROFF)) THEN
	  NMOSR2=SORTYP
	ELSE
	  NMOSR2=-SORTYP
	END IF
C
	RETURN	
C
C E FIELD
C
	ENTRY NMOSR3(LST1,LST2)
C
	IF (LST1(SOROFF).EQ.LST2(SOROFF)) THEN		!EQUAL
	  NMOSR3=0
	ELSE IF (LST1(SOROFF).GT.LST2(SOROFF)) THEN
	  NMOSR3=SORTYP
	ELSE
	  NMOSR3=-SORTYP
	END IF
C
	RETURN	
C
C B FIELD
C
	ENTRY NMOSR4(LSTB1,LSTB2)
C
	IF (LSTB1(SOROFF).EQ.LSTB2(SOROFF)) THEN	!EQUAL
	  NMOSR4=0
	ELSE IF (LSTB1(SOROFF).GT.LSTB2(SOROFF)) THEN
	  NMOSR4=SORTYP
	ELSE
	  NMOSR4=-SORTYP
	END IF
C
	RETURN	
C
C DISTANCE
C
	ENTRY NMOSR5(LST1,LST2)
C
	R0=SQRT((LST1(MDL_M_E)-SORRAN(1))**2+
	1		(LST1(MDL_L_E)-SORRAN(0))**2)	!DISTANCE
	R1=SQRT((LST2(MDL_M_E)-SORRAN(1))**2+
	1		(LST2(MDL_L_E)-SORRAN(0))**2)
	IF (R0.EQ.R1) THEN				!EQUAL DISTANCE
	  NMOSR5=0
	ELSE IF (R0.GT.R1) THEN
	  NMOSR5=SORTYP
	ELSE
	  NMOSR5=-SORTYP
	END IF
C
	RETURN
C
C L,M
C
	ENTRY NMOSR6(LST1,LST2)
C
	IF (LST1(MDL_M_E).EQ.LST2(MDL_M_E)) THEN	!EQUAL M
	  IF (LST1(MDL_L_E).EQ.LST2(MDL_L_E)) THEN	!EQUAL L
	    NMOSR6=0
	  ELSE IF (LST1(MDL_L_E).GT.LST2(MDL_L_E)) THEN
	    NMOSR6=SORTYP
	  ELSE
	    NMOSR6=-SORTYP
	  END IF
	ELSE IF (LST1(MDL_M_E).GT.LST2(MDL_M_E)) THEN
	  NMOSR6=SORTYP
	ELSE
	  NMOSR6=-SORTYP
	END IF
C
	RETURN	
C
C M,L
C
	ENTRY NMOSR7(LST1,LST2)
C
	IF (LST1(MDL_L_E).EQ.LST2(MDL_L_E)) THEN	!EQUAL L
	  IF (LST1(MDL_M_E).EQ.LST2(MDL_M_E)) THEN	!EQUAL M
	    NMOSR7=0
	  ELSE IF (LST1(MDL_M_E).GT.LST2(MDL_M_E)) THEN
	    NMOSR7=SORTYP
	  ELSE
	    NMOSR7=-SORTYP
	  END IF
	ELSE IF (LST1(MDL_L_E).GT.LST2(MDL_L_E)) THEN
	  NMOSR7=SORTYP
	ELSE
	  NMOSR7=-SORTYP
	END IF
C
	RETURN	
C
C POLARISATION
C
	ENTRY NMOSR8(LST1,LST2)
C
	R0=SQRT(LST1(MDL_Q_E)**2+LST1(MDL_U_E)**2+
	1		LST1(MDL_V_E)**2)*LST1(MDL_I_E)	!POL.
	R1=SQRT(LST2(MDL_Q_E)**2+LST2(MDL_U_E)**2+
	1		LST2(MDL_V_E)**2)*LST2(MDL_I_E)
	IF (R0.EQ.R1) THEN				!EQUAL POL.
	  NMOSR8=0
	ELSE IF (R0.GT.R1) THEN
	  NMOSR8=SORTYP
	ELSE
	  NMOSR8=-SORTYP
	END IF
C
	RETURN
C
C
	END

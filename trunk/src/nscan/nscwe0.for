C+ NSCWE0.FOR
C  WNB 911031
C
C  Revisions:
C	WNB 921221	Add WE2
C	HjV 930311	Change some text
C	CMV 010213	Add WE3 for velocities
C
	SUBROUTINE NSCWE0
C
C  Correct SCN file for mosaic WSRT tape HA error
C
C  Result:
C
C	CALL NSCWE0	will correct a SCN file for mosaic HA error
C	CALL NSCWE1	will correct a SCN file for HA offsets
C	CALL NSCWE2	will flop data phases
C	CALL NSCWE3	will recalc velocities
C
C  PIN:
C
C	WERR_RA
C	WERR_HA
C
C  Include files:
C
	INCLUDE 'WNG_DEF'
	INCLUDE 'NSC_DEF'
	INCLUDE 'STH_O_DEF'		!SET HEADER
	INCLUDE 'STH_T_DEF'
	INCLUDE 'SCH_O_DEF'		!SCAN HEADER
	INCLUDE 'SCH_T_DEF'
C
C  Parameters:
C
C
C  Arguments:
C
C
C  Function references:
C
	LOGICAL WNFWR			!WRITE DATA
	LOGICAL WNFRD			!READ DATA
	CHARACTER*32 WNTTSG		!SET NAME
	LOGICAL WNDPAR			!GET USER DATA
	LOGICAL NSCSTG			!GET A SET
	LOGICAL NSCSCH			!GET SCAN HEADER
	LOGICAL NSCSCW			!WRITE SCAN HEADER
C
C  Data declarations:
C
	INTEGER TYP			!0..3
	DOUBLE PRECISION RAOFF		!RIGHT ASCENSION OF MOSAIC AREA CENTRE
	DOUBLE PRECISION HAOFF		!HOUR ANGLE CORRECTION TO BE ADDED
	DOUBLE PRECISION REFVEL		!REFERENCE VELOCITY
	INTEGER STHP			!SET HEADER POINTER
	INTEGER SNAM(0:7)		!SET NAME
	INTEGER*2 LDAT(0:2,0:4*STHIFR-1) !DATA BUFFER
	BYTE STH(0:STHHDL-1)		!SET HEADER
	  INTEGER*2 STHI(0:STHHDL/2-1)
	  INTEGER STHJ(0:STHHDL/4-1)
	  REAL STHE(0:STHHDL/4-1)
	  DOUBLE PRECISION STHD(0:STHHDL/8-1)
	  EQUIVALENCE (STH,STHI,STHJ,STHE,STHD)
	BYTE SCH(0:SCHHDL-1)		!SCAN HEADER
	  INTEGER*2 SCHI(0:SCHHDL/2-1)
	  INTEGER SCHJ(0:SCHHDL/4-1)
	  REAL SCHE(0:SCHHDL/4-1)
	  DOUBLE PRECISION SCHD(0:SCHHDL/8-1)
	  EQUIVALENCE (SCH,SCHI,SCHJ,SCHE,SCHD)
C-
C
C WE0
C
	TYP=0
	IF (.NOT.WNDPAR('WERR_RA',RAOFF,LB_D,J0,'""')) GOTO 800 !GET DATA
	IF (J0.NE.1) GOTO 800
	RAOFF=RAOFF/360				!MAKE CIRCLES
	GOTO 10
C
C WE1
C
	ENTRY NSCWE1
C
	TYP=1
	IF (.NOT.WNDPAR('WERR_HA',HAOFF,LB_D,J0,'""')) GOTO 800 !GET DATA
	IF (J0.NE.1) GOTO 800
	HAOFF=HAOFF/360				!MAKE CIRCLES
	GOTO 10
C
C WE2
C
	ENTRY NSCWE2
C
	TYP=2
	GOTO 10
C
C WE3
C
	ENTRY NSCWE3
C
	TYP=3
	IF (.NOT.WNDPAR('WERR_VEL',REFVEL,LB_D,J0,'""')) GOTO 800 !GET DATA
	IF (J0.NE.1) GOTO 800
	GOTO 10
C
C INIT
C
 10	CONTINUE
C
C DO ALL SETS
C
	DO WHILE (NSCSTG(FCAOUT,SETS,STH,STHP,SNAM)) !GET SET
C
C ALL SCANS
C
	 IF (TYP.NE.3) THEN
	   DO I=0,STHJ(STH_SCN_J)-1		!ALL SCANS
	     IF (.NOT.NSCSCH(FCAOUT,STH,0,I,0,0,SCH)) THEN !READ SCAN HEADER
 30	       CONTINUE
	       CALL WNCTXT(F_TP,'Error updating scan !UJ of Sector !AS',
	1			I,WNTTSG(SNAM,0))
	       GOTO 20				!NEXT SET
	     END IF
	     IF (TYP.EQ.0) THEN			!MOSAIC ERROR
	        SCHE(SCH_HA_E)=SCHE(SCH_HA_E)+RAOFF-STHD(STH_RA_D)
	        IF (.NOT.NSCSCW(FCAOUT,STH,0,I,0,0,SCH)) GOTO 30 !WRITE HEADER

	     ELSE IF (TYP.EQ.1) THEN		!HA ERROR
	        SCHE(SCH_HA_E)=SCHE(SCH_HA_E)+HAOFF
	        IF (.NOT.NSCSCW(FCAOUT,STH,0,I,0,0,SCH)) GOTO 30 !WRITE HEADER

	     ELSE IF (TYP.EQ.2) THEN		!SWAP PHASES
	        IF (.NOT.WNFRD(FCAOUT,STHJ(STH_SCNL_J)-SCHHDL,
	1		LDAT,STHJ(STH_SCNP_J)+
	1		STHJ(STH_SCNL_J)*I+SCHHDL)) GOTO 30 !READ DATA
	        DO I1=0,STHJ(STH_NIFR_J)-1                !ALL IFRS
		  DO I2=0,STHI(STH_PLN_I)-1               !ALL POL.
		    LDAT(2,STHI(STH_PLN_I)*I1+I2)=
	1		  -LDAT(2,STHI(STH_PLN_I)*I1+I2)
		  END DO
	        END DO
	        IF (.NOT.WNFWR(FCAOUT,STHJ(STH_SCNL_J)-SCHHDL,
	1		LDAT,STHJ(STH_SCNP_J)+
	1		STHJ(STH_SCNL_J)*I+SCHHDL)) GOTO 30 !WRITE DATA
 	     END IF
C
C NEXT SCAN
C
	    END DO
	  ENDIF
C
C CORRECTIONS TO SECTOR HEADER
C
	  IF (TYP.EQ.0) THEN			!MOSAIC ERROR
	    STHE(STH_HAB_E)=STHE(STH_HAB_E)+RAOFF-STHD(STH_RA_D)

	  ELSE IF (TYP.EQ.1) THEN		!HA ERROR
	    STHE(STH_HAB_E)=STHE(STH_HAB_E)+HAOFF

	  ELSE IF (TYP.EQ.3) THEN		!RECALC VELOCITY
C
C SWAP FRQC AND FRQ0 IF NEEDED
C
	    IF (REFVEL.GT.0 .AND. 
	1	STHD(STH_FRQC_D).GT.STHD(STH_FRQ0_D)) THEN
		D0=STHD(STH_FRQC_D)
		STHD(STH_FRQC_D)=STHD(STH_FRQ0_D)
		STHD(STH_FRQ0_D)=D0
	        CALL WNCTXT(F_TP,'!AS FRQ0/FRQC swapped',
	1		WNTTSG(SNAM,0))
	    END IF
C
C FILL IN VELC IF NEEDED
C
	    IF (STHJ(STH_VELC_J).LE.0) THEN
	       STHJ(STH_VELC_J)=3	!BARY, OPTICAL
	    END IF
C
C FILL IN VELR ACCORDING TO USER INPUT
C
	    STHE(STH_VELR_E)=REFVEL
C
C CALCULATE VEL FROM CHANNEL FREQUENCY, CENTRE FREQUENCY AND VELOCITY
C
	    R0=STHE(STH_VEL_E)				!FOR LISTING
	    IF (STHJ(STH_VELC_J).EQ.1 .OR.
	1		STHJ(STH_VELC_J).EQ.2) THEN	!RADIO
	        STHE(STH_VEL_E)=STHE(STH_VELR_E)*STHD(STH_FRQV_D)/
	1		STHD(STH_FRQC_D)+
	1		CL*(STHD(STH_FRQC_D)-STHD(STH_FRQV_D))/
	1		STHD(STH_FRQC_D)
	    ELSE					!OPTICAL
	        STHE(STH_VEL_E)=STHE(STH_VELR_E)*STHD(STH_FRQC_D)/
	1		STHD(STH_FRQV_D)+
	1		CL*(STHD(STH_FRQC_D)-STHD(STH_FRQV_D))/
	1		STHD(STH_FRQV_D)
	    END IF
	    CALL WNCTXT(F_TP,
	1	'!AS FRQ=!10$D15.5 VEL=!20$E20.5 (!20$E20.5)',
	1	WNTTSG(SNAM,0),STHD(STH_FRQV_D),
	1	STHE(STH_VEL_E),R0)
	  END IF

	  IF (.NOT.WNFWR(FCAOUT,STHHDL,STH,STHP)) THEN !REWRITE SET HEADER
	    CALL WNCTXT(F_TP,'Error updating Sector !AS',
	1			WNTTSG(SNAM,0))
	  END IF
C
C NEXT SET
C
 20	  CONTINUE
	END DO
C
C READY
C
 800	CONTINUE
	CALL WNFCL(FCAOUT)				!CLOSE FILE
C
	RETURN
C
C ERROR
C
 900	CONTINUE
	CALL WNFCL(FCAOUT)				!CLOSE FILE
	RETURN						!READY
C
C
	END

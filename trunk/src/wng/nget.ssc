#  nget.ssc
# 	WNB 920908
# 
#  Revisions:
#	WNB 921002	Overhaul
#	WNB 921019	Suppress ar messages
#	WNB 921130	Cater for long names
#	WNB 921208	Add log; -a0 switch
#	HjV 921229	Make SSC; HP got only 14 char. in library
#	WNB 921230	Correct HP test
#	WNB 930325	Cater for different fold
#	WNB 930330	Add .A.. and .X..
# 
# 	Get file from text library. Use as:
#
#		source $WNG/nget.sun	(Unix)
#		@WNG:NGET <file>	(VAX)
#
#	The command file uses many local nxec variables, and
#	environment variables: WNG, WNG_TLB, WNG_TYPE
#	command files:
#
#ifdef wn_vax__
$	ON ERROR THEN GOTO ERR
$	L0=F$SEARCH("''FNM'''FTP'")			!FOR REFERENCE
$	IF CD_A .NES. "0" .AND. L0 .NES. "" THEN GOTO EXIT !DO NOT DO
$	SET MESSAGE /NOIDEN/NOFACIL/NOSEVER/NOTEXT
$	SET NOON
$	ASSIGN/USER NL: SYS$OUTPUT
$	IF F$EXTRACT(1,1,FTP) .EQS. "A" .OR. -
		F$EXTRACT(1,1,FTP) .EQS. "X"
$	THEN
$	  LIBRARY/TEXT/EXTRACT='FNM''FTP'/OUT='FNM''FTP' 'WNG_TLB''L_D'_AX.TLB
$	ELSE
$	  LIBRARY/TEXT/EXTRACT='FNM''FTP'/OUT='FNM''FTP' 'WNG_TLB''L_D'.TLB
$	ENDIF
$	SET ON
$	SET MESSAGE /IDEN/FACIL/SEVER/TEXT
$	L1=F$SEARCH("''FNM'''FTP'")			!SEE IF DONE
$	IF L1 .EQS. "" .OR. L0 .EQS. L1 THEN GOTO ERR	!NOT DONE
$	IF F$EXTRACT(1,1,FTP) .EQS. "A" .OR. -
		F$EXTRACT(1,1,FTP) .EQS. "X"
$	THEN
$	  MSGT=MSGT+" got [''F$PARSE(L_D,,,"NAME","SYNTAX_ONLY")'_AX.TLB]"
$	ELSE
$	  MSGT=MSGT+" got [''F$PARSE(L_D,,,"NAME","SYNTAX_ONLY")'.TLB]"
$	ENDIF
$	GOTO ERR1
#else
	set msgt="" ; set b1="Done: "			# message text/ok
	if (-e ${lobh}.$lobe) then			# already there
	  if ("$cd_a" != "0") goto RETURN		# no re-ask
	  'rm' ${lobh}.$lobe				# make sure new one
	endif
	set l00=(`echo ${lobh}.$lobe | wc -c`)		# length name
	if ("$lobe" =~ [ax]??) then
	  ar x $WNG_TLB/${l_d}_ax.tlb ${lobh}.$lobe >& /dev/null # get file
	else
	  ar x $WNG_TLB/${l_d}.tlb ${lobh}.$lobe >& /dev/null # get file
	endif
	if (! -e ${lobh}.$lobe) then			# not found; too long?
	  if ("$WNG_TYPE" == "hp") then			# make sure length
	    set l01a=15
	    set l01b=14
	  else
	    set l01a=16
	    set l01b=15
	  endif
	  if ($l00 > $l01a) then			# name > 14; try short
	    set l02=(`echo ${lobh}.$lobe | ${fold}$l01b`) # break name
	    if ("$lobe" =~ [ax]??) then
	      ar x $WNG_TLB/${l_d}_ax.tlb $l02[1] >& /dev/null # get file
	    else
	      ar x $WNG_TLB/${l_d}.tlb $l02[1] >& /dev/null # get file
	    endif
	    if (! -e $l02[1]) goto NGERR		# not there
	    'mv' $l02[1] ${lobh}.$lobe >& /dev/null	# make correct name
	  endif
	endif
	if (! -e ${lobh}.$lobe) goto NGERR		# not found
	set l02=$WNG_TLB
        set l00=$l02:h ; set l01=$l02:t
        set l00=$l00:t/$l01
	if ("$lobe" =~ [ax]??) then
          set msgt="$msgt got [$l00/${l_d}_ax.tlb]"
	else
          set msgt="$msgt got [$l00/${l_d}.tlb]"
	endif
	goto NGEX					# ready
#endif
#
# Ready
#
#ifdef wn_vax__
$ !
$ ERR:	B1="Not:  "
$ ERR1:	TELL B1+FNM+FTP+MSGT
$	UTELL B1+FNM+FTP+MSGT
$ EXIT:	EXIT
#else
NGERR:
	set b1="Not:  "
NGEX:
	echo "$b1 ${lobh}.$lobe $msgt" | tee -a $c_upd
RETURN:
#endif

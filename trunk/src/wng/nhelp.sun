#  nhelp.ssc
# 	WNB 920908
# 
#  Revisions:
#	WNB 920922	Add .fun
#	WNB 921001	Overhaul
#	WNB 921014	Add -a nnet
#	WNB 921117	Add regular expressions
#	WNB 921122	Delete .uin
#	WNB 921208	Add update note; -a switch
#	WNB 921211	Add QP
#	WNB 921216	Add ##
#	WNB 921218	Add FSC etc
#	WNB 921230	Make SSC
#	WNB 930303	No more DWARF share
#	WNB 930330	Add .A.. and .X..
#	WNB 930803	Add .dsf
# 
#	Help text for nxec commands. Used from nxec as:
#		csh -f nhelp.sun tp typ ext pcod pnam chtp	(Unix)
#		@WNG:NHELP tp typ				(VAX)
#	where:
#		tp=	1 help on command  2 on codes  3 on filenames
#		typ=	nxec given type
#		ext=	current machine extension (e.g. dw)
#		pcod=	program code (e.g. nc)
#		pnam=	program name (e.g. ncomp)
#		chtp=	list of extension to be bypassed
#
#	Also uses the environment variables WNG and *Q_D
#
# Intro
#
	set tp=$1 ; set typ=$2 ; set ext=$3
	set pcod=$4 ; set pnam=$5 ; set chtp=($6)
	goto HLPA$tp				# distribute on type
#
# Command level
#
HLPA1:
	echo ""
	echo "Unknown NXEC type ($typ)"
	echo ""
	echo "The $WNG/nxec command can compile, link and maintain all sorts"
	echo "of files, and, optionally, update the DWARF system."
	echo "The general use is:"
	echo "    $WNG/nxec type [-codes ...] [name[,...] ...] [-codes ...]"
	echo "The type can be:"
	echo "    NC[ompile]    to compile"
	echo "    NL[ink]       to link"
	echo "    ND[elete]     to delete"
	echo "    NG[et]        to get from TLB"
	echo "    NN[et]        to get across net"
	echo "    NX[ref]       to produce crossreference between Fortran files"
	echo "In general there will be symbols defined"
	echo "(in $WNG/wngcshrc_${WNG_SITE}.sun) to"
	echo "call the different modes directly as:"
	echo "    NXEC, NCOMP, NLINK, NDEL, NGET, NXREF, NNET (UC or lc)."
	echo "More Help is available by specifying a type and no further"
	echo "arguments."
	echo "E.g.: > ncomp  or  > nxec ncomp"
	echo "Output is steered by environment variables."
	echo "Most of them are defined in $WNG/wngcshrc_${WNG_SITE}.sun."
	echo "They can be overwritten by the user. The following can"
	echo "also be defined:"
	echo "    WNG_EXE, WNG_OLB, WNG_TLB, WNG_ERR, WNG_LIS,"
	echo "    WNG_LINK, WNG_LDFILES"
	echo "A file UPDyymmdd.LOG will describe your actions"
	echo "Retry nxec command with a type, or in short form."
	echo ""
	goto exex
#
# Codes level
#
HLPA2:
	echo ""
	echo "The NXEC <type> command can have codes and (file)names as"
	echo "arguments. A code argument starts with a - or +. Help on filename"
	echo "arguments is available by not specifying a filename."
	echo "Codes are a single letter, optionally preceded by an N or a + to"
	echo "indicate negation, or followed by a single digit to subspecify"
	echo "information. Some codes accept an argument in <> brackets, e.g."
	echo "L<MYLIB>."
	echo "Q[ualifier] codes are special codes. They are followed by a"
	echo "letter to indicate the qualifier type, and an angle-bracketed"
	echo "string with the qualifier, e.g. QB</AFTER=TODAY> ."
	echo "Codes will be read left-to-write (e.g. BNB = NB, NBB = B)."
	echo "The codes specified will be preceded by codes specified in"
	echo "the possibly defined environment variable ${pcod}_COD ."
	echo "The known codes for $pnam are (default given first):"
	echo "       ?    this help text"
	echo "  NB   B    execute as background job, without a log"
	echo "       B1   execute as background job, with a log in ./nx*.log"
	goto H1$pcod
#
# NCOMP codes
#
H1nc:
	echo "  NA   A1   alter Dwarf routines (INCLUDE '(abc)' to 'ABC' and"
	echo "                PROGRAM to SUBROUTINE)"
	echo "       A2   alter Fortran routines (INCLUDE 'xxx:abc.def' to"
	echo "                INCLUDE 'ABC.DEF') and"
	echo "                alter Fortran routines (INCLUDE 'abc.def' to"
	echo "                INCLUDE 'ABC_DEF') and C routines"
	echo "                (include abc.inc to abc_inc)"
	echo "       A4   alter INTEGER*4/REAL*4/REAL*8/LOGICAL*1 into:"
	echo "                INTEGER/REAL/DOUBLE PRECISION/BYTE"
	echo "            May combine switches (A6 = A2 + A4)"
	echo "   C  NC    compile .FOR, .F$ext, .FUN, .M$ext, .CEE, C$ext,"
	echo "                .CUN, .FSC, .CSC, .SSC, .PSC," 
	echo "                .DSC, .PIN, .HLP, .DEF, .INC, .A$ext, .X$ext"
	echo "   D  ND    use DEBUG (-g) in compiling"
	echo "   L  NL    save .o in wnlib.olb (if C), and save text of all"
	echo "      L1    files (except some, see filename help) in wnlib.tlb."
	echo "            L1: only uses .olb, not .tlb"
	echo "            By specifying L<name> the default wnlib name can be"
	echo "            overwritten."
	echo "   O  NO    optimize compilation"
	echo "  NP   P    print the compilation listing"
	echo "  NU   U    update in DWARF sytem if .PIN"
	echo "            update in WN system if .DEF, .PEF, .DSF or .INC"
	echo "   X  NX    produce XREF listing in Fortran compilation"
	echo "   Z  NZ    act on .GRP extension"
	echo ""
	echo "      QB<.> background execution qualifier. Default: $bQ_D"
	echo "      QC<.> C qualifier. Default: $cQ_D"
	echo "      QF<.> Fortran qualifier. Default: $fQ_D"
	echo "      QM<.> Macro (assembler) qualifiers. Default: $mQ_D"
	echo "      QP<.> Pure extensions (with .). Only files with these"
	echo "            extensions will be done. Default: $pQ_D"
	echo ""
	goto HLP1
#
# NNET codes
#
H1nn:
	echo "  NA   A    ask node information, i.s.o. using defaults"
	echo "   Z  NZ    act on .GRP extension"
	echo ""
	echo "      QB<.> background execution qualifier. Default: $bQ_D"
	echo "      QP<.> Pure extensions (with .). Only files with these"
	echo "            extensions will be done. Default: $pQ_D"
	echo ""
	goto HLP1
#
# NDEL codes
#
H1nd:
	echo "   A  NA    ask confirmation for each deletion"
	echo "   C  NC    compiled data (.o, .ppd etc) are deleted"
	echo "   L  NL    delete .o in wnlib.olb (if C), and delete text of"
	echo "      L1    files (except some, see filename help) in wnlib.tlb."
	echo "            L1: only uses .olb, not .tlb"
	echo "            By specifying L<name> the default wnlib name can be"
	echo "  NU   U    delete in DWARF sytem if .PIN"
	echo "            delete in WN system if .DEF, .PEF, .DSF or .INC"
	echo "   Z  NZ    act on .GRP extension"
	echo ""
	echo "      QB<.> background execution qualifier. Default: $bQ_D"
	echo "      QP<.> Pure extensions (with .). Only files with these"
	echo "            extensions will be done. Default: $pQ_D"
	echo ""
	echo " Note: only files present in (specified) directory can be deleted"
	echo "       if wildcards or no extension present."
	echo ""
	goto HLP1
#
# NGET codes
#
H1ng:
	echo "  NA   A    always get new file from .tlb, even if present"
	echo "   L  NL    use wnlib.tlb to extract files."
	echo "            By specifying L<name> the default wnlib name can be"
	echo "            overwritten."
	echo "   Z  NZ    act on .GRP extension"
	echo ""
	echo "      QB<.> batch execution qualifier. Default: $bQ_D"
	echo "      QP<.> Pure extensions (with .). Only files with these"
	echo "            extensions will be done. Default: $pQ_D"
	echo ""
	goto HLP1
#
# NLINK codes
#
H1nl:
	echo "  NA   A1   alter startup routine to exclude logging (Dwarf)"
	echo "   D  ND    use DEBUG (-g) in linking"
	echo "   L  NL    use as L<name> to overwrite the default object"
	echo "            library wnlib with other name."
	echo "  NP   P    print the link map"
	echo "   S  NS    use DWARF library in linking"
	echo "  NU   U    update in DWARF sytem"
	echo "  NX   X    produce XREF listing in link map"
	echo "   Z  NZ    act on .GRP extension"
	echo ""
	echo "      QB<.> batch execution qualifier. Default: $bQ_D"
	echo "      QL<.> link qualifiers. Default: $lQ_D"
	echo "      QO<.> link options. Default: $oQ_D"
	echo ""
	goto HLP1
HLP1:
	echo "General Help by just typing > nxec"
	echo ""
	goto exex						# ask codes
#
# Filename level
#
HLPA3:
	echo ""
	echo "Filenames can be specified in separate arguments, or separated"
	echo "by commas in a single argument. Filenames can contain wildcards."
	echo "If no extension is given .* is assumed, except for indirect"
	echo "files where .GRP is assumed. A filename preceded by"
	echo "an @ will be assumed to be indirect and contain filenames,"
	echo "as will be files with"
	echo "a .GRP extension (unless NZ code specified)."
	echo "The current default device and directory will be assumed if"
	echo "none are specified."
	echo "Filenames can be given (except for nlink) as regular expressions"
	echo "(they should in general be enclosed in ''). In that case"
	echo "the regular expression will be matched against files in"
	echo "in the .tlb text library."
	echo ".GRP and @ files will contain a filename per line, optionally"
	echo "followed by a comment preceded with a \!, or will be a comment"
	echo "line starting with a \!. The filenames must have"
	echo "extensions, and cannot contain wildcards, but may have device"
	echo "and directory information."
	echo "Optionally the filename may be followed by standard switches,"
	echo "indicating codes to be used for this line only, e.g. compilation or"
	echo "linking data. E.g. A.FOR -no  will be compiled with"
	echo "no optimizing."
	echo "If the line starts with a # the line will be"
	echo "a UNIX shell command."
	echo "If the line starts with a $ ,"
	echo "the line will be given to DCL to be executed (e.g. to"
	echo "assign logical names)."
	echo 'If the line starts with $$ or ## the next 3 characters are'
	echo 'checked if they are pp$ (pp#) (pp any two characters). If the'
	echo "pp characters are identical to the program name that invoked"
	echo "the current .grp (e.g. NC), the command will be executed."
	echo "The action of the command will depend on the type of the file."
	echo "For $pnam the action will be:"
	echo "  .GRP          will be read as an indirect file (if not NZ code)"
	goto H2$pcod
#
# NCOMP files
#
H2nc:
	echo "  .FOR, .F$ext, .FUN, .FSC"
	echo "                will be compiled as Fortran programs (if C code)"
	echo "  .CEE, .C$ext, .CUN, .CSC"
	echo "                will be compiled as C programs (if C)"
	echo "  .M$ext        will be compiled as Macro program (if C)"
	echo "  .DSC          will be handled by WNGTAB (if C)"
	echo "  .HLP          will be put in .HLB with same name (if C)"
	echo "  .PIN, .PSC    will be compiled (if C)"
	echo "  .SSC          will be compiled (if C)"
	echo "  .DEF, .INC    will be compiled (if C)"
	echo "                All of the above will be put in"
	echo "                .tlb (unless NL or L1 code)"
	echo "  .A$ext        will be converted to an .olb (if C)"
	echo "  .X$ext        will be converted to an .exe (if C)"
	echo "  .A??, .X??    will be put in _ax.tlb (unless NL or L1 code)"
	echo "  $chtp[1-8]"
	echo "  $chtp[9*] will be skipped"
	echo "  All other files with 3 character extensions will be put in .tlb"
	echo "  (unless NL or L1 code specified)."
	echo "  All other files will be skipped."
	goto H21
#
# NNET files
#
H2nn:
	echo "  $chtp[1-8]"
	echo "  $chtp[9*] will be skipped"
	echo "  All other files with 3 character extensions will be got"
	echo "  All other files will be skipped."
	goto H21
#
# NDEL files
#
H2nd:
	echo "  .FOR, .F$ext, .FUN, .FSC"
	echo "                will be deleted as Fortran programs (if C code)"
	echo "  .CEE, .C$ext, .CUN, .CSC"
	echo "                will be deleted as C programs (if C code)"
	echo "  .M$ext        will be deleted as Macro program (if C)"
	echo "  .DSC          will be handled by WNGTAB (if C)"
	echo "  .HLP          will be put in .HLB with same name (if C)"
	echo "  .EXE          will be deleted as a task image"
	echo "  .PIN, .PSC    will be deleted (if C)"
	echo "  .SSC          will be deleted (if C)"
	echo "  .DEF, .INC    will be deleted (if C)"
	echo "                All of the above (except .exe) will be deleted"
	echo "                    from .tlb (unless NL or L1 code)"
	echo "  .A??, .X??    will be deleted, also from _ax.tlb (unless codes)"
	echo "  $chtp[1-8]"
	echo "  $chtp[9*] will be skipped"
	echo "  All other files with 3 character extensions will be deleted"
	echo "  from .tlb (unless NL or L1 code specified)."
	echo "  All other files will be skipped."
	goto H21
#
# NGET files
#
H2ng:
	echo "  $chtp[1-8]"
	echo "  $chtp[9*] will be skipped"
	echo "  All other files with 3 character extensions will be got"
	echo "                 from .tlb (unless NL or L1 code specified)."
	echo "  All other files will be skipped."
	goto H21
#
# NLINK files
#
H2nl:
	echo "  .EXE          will produce program"
	echo "                if no extension program will be produced"
	goto H21
H21:
	echo ""
	goto exex
#
# Ready
#
exex:
	exit

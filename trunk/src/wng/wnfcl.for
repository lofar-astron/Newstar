C+ WNFCL.FOR
C  WNB 890725
C
C  Revisions:
C	WNB 930811	Get rid of L_
C
	LOGICAL FUNCTION WNFCL(FCA)
C
C  Close file for read/write/update access
C
C  Result:
C	WNFCL_L = WNFCL( FCA:J:IO)
C			Close file pointed to by dynamic control area in FCA.
C
C  PIN references:
C
C
C  Include files:
C
	INCLUDE 'WNG_DEF'
	INCLUDE 'MCA_O_DEF'			!MCA
	INCLUDE 'FCA_O_DEF'			!FCA
	INCLUDE 'FBC_O_DEF'			!FBC
	INCLUDE 'FEL_O_DEF'			!FEL
C
C  Parameters:
C
C
C  Arguments:
C
	INTEGER FCA				!DYNAMIC FILE AREA
C
C  Function references:
C
	INTEGER WNFCL_X				!ACTUAL CLOSING
	INTEGER WNFTFC				!TEST FCA PRESENT
C
C  Data declarations:
C
C
C  Equivalences:
C
C
C  Commons:
C
C-
C
C TEST FCA
C
	WNFCL=.FALSE.					!ASSUME ERROR
	CALL WNFINI					!START SYSTEM
	I0=WNFTFC(FCA)					!TYPE OF BLOCK
	IF (I0.EQ.0) RETURN				!ILLEGAL FCA
	J=FCA
	J1=(J-A_OB)/LB_J				!DUMMY ARRAY OFFSET
	IF (I0.LT.0) THEN				!TAPE
	  J=A_J(J1+MCA_FCA_J)				!PROPER FCA
	  IF (J.EQ.0) RETURN				!NO FILE OPEN ON MCA
	  J1=(J-A_OB)/LB_J				!DUMMY ARRAY OFFSET
	END IF
	J2=FCA						!POSSIBLE MCA ADDRESS
	J3=(J2-A_OB)/LB_J				!DUMMY ARRAY MCA
C
C DO CLOSE
C
	CALL WNFPUR(FCA)				!PURGE BUFFERS
	E_C=WNFCL_X(A_B(J-A_OB),A_B(J2-A_OB))		!DO CLOSE
C
C QUEUES
C
	I=FEL__NFEL*FELHDL				!LENGTH ELEMENTS
	CALL WNGFVM(I,A_J(J1+FCA_FEP_J))		!FREE ELEMENT AREA
	I2=0						!COUNT BUFFERS
	I3=A_J(J1+FCA_BQA_J)				!FIRST
	DO WHILE (I3.NE.J+FCA_BQA_1)			!ALL BUFFERS
	  I2=I2+1					!COUNT
	  I4=(I3-A_OB)/LB_J				!ARRAY INDEX
	  CALL WNGFVM(A_J(J1+FCA_BLEN_J),A_J(I4+FBC_ADDR_J)) !FREE MEMORY
	  I3=A_J(I4+FBC_BQA_J)				!NEXT
	END DO
	I=I2*FBCHDL					!LENGTH BUF CONTROL
	CALL WNGFVM(I,A_J(J1+FCA_BCP_J))		!FREE CONTROL AREA
	IF (IAND(E_C,1).EQ.1) WNFCL=.TRUE.
	IF (I0.GE.0) THEN				!DISK
	  CALL WNFUFC(FCA)				!UNLINK LIST
	  FCA=0						!SET NOT OPEN
	ELSE						!TAPE
	  A_J(J3+MCA_FCA_J)=0				!SET NOT OPEN
	END IF
	CALL WNGFVM(FCAHDL,J)				!FREE FCA
C
	RETURN
C
C
	END

C+ WNFCL_X.FVX
C  WNB 930804
C
C  Revisions:
C
	INTEGER FUNCTION WNFCL_X(FCAJ,MCAJ)
C
C  Close file
C
C
C  Result:
C
C	WNFCL_X_J = WNFCL_X( FCAJ_J(0:*):I, MCAJ_J(0:*):I)	Close file
C
C  Include files:
C
	INCLUDE 'WNG_DEF'
	INCLUDE '($SSDEF)'		!ERROR CODES
	INCLUDE '($IODEF)'		!I/O CODES
	INCLUDE 'FCA_O_DEF'		!FCA
	INCLUDE 'MCA_O_DEF'		!MCA
C
C  Parameters:
C
C
C  Arguments:
C
	INTEGER FCAJ(0:*)	!FCA BLOCK
	INTEGER MCAJ(0:*)	!MCA BLOCK
C
C  Function references:
C
	INTEGER SYS$DASSGN
	INTEGER SYS$QIOW
	INTEGER WNFTWR		!WRITE TAPE BLOCK
	INTEGER WNFTTM		!WRITE TM
	INTEGER WNFTSF		!SKIP TAPE FILE
C
C  Data declarations:
C
	INTEGER ECOD		!LOCAL ERROR CODE
	BYTE DBLK(0:79)		!DUMMY BLOCK
	CHARACTER*6 STR1
	INTEGER XXB(0:1)	!FOR FILE FIND
C-
C
C INIT
C
	ECOD=SS$_NORMAL				!ASSUME OK
C
C WRITE TAPE EOF
C
	IF (IAND(FCAJ(FCA_BITS_J),FCA_M_MAG).NE.0) THEN !TAPE
	  IF (IAND(FCAJ(FCA_BITS_J),FCA_M_WRTAPE).NE.0) THEN !TAPE WRITE
	    IF (FCAJ(FCA_MAP_J).LE.0) THEN	!NOTHING WRITTEN
	      CALL WNGMVZ(80,DBLK)
	      JS=WNFTWR(MCAJ,DBLK)		!WRITE DUMMY BLOCK
	      FCAJ(FCA_MAP_J)=FCAJ(FCA_MAP_J)+80 !COUNT DATA
	      FCAJ(FCA_MAB_J)=FCAJ(FCA_MAB_J)+1	!COUNT BLOCKS
	      IF (ECOD) ECOD=JS			!PRESERVE ERROR
	    END IF				!NOTHING WRITTEN
	    JS=WNFTTM(MCAJ)			!WRITE EOD TM
	    MCAJ(MCA_MAGF_J)=MCAJ(MCA_MAGF_J)+1	!COUNT FILES
	    IF (ECOD) ECOD=JS			!PRESERVE ERROR
	    IF (IAND(MCAJ(MCA_BITS_J),MCA_M_UNL).EQ.0) THEN !LABELED
	      MCAJ(MCA_HD1_1/LB_J)='EOF1'	!EOF1
	      MCAJ(MCA_HD2_1/LB_J)='EOF2'	!EOF2
	      CALL WNCTXS(STR1,'!6$ZJ',FCAJ(FCA_MAB_J)) !# OF BLOCKS
	      CALL WNGMFS(6,STR1,A_B(%LOC(MCAJ)-A_OB+MCA_HD1_1+54))
	      JS=WNFTWR(MCAJ,MCAJ(MCA_HD1_1/LB_J)) !WRITE EOF1
	      IF (ECOD) ECOD=JS			!PRESERVE ERROR
	      JS=WNFTWR(MCAJ,MCAJ(MCA_HD2_1/LB_J)) !WRITE EOF2
	      IF (ECOD) ECOD=JS			!PRESERVE ERROR
	      JS=WNFTTM(MCAJ)			!WRITE TM
	      MCAJ(MCA_MAGF_J)=MCAJ(MCA_MAGF_J)+1 !COUNT FILES
	      IF (ECOD) ECOD=JS			!PRESERVE ERROR
	    END IF				!LABELED TAPE
	    JS=WNFTTM(MCAJ)			!WRITE EOV TM
	    MCAJ(MCA_MAGF_J)=MCAJ(MCA_MAGF_J)+1	!COUNT FILES
	    IF (ECOD) ECOD=JS			!PRESERVE ERROR
	    JS=WNFTSF(MCAJ,-2)			!BACKUP TAPE
	    MCAJ(MCA_MAGF_J)=MCAJ(MCA_MAGF_J)-2	!COUNT FILES
	    IF (ECOD) ECOD=JS			!PRESERVE ERROR
	  END IF				!TAPE WRITE
	  JS=WNFTSF(MCAJ,1)			!FORWARD TAPE
	  MCAJ(MCA_MAGF_J)=MCAJ(MCA_MAGF_J)+1	!COUNT FILES
	  IF (ECOD) ECOD=JS			!PRESERVE ERROR
	END IF					!TAPE
C
C DE-ACCESS
C
	IF (IAND(FCAJ(FCA_BITS_J),FCA_M_ACC).NE.0) THEN !ACCESSED
	  FCAJ(FCA_BITS_J)=IAND(FCAJ(FCA_BITS_J),
	1		NOT(FCA_M_ACC))		!SET DEACCESSED
	  CALL WNFCL_X0(FCAJ,FCAJ,FCAJ(FCA_FIBJ_J)) !SET TRUNCATE
	  JS=SYS$QIOW(,%VAL(FCAJ(FCA_CHAN_J)),%VAL(IO$_DEACCESS),
	1		FCAJ(FCA_IOSB_J),,,
	1		FCAJ(FCA_FIBDES_J),,,,
	1		FCAJ(FCA_ATRJ_J),)	!DEACCESS
	  IF (ECOD) ECOD=JS			!PRESERVE SUBMIT ERROR
	  IF (ECOD) ECOD=FCAJ(FCA_IOSB_J)	!PRESERVE I/O ERROR
C
C DELETE TMP FILE
C
	  IF (IAND(FCAJ(FCA_BITS_J),FCA_M_TMP).NE.0) THEN !DELETE FILE
	    CALL WNFCL_X1(FCAJ,FCAJ,FCAJ(FCA_FIBJ_J)) !SET FIB
	    XXB(0)=80				!PREPARE BLOCK
	    XXB(1)=%LOC(DBLK)
	    JS=SYS$QIOW(,%VAL(FCAJ(FCA_CHAN_J)),
	1		%VAL(IOR(IO$_DELETE,IO$M_DELETE)),
	1		FCAJ(FCA_IOSB_J),,,
	1		FCAJ(FCA_FIBDES_J),,
	1		I1,XXB,,)		!DELETE FILE
	    IF (ECOD) ECOD=JS			!PRESERVE SUBMIT ERROR
	    IF (ECOD) ECOD=FCAJ(FCA_IOSB_J)	!PRESERVE I/O ERROR
	  END IF				!TMP FILE
	END IF					!ACCESSED
C
C DE-ASSIGN CHANNEL
C
	IF (IAND(FCAJ(FCA_BITS_J),FCA_M_ASS).NE.0) THEN !ASSIGNED
	  FCAJ(FCA_BITS_J)=IAND(FCAJ(FCA_BITS_J),
	1		NOT(FCA_M_ASS))		!SET DEASSIGNED
	  JS=SYS$DASSGN(%VAL(FCAJ(FCA_CHAN_J)))	!DE-ASSIGN
	END IF
C
C FREE EF'S
C
	CALL LIB$FREE_EF(FCAJ(FCA_EF_J))
	CALL LIB$FREE_EF(FCAJ(FCA_EFA_J))
C
C READY
C
	WNFCL_X=IAND('0000FFFF'X,ECOD)		!RETURN ERROR
C
	RETURN
C
C
	END
C
C MANIPULATE FIB
C
C PREPARE FOR TRUNCATE
C
	SUBROUTINE WNFCL_X0(FCAJ,FCAB,FIB)
C
	INCLUDE 'WNG_DEF'
	INCLUDE '($FIBDEF)'
	INCLUDE 'FCA_O_DEF'
C
	INTEGER LIB$EXTZV
C
	INTEGER FCAJ(0:*)
	  BYTE FCAB(0:*)
	RECORD /FIBDEF/ FIB
C
	I=FCAJ(FCA_EOF_J)+1023			!SET FIRST BLOCK TRUNCATE
	FIB.FIB$L_EXVBN=LIB$EXTZV(9,23,I)
	FIB.FIB$L_EXSZ=0
	CALL WNF_EOF(FCAJ)			!SET EOF CORRECT FORMAT
	FIB.FIB$W_EXCTL=
	1	IOR(FIB.FIB$W_EXCTL,FIB$M_TRUNC) !SET TRUNCATE
C
	RETURN
C
C PREPARE FOR DELETE
C
	ENTRY WNFCL_X1(FCAJ,FCAB,FIB)
C
	CALL WNGMV(6,FCAB(FCA_DID_1),
	1		FIB.FIB$W_DID)		!SET DIR. ID
	FIB.FIB$W_NMCTL=
	1	IOR(FIB.FIB$W_NMCTL,FIB$M_FINDFID) !FIND FILE ID
C
	RETURN
C
C
	END

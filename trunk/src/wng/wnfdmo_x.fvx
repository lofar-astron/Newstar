C+ WNFDMO_X.FVX
C  WNB 930804
C
C  Revisions:
C
	INTEGER FUNCTION WNFDMO_X(MCAJ)
C
C  Dismount tape
C
C
C  Result:
C
C	WNFDMO_X_J = WNFDMO_X( MCAJ_J(*):I)		Dismount tape
C
C  Include files:
C
	INCLUDE 'WNG_DEF'
	INCLUDE '($IODEF)'		!I/O CODES
	INCLUDE '($DMTDEF)'		!DISMOUNT CODES
	INCLUDE '($SSDEF)'		!ERROR CODES
	INCLUDE 'MCA_O_DEF'		!MCA
C
C  Parameters:
C
C
C  Arguments:
C
	INTEGER MCAJ(0:*)		!MCA BLOCK
C
C  Entry points:
C
C
C  Function references:
C
	INTEGER SYS$DASSGN
	INTEGER SYS$DISMOU
	INTEGER SYS$DALLOC
C
C  Data declarations:
C
C-
C
C INIT
C
	WNFDMO_X=SS$_NORMAL			!ASSUME OK
C
C DISMOUNT
C
	CALL WNFTRW(MCAJ)			!REWIND
	IF (IAND(MCAJ(MCA_BITS_J),MCA_M_ASS).NE.0) THEN !ASSIGNED
	  JS=SYS$DASSGN(%VAL(MCAJ(MCA_CHAN_J)))	!DEASSIGN
	  IF (.NOT.JS) THEN			!ERROR
	    IF (WNFDMO_X) WNFDMO_X=JS		!NOT YET ERROR
	  END IF
	END IF
	IF (IAND(MCAJ(MCA_BITS_J),MCA_M_MOU).NE.0) THEN !MOUNTED
	  JS=SYS$DISMOU(MCAJ(MCA_UNDES_J),%VAL(DMT$M_NOUNLOAD)) !DISMOUNT
	  IF (.NOT.JS) THEN			!ERROR
	    IF (WNFDMO_X) WNFDMO_X=JS		!NOT YET ERROR
	  END IF
	END IF
	IF (IAND(MCAJ(MCA_BITS_J),MCA_M_ALL).NE.0) THEN !ALLOCATED
	  JS=SYS$DALLOC(MCAJ(MCA_UNDES_J),)	!DEALLOCATE
	  IF (.NOT.JS) THEN			!ERROR
	    IF (WNFDMO_X) WNFDMO_X=JS		!NOT YET ERROR
	  END IF
	END IF
C
C READY
C
	WNFDMO_X=IAND('0000FFFF'X,WNFDMO_X)	!RETURN ERROR
C
	RETURN
C
C
	END

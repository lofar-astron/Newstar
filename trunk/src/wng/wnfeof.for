C+ WNFEOF.FOR
C  WNB 900107
C
C  Revisions:
C	WNB 920108	Correct tape label returned
C	WNB 930811	Get rid of L_
C       HjV 941107	Add code to WNFTLN (0 to 4)
C	CMV 950102	No interrecord gap for disk: units
C
	INTEGER FUNCTION WNFEOF(FCA)
C
C  Get current EOF position
C
C  Result:
C	WNFEOF_J = WNFEOF( FCA_J:I)
C			Get current EOF position of file open in FCA or 0.
C	WNFTLB_J = WNFTLB( FCA_J:I)
C			Get current tape label open for FCA or 0.
C	WNFTLN_R = WNFTLN( FCA_J:I, CODE_J:I)
C			Get length of current tape label in CODE or 0.
C			0 = inches
C       		1 = bytes
C       		2 = Kbytes
C       		3 = Mbytes
C       		4 = Gbytes
C
C  PIN references:
C
C
C  Include files:
C
	INCLUDE 'WNG_DEF'
	INCLUDE 'MCA_O_DEF'			!MCA
	INCLUDE 'FCA_O_DEF'			!FCA
C
C  Parameters:
C
C
C  Arguments:
C
	INTEGER FCA				!DYNAMIC FILE AREA
	INTEGER CODE				!LENGTH CODE
C
C  Entry points:
C
	INTEGER WNFTLB				!CURRENT TAPE LABEL
	REAL    WNFTLN				!CURRENT TAPE LABEL LENGTH
C
C  Function references:
C
	INTEGER WNFTFC				!TEST FCA PRESENT
C
C  Data declarations:
C
C
C  Equivalences:
C
C
C  Commons:
C
C-
C
C WNFEOF
C
	WNFEOF=0					!ASSUME ERROR
	I0=WNFTFC(FCA)					!TYPE OF BLOCK
	IF (I0.EQ.0) RETURN				!CANNOT DO
	J=FCA
	IF (I0.LT.0) THEN				!TAPE
	  J1=(J-A_OB)/LB_J				!DUMMY ARRAY OFFSET
	  J=A_J(J1+MCA_FCA_J)				!PROPER FCA
	  IF (J.EQ.0) RETURN				!NO TAPE FILE OPEN
	END IF
	J1=(J-A_OB)/LB_J				!DUMMY ARRAY OFFSET
	WNFEOF=A_J(J1+FCA_EOF_J)			!GET EOF
C
	RETURN
C
C WNFTLB
C
	ENTRY WNFTLB(FCA)
C
	WNFTLB=0					!ASSUME ERROR
	I0=WNFTFC(FCA)					!TYPE OF BLOCK
	IF (I0.GE.0) RETURN				!CANNOT DO
	J=FCA
	J1=(J-A_OB)/LB_J				!DUMMY ARRAY OFFSET
	IF (A_J(J1+MCA_FCA_J).EQ.0) RETURN		!NO TAPE FILE OPEN
	WNFTLB=A_J(J1+MCA_MAGF_J)			!GET LABEL
	IF (IAND(A_J(J1+MCA_BITS_J),MCA_M_UNL).EQ.0) WNFTLB=WNFTLB/3 !LABELED
	WNFTLB=WNFTLB+1					!PROPER LABEL
C
	RETURN
C
C WNFTLN
C
	ENTRY WNFTLN(FCA,CODE)
C
	WNFTLN=0.E0					!ASSUME ERROR
	I0=WNFTFC(FCA)					!TYPE OF BLOCK
	IF (I0.GE.0) RETURN				!CANNOT DO
	J=FCA
	J1=(J-A_OB)/LB_J				!DUMMY ARRAY OFFSET
	J2=A_J(J1+MCA_FCA_J)				!PROPER FCA
	IF (J2.EQ.0) RETURN				!NO TAPE FILE OPEN
	J3=(J2-A_OB)/LB_J				!DUMMY ARRAY OFFSET
	I1=A_J(J3+FCA_MAP_J)				!BYTES WRITTEN
	I2=A_J(J3+FCA_MAB_J)				!BLOCKS WRITTEN
	I3=1						!TAPE MARKS
	IF (IAND(A_J(J1+MCA_BITS_J),MCA_M_UNL).EQ.0) THEN !LABELED TAPE
	  I1=I1+320					!HEADERS
	  I2=I2+4					!BLOCKS
	  I3=I3+2					!TAPE MARKS
	END IF
	IF (A_J(J1+MCA_UNDES_J).NE.0) THEN		!NOT TRUE TAPE UNIT
	  R1=0						!NO EXTRA SPACE
	ELSE
	  R1=MCA__IRG/100.E0				!INTERRECORD GAP
	  R1=(I2*R1)+(I3*(MCA__TML/100.E0))		!EXTRA SPACE
	END IF
	IF (CODE.EQ.0) THEN
	  R0=A_J(J1+MCA_DENS_J)*1.E0			!BPI
	  WNFTLN=(I1/R0)+R1				!IN INCHES
	ELSE
	  WNFTLN=I1+R1*A_J(J1+MCA_DENS_J)		!IN BYTES
	  IF (CODE.EQ.2) THEN
	    WNFTLN=WNFTLN/1024.E0			!IN KBYTES
	  ELSE IF (CODE.EQ.3) THEN
	    WNFTLN=WNFTLN/(1024.E0**2)			!IN MBYTES
	  ELSE IF (CODE.EQ.4) THEN
	    WNFTLN=WNFTLN/(1024.E0**3)			!IN GBYTES
	  END IF
	END IF
C
	RETURN
C
C
	END

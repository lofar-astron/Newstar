C+ WNPCAL.FOR
C  WNB 911223
C
C  Revisions:
C
C  Calcomp routines for WQ package
C
	SUBROUTINE PLOTS(RR1,RR2,II3)
C
C  Result:
C
C
C  Include files:
C
	INCLUDE 'WNG_DEF'
C
C  Entry points:
C
C
C  Parameters:
C
C
C  Arguments:
C
	REAL RR1,RR2,RR3,RR4,RR5
	INTEGER II1,II3,II4,II5,II6,II7
	CHARACTER*(*) SS1
	REAL AR1(*),AR2(*),AR4(*),AR6(*)
	INTEGER IA(*)
C
C  Function references:
C
	LOGICAL WQDVOP			!DEVICE OPEN ROUTINE
C
C  Data declarations:
C
	INTEGER WQID			!WQ AREA
	CHARACTER*1 CR,LF
	BYTE IIK(2)
	EQUIVALENCE (IIK,CR)
	EQUIVALENCE (IIK(2),LF)
	  DATA IIK/13,10/
	REAL P(2,3)
	REAL PW(2,2)
	  DATA PW/0.,0.,8000.,11000./
	REAL PV(2,2)
	  DATA PV/0.,0.,.727272,1./
	REAL UP(2)
	REAL UR1,UR2,UR3,UR4,UR5
	REAL X1,X2,X3,X4,X5
	INTEGER J6
	REAL RANGE(2)
	  DATA RANGE/0.,16./
	REAL XT(2,4),XU(2,5)
	REAL SIZV,SIZH
	  DATA SIZV,SIZH/11000.,8000./
	CHARACTER*5 STR1,STR2
	INTEGER NEWP
	REAL PENC
	CHARACTER*32 STR
	CHARACTER*112 SYMTAB		!SPECIAL SYMBOLS
	INTEGER*2 SYMGR(2,14,0:15)	!CENTRED SYMBOLS
	  DATA SYMGR /	0,2,-2,0,0,-4,4,0,0,4,-2,0,0,-2,14*0,
	1		0,2,-1,0,-1,-1,0,-2,1,-1,2,0,1,1,0,2,-1,1,-1,0,0,-2,6*0,
	1		0,2,-2,-3,4,0,-2,3,0,-2,18*0,
	1		-2,0,4,0,-2,0,0,2,0,-4,0,2,16*0,
	1		-2,-2,4,4,-2,-2,-2,2,4,-4,-2,2,16*0,
	1		0,2,-2,-2,2,-2,2,2,-2,2,0,-2,16*0,
	1		0,-2,0,4,-2,-2,4,0,-2,2,0,-2,16*0,
	1		-2,-2,4,4,-4,0,4,-4,-2,2,18*0,
	1		-1,0,2,0,-1,0,-2,-2,4,0,-4,0,4,4,-4,0,4,0,-2,-2,8*0,
	1		-2,2,2,-2,2,2,-2,-2,0,-2,0,2,16*0,
	1		2,2,-1,-1,-2,0,-1,1,1,-1,0,-2,-1,-1,1,1,2,0,1,-1,-1,1,
	1				0,2,-1,-1,2*0,
	1		-2,-2,4,4,-2,-2,-2,2,4,-4,-2,2,-2,0,4,0,-2,0,0,2,0,-4,
	1		0,2,4*0,-2,-2,4,0,-4,4,4,0,-2,-2,18*0,
	1		0,2,0,-4,0,2,22*0,
	1		0,2,-2,-3,4,0,-2,3,0,-1,-2,0,2,-3,2,3,-2,0,0,-1,8*0,
	1		-2,0,4,0,-2,0,22*0/
	BYTE TONPAT(8,0:15)		!PATTERNS
	  DATA TONPAT/8*0,0,68,0,0,0,68,0,0,0,0,0,24,24,0,0,0,
	1		0,102,102,0,0,102,102,0,17,34,68,136,17,34,68,136,
	1		136,68,34,17,136,68,34,17,
	1		153,102,102,153,153,102,102,153,
	1		131,7,14,28,56,112,224,193,
	1		193,224,112,56,28,14,7,131,
	1		196,231,126,76,76,126,231,196,255,0,0,0,255,0,0,0,
	1		8*17,255,17,17,17,255,17,17,17,3*255,5*0,
	1		8*224,3*255,5*224/
	REAL FAC,X,Y,XOFF,YOFF
C
C  Common:
C
	COMMON /WQCALCOM/ FAC,X,Y,XOFF,YOFF,NEWP,PENC,SYMTAB,WQID
	  DATA FAC,X,Y,XOFF,YOFF/1000.,0.,0.,0.,0./
C
C  Inline functions:
C
	REAL XPOS,YPOS
	XPOS()=(MAX(MIN(XOFF+X,SIZH),0.))
	YPOS()=(MAX(MIN(YOFF+Y,SIZV),0.))
C-
C
C PLOTS
C
	WQID=0					!SET NOTHING OPEN
	CALL WQOPEN				!OPEN PACKAGE
	IF (.NOT.WQDVOP(WQID,'QMS')) RETURN	!OPEN PLOTTER
	CALL WQDVAC(WQID)			!ACTIVATE
	CALL WQSWIN(1,PW)			!SET SCALE
	CALL WQSVIE(1,PV)
	CALL WQSDVW(WQID,PV)
	CALL WQSLNT(1)
	X=0					!SET COORD.
	Y=0
	XOFF=0
	YOFF=0
	FAC=1000.
	NEWP=1
	PENC=1.
	CALL WQSPLR(WQID,1,1,PENC)
	SYMTAB='                 !"#$%&''()*+,-./0123456789:;<=>?'//
	1	'@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`abcdefghijklmno'//
	2	'pqrstuvwxyz{|}~ '		!SPECIAL SYMBOLS
C
	RETURN
C
C PLOT
C
	ENTRY PLOT(RR1,RR2,II3)
C
	IF (II3.EQ.-999) THEN
	  CALL WQCLR(WQID)
	  X=0
	  Y=0
	  XOFF=0
	  YOFF=0
	  NEWP=1
	  PENC=1.
	  CALL WQSPLR(WQID,1,1,PENC)
	ELSE IF (II3.EQ.999) THEN
	  CALL WQCLOS
	ELSE IF (II3.EQ.3) THEN
	  X=RR1*FAC
	  Y=RR2*FAC
	ELSE IF (II3.EQ.-3) THEN
	  XOFF=XOFF+RR1*FAC
	  YOFF=YOFF+RR2*FAC
	  X=0
	  Y=0
	ELSE IF (II3.EQ.2) THEN
	  P(1,1)=XPOS()
	  P(2,1)=YPOS()
	  X=RR1*FAC
	  Y=RR2*FAC
	  P(1,2)=XPOS()
	  P(2,2)=YPOS()
	  CALL WQPOLL(2,P)
	ELSE IF (II3.EQ.-2) THEN
	  P(1,1)=XPOS()
	  P(2,1)=YPOS()
	  XOFF=XOFF+RR1*FAC
	  YOFF=YOFF+RR2*FAC
	  X=0
	  Y=0
	  P(1,2)=XPOS()
	  P(2,2)=YPOS()
	  CALL WQPOLL(2,P)
	END IF
C
	RETURN
C
C FACTOR
C
	ENTRY FACTOR(RR1)
C
	FAC=RR1*1000.
C
	RETURN
C
C NEWPEN
C
	ENTRY NEWPEN(II1)
C
	NEWP=MAX(MIN(II1,8),1)
	PENC=II1
C
	RETURN
C
C WHERE
C
	ENTRY WHERE(RR1,RR2,RR3)
C
	RR3=FAC/1000.
	RR1=X/FAC
	RR2=Y/FAC
C
	RETURN
C
C NUMBER
C
	ENTRY NUMBER(RR1,RR2,RR3,RR4,RR5,II6)
C
	IF (II6.LT.0) THEN
	  WRITE (UNIT=STR,ERR=100,FMT=1100) NINT(RR4/(10**(-II6-1)))
 1100	  FORMAT(I6)
	ELSE
	  WRITE (UNIT=STR1,ERR=100,FMT=1111) II6
 1111	  FORMAT('F10.',I2.2)
	  WRITE (UNIT=STR,ERR=100,FMT=STR1) RR4
	END IF
	IF (RR1.EQ.999. .OR. RR2.EQ.999.) THEN	!USE CURRENT POS.
	ELSE
	  X=FAC*RR1
	  Y=FAC*RR2
	END IF
	UR5=PI*RR5/180.
	J4=1
	DO I=1,LEN(STR)
	  IF (STR(I:I).NE.' ') GOTO 101
	  J4=J4+1
	END DO
 101	CONTINUE
	J3=0
	DO I=J4,LEN(STR)
	  IF (STR(I:I).EQ.' ') GOTO 102
	  J3=J3+1
	END DO
 102	CONTINUE
	J4=MIN(J4,LEN(STR))
	J=MAX(1,J3)
	X1=RR3*FAC				!CHAR. SIZE
 103	CONTINUE
	CALL WQSTXH(X1)
	UP(1)=-SIN(UR5)
	UP(2)=COS(UR5)
	CALL WQSTXU(UP)				!CHARACTER DIMENSION
	P(1,1)=XPOS()
	P(2,1)=YPOS()
	CALL WQTEXT(P,STR(J4:J4+J-1))
	X=X+J*X1*UP(2)
	Y=Y-J*X1*UP(1)
C
 100	CONTINUE
	RETURN
C
C SYMBOL
C
	ENTRY SYMBOL(RR1,RR2,RR3,SS1,RR5,II6)
C
	IF (RR3.LT.0.) THEN			!SPECIAL MODE SET
	ELSE IF (II6.GE.0) THEN
	  J=MAX(1,MIN(II6,LEN(SS1)))
	  IF (RR1.EQ.999. .OR. RR2.EQ.999.) THEN !USE CURRENT POS.
	  ELSE
	    X=FAC*RR1
	    Y=FAC*RR2
	  END IF
	  X1=RR3*FAC				!CHAR. SIZE
	  UR5=PI*UR5/180.
	  STR=SS1
	  J4=1
	  GOTO 103
	ELSE					!SINGLE SYMBOL
	  IF (II6.LE.-2) THEN			!PLOT LINE
	    IF (RR1.EQ.999. .OR. RR2.EQ.999.) THEN !LEAVE POS.
	    ELSE
	      P(1,1)=XPOS()
	      P(2,1)=YPOS()
	      X=RR1*FAC
	      Y=RR2*FAC
	      P(1,2)=XPOS()
	      P(2,2)=YPOS()
	      CALL WQPOLL(2,P)
	    END IF
	  ELSE					!GET POS.
	    IF (RR1.EQ.999. .OR. RR2.EQ.999.) THEN !CURRENT POS.
	    ELSE
	      X=RR1*FAC
	      Y=RR2*FAC
	    END IF
	  END IF
	  J1=ICHAR(SS1(1:1))			!CHARACTER NUMBER
	  IF (J1.GE.16) THEN			!NORMAL CHARACTER
	    IF (J1.GE.LEN(SYMTAB)) J1=16	!SPACE
	    STR=SYMTAB(J1+1:J1+1)		!GET CORRECT CHARACTER
	    J4=1				!START STRING
	    J=1					!LENGTH STRING
	    X1=RR3*FAC				!CHARACTER SIZE
	    RR5=RR5*PI/180.
	    GOTO 103				!PLOT
	  ELSE					!SPECIAL GRAPHICS
	    X1=RR3*FAC/4			!SIZE QUART
	    P(1,2)=XPOS()
	    P(2,2)=YPOS()
	    J=0					!START ARRAY
	    DO WHILE (SYMGR(1,J,J1).NE.0 .AND. SYMGR(2,J,J1).NE.0)
	      X=X+SYMGR(1,J,J1)*X1		!PLOT COORD
	      Y=Y+SYMGR(2,J,J1)*X1
	      P(1,1)=P(1,2)
	      P(2,1)=P(2,2)
	      P(1,2)=XPOS()
	      P(2,2)=YPOS()
	      CALL WQPOLL(2,P)
	    END DO
	  END IF
	END IF
C
	RETURN
C
C TONE
C
	ENTRY TONE(AR1,AR2,IA,II4)
C
	IF (II4.GT.0) THEN
	  DO I=1,4
	    XT(1,I)=MAX(MIN(XOFF+AR1(I)*FAC,SIZH),0.)
	    XT(2,I)=MAX(MIN(YOFF+AR2(I)*FAC,SIZV),0.)
	  END DO
	  UR1=MIN(XT(1,1),XT(1,2),XT(1,3),XT(1,4))
	  UR2=MAX(XT(1,1),XT(1,2),XT(1,3),XT(1,4))
	  UR3=MIN(XT(2,1),XT(2,2),XT(2,3),XT(2,4))
	  UR4=MAX(XT(2,1),XT(2,2),XT(2,3),XT(2,4))
	  J=UR1
	  J1=UR3
	  J2=UR2-UR1
	  J3=UR4-UR3
	  P(1,1)=J
	  P(2,1)=J1
	  P(1,2)=J2
	  P(2,2)=0
	  P(1,3)=0
	  P(2,3)=J3
	  CALL WQ_BOX(1,P(1,1),P(1,2),(MOD(II4,10)+0.5)/10.,2) !FILL BOX
	END IF
C
	RETURN
C
C GRID
C
	ENTRY GRID(RR1,RR2,II3,AR4,II5,AR6,II7)
C
	IF (ABS(II3).LE.1000) THEN		!GET LENGTH OF LINES
	  UR3=II3*AR4(1)
	  J4=FAC*AR4(1)
	ELSE
	  UR3=0
	  DO I=1,ABS(II3)-1000
	    UR3=UR3+AR4(I)
	  END DO
	END IF
	IF (ABS(II5).LE.1000) THEN
	  UR4=II5*AR6(1)
	  J5=FAC*AR6(1)
	ELSE
	  UR4=0
	  DO I=1,ABS(II5)-1000
	    UR4=UR4+AR6(I)
	  END DO
	END IF
	J=MAX(MIN(XOFF+FAC*RR1,SIZH),0.)
	J1=MAX(MIN(YOFF+FAC*RR2,SIZV),0.)
	J2=FAC*UR3
	J3=FAC*UR4
	IF (II3.GE.0) THEN
	  CALL WQSPLR(WQID,1,IAND(II7,3)+1,PENC)
	  IF (II3.LE.1000) THEN
	    DO I=0,II3
	      P(1,1)=I*J4+J
	      P(2,1)=J1
	      P(1,2)=P(1,1)
	      P(2,2)=J3+P(2,1)
	      CALL WQPOLL(2,P)
	    END DO
	  ELSE
	    P(1,1)=J
	    P(2,1)=J1
	    P(1,2)=P(1,1)
	    P(2,2)=J3+P(2,1)
	    CALL WQPOLL(2,P)
	    UR3=0
	    DO I=1,II3-1000
	      UR3=UR3+AR4(I)
	      J6=FAC*UR3
	      P(1,1)=J6+J
	      P(2,1)=J1
	      P(1,2)=P(1,1)
	      P(2,2)=J3+P(2,1)
	      CALL WQPOLL(2,P)
	    END DO
	  END IF
	  CALL WQSPLR(WQID,1,1,PENC)
	END IF
	IF (II5.GE.0) THEN
	  CALL WQSPLR(WQID,1,IAND(II7,3)+1,PENC)
	  IF (II5.LE.1000) THEN
	    DO I=0,II5
	      P(1,1)=J
	      P(2,1)=I*J5+J1
	      P(1,2)=J2+P(1,1)
	      P(2,2)=P(2,1)
	      CALL WQPOLL(2,P)
	    END DO
	  ELSE
	    P(1,1)=J
	    P(2,1)=J1
	    P(1,2)=J2+P(1,1)
	    P(2,2)=P(2,1)
	    CALL WQPOLL(2,P)
	    UR4=0
	    DO I=1,II5-1000
	      UR4=UR4+AR6(I)
	      J6=FAC*UR4
	      P(1,1)=J
	      P(2,1)=J6+J1
	      P(1,2)=J2+P(1,1)
	      P(2,2)=P(2,1)
	      CALL WQPOLL(2,P)
	    END DO
	  END IF
	  CALL WQSPLR(WQID,1,1,PENC)
	END IF
C
	RETURN
C
C SCALE
C
	ENTRY SCALE(AR1,RR2,II3,II4)
C
	J=ABS(II4)				!DIRECTION
	X1=-1E30				!MAX
	X2=1E30					!MIN
	DO I=1,II3,J				!SCAN DATA FOR MAX/MIN
	  X1=MAX(AR1(I),X1)
	  X2=MIN(AR1(I),X2)
	END DO
	X3=(X1-X2)/RR2				!SCALE
	IF (X3.GT.0) THEN
	  X4=LOG10(X3)
	  X5=X4-INT(X4)				!FRACT. SCALE
	  X4=INT(X4)				!INTEGER SCALE
	  IF (X5.LT.0) THEN
	    X5=X5+1
	    X4=X4-1
	  END IF
	  X5=10**X5
	  IF (X5.LE.1.) THEN			!GET RANGE
	    X5=1.
	  ELSE IF (X5.LE.2.) THEN
	    X5=2.
	  ELSE IF (X5.LE.4.) THEN
	    X5=4.
	  ELSE IF (X5.LE.5.) THEN
	    X5=5.
	  ELSE IF (X5.LE.8.) THEN
	    X5=8.
	  ELSE
	    X5=10.
	  END IF
	  X5=X5*(10**X4)			!FULL SCALE
	ELSE
	  X5=1.
	END IF
	IF (II4.LT.0) THEN
	  AR1(II3*J+J+1)=-X5			!DELTAV
	  X4=INT(X1/X5)				!MAX
	  IF (X1/X5-X4.GT.0) X4=X4+1
	  AR1(II3*J+1)=X4*X5			!FIRSTV
	ELSE
	  AR1(II3*J+J+1)=X5
	  X4=INT(X2/X5)				!MIN
	  IF (X2/X5-X4.LT.0) X4=X4-1
	  AR1(II3*J+1)=X4*X5			!FIRSTV
	END IF
C
	RETURN
C
C
	END

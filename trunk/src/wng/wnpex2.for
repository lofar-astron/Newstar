C+ WNPEX2.FOR
C  WNB 920130
C
C  Revisions:
C
C  Extra routines WNP package
C
	LOGICAL FUNCTION WQ_MPAGE(DQID,NHV,PLDEV,MXNHV,USIZ,UXY)
C
C  Result:
C
C	L = WQ_MPAGE( DQID_J(*):O, NHV_J(0:1):O, PLDEV_C*:I, MXNHV_J(0:1):I,
C				USIZ_E:I, UXY_E(0:1,0:1):I)
C				Open multiple pages on PLDEV. Maximally
C				MXNHV  horizontally and vertically. Return the
C				device id's in DQID and the pages NHV opened.
C				USIZ is the square size in user coordinates for
C				one page, UXY the user total box.
C	L = WQ_MCLOSE( DQID_J(*):IO, NHV_J(0:1):I)
C				Close multiple pages
C	L = WQ_MDATE( DQID_J(*):I, NHV_J(0:1):I, PLDEV_C*:I)
C				Give dated message PLDEV on all pages
C	L = WQ_MPLR( DQID_J(*):I, NHV_J(0:1):I, PLJ1_J:I, PLJ2_J:I,
C				PLE1_E:I, PLJ3_J:I)
C				Set polyline representation give by PL's
C
C  Include files:
C
	INCLUDE 'WNG_DEF'
	INCLUDE 'WQG_DEF'		!GENERAL AREA
	INCLUDE 'WQD_O_DEF'		!DEVICE AREA
C
C  Parameters:
C
	REAL OFR			!OVERLAP FRACTION
	  PARAMETER (OFR=0.05)
C
C  Entry points:
C
	LOGICAL WQ_MCLOSE
	LOGICAL WQ_MDATE
	LOGICAL WQ_MPLR
C
C  Arguments:
C
	INTEGER DQID(0:*)		!DEVICE ID
	INTEGER NHV(0:1)		!PAGES DONE
	CHARACTER*(*) PLDEV		!DEVICE
	INTEGER MXNHV(0:1)		!MAX. PAGES ALLOWED
	REAL USIZ			!SIZE USER PAGE IF SQUARE
	REAL UXY(0:1,0:1)		!USER TOTAL SIZE
	INTEGER PLJ1,PLJ2,PLJ3		!POLYLINE
	REAL PLE1			!POLYLINE
C
C  Function references:
C
	LOGICAL WQDVOP			!OPEN DEVICE
	INTEGER WNMEJC			!CEIL
	INTEGER WNCALN			!STRING LENGTH
C
C  Data declarations:
C
	REAL XYS(0:1)			!PAGE SIZE
	REAL WINDOW(0:1,0:1)		!PAGE WINDOW
	REAL VIEW(0:1,0:1)		!PAGE SMALL VIEWPORT
	  DATA VIEW/0.,0.9,0.1,1./
	REAL OXY			!OVERLAP XY
	REAL XYP(0:1,0:1)		!CROSS POSITIONS
	REAL XYX(0:1,0:1)		!LINE POSITIONS
	CHARACTER*256 TXT		!ANNOTATION
C-
C
C INIT
C
	WQ_MPAGE=.TRUE.				!ASSUME OK
	CALL WQOPEN				!OPEN PLOT SYSTEM
C
C OPEN FIRST
C
	IF (.NOT.WQDVOP(DQID(0),PLDEV)) THEN	!OPEN PLOTTER
 10	  CONTINUE
	  WQ_MPAGE=.FALSE.
	  RETURN
	END IF
	CALL WQDVAC(DQID(0))			!ACTIVATE
	NHV(0)=1				!ASSUME 1 PAGE
	NHV(1)=1
	J0=(DQID(0)-A_OB)/LB_J			!POINTER ID
	J1=(DQID(0)-A_OB)/LB_E
	OXY=OFR*USIZ				!OVERLAP AREA
C
C CALCULATE PAGES
C
	IF (A_E(J1+WQD_XHI_E).EQ.A_E(J1+WQD_YHI_E)) THEN !SQUARE
	  XYS(0)=USIZ				!SET SIZE
	  XYS(1)=USIZ
	ELSE IF (A_E(J1+WQD_XHI_E).GT.A_E(J1+WQD_YHI_E)) THEN !LANDSCAPE
	  XYS(0)=USIZ*A_E(J1+WQD_XHI_E)/A_E(J1+WQD_YHI_E)
	  XYS(1)=USIZ
	ELSE					!PORTRAIT
	  XYS(0)=USIZ
	  XYS(1)=USIZ*A_E(J1+WQD_YHI_E)/A_E(J1+WQD_XHI_E)
	END IF
	IF (UXY(0,1)-UXY(0,0).GT.
	1		XYS(0)+(MXNHV(0)-1)*(XYS(0)-OXY)) THEN !CANNOT FIT
	  R0=(UXY(0,1)-UXY(0,0)+(MXNHV(0)-1)*OXY)/MXNHV(0)/XYS(0) !FACTOR
	  XYS(0)=R0*XYS(0)			!SCALE
	  XYS(1)=R0*XYS(1)
	END IF
	IF (UXY(1,1)-UXY(1,0).GT.
	1		XYS(1)+(MXNHV(1)-1)*(XYS(1)-OXY)) THEN !CANNOT FIT
	  R0=(UXY(1,1)-UXY(1,0)+(MXNHV(1)-1)*OXY)/MXNHV(1)/XYS(1) !FACTOR
	  XYS(0)=R0*XYS(0)			!SCALE
	  XYS(1)=R0*XYS(1)
	END IF
	IF (IAND(A_J(J0+WQD_TYP_J),128).EQ.0) THEN !NOT SCREEN DEVICE
	  NHV(0)=WNMEJC((UXY(0,1)-UXY(0,0)-XYS(0))/(XYS(0)-OXY)) !HOR. PAGES
	  NHV(0)=MIN(MXNHV(0),MAX(1,NHV(0)+1))
	  NHV(1)=WNMEJC((UXY(1,1)-UXY(1,0)-XYS(1))/(XYS(1)-OXY)) !VERT. PAGES
	  NHV(1)=MIN(MXNHV(1),MAX(1,NHV(1)+1))
	END IF
C
C OPEN PAGES
C
	DO I=1,NHV(0)*NHV(1)-1
	  IF (.NOT.WQDVOP(DQID(I),PLDEV)) GOTO 10 !OPEN
	  CALL WQDVAC(DQID(I))			!ACTIVATE
	END DO
C
C SET WINDOW
C
	WINDOW(0,0)=UXY(0,0)			!SQUARE WINDOW TOP LEFT
	WINDOW(1,0)=UXY(1,1)-USIZ
	WINDOW(0,1)=UXY(0,0)+USIZ
	WINDOW(1,1)=UXY(1,1)
	CALL WQSWIN(1,WINDOW)			!SET WINDOW
	CALL WQSVIE(1,VIEW)			!SET VIEW
	CALL WQSLNT(1)				!SELECT TRANSFORM
C
C SET DEVICE WINDOWS
C
	WINDOW(0,0)=0.				!X LEFT UNDER
	WINDOW(0,1)=0.1*XYS(0)/USIZ		!X RIGHT TOP
	DO I=0,NHV(0)-1				!HOR. PAGES
	  WINDOW(1,0)=1.-0.1*XYS(1)/USIZ	!Y LEFT UNDER
	  WINDOW(1,1)=1.			!Y RIGHT TOP
	  DO I1=0,NHV(1)-1			!VERT. PAGES
	    CALL WQSDVW(DQID(I1*NHV(0)+I),WINDOW) !SET DEVICE WINDOW
	    WINDOW(1,1)=WINDOW(1,0)+0.1*OFR	!Y TOP
	    WINDOW(1,0)=WINDOW(1,1)-0.1*XYS(1)/USIZ !Y UNDER
	  END DO
	  WINDOW(0,0)=WINDOW(0,1)-0.1*OFR	!X LEFT
	  WINDOW(0,1)=WINDOW(0,0)+0.1*XYS(0)/USIZ !X RIGHT
	END DO
C
C OVERLAP CROSSES
C
	DO I=0,NHV(0)*NHV(1)-1
	  CALL WQSPLR(DQID(I),1,1,1.,0)		!STANDARD LINES
	END DO
	CALL WQSPLI(1)				!AND SELECT
	XYP(1,0)=UXY(1,1)-XYS(1)+0.25*OXY	!Y FIRST ++
	XYP(1,1)=XYP(1,0)
	DO I=1,NHV(1)-1				!VERTICAL +
	  XYP(0,0)=UXY(0,0)+0.1*XYS(0)		!X FIRST ++
	  XYP(0,1)=UXY(0,0)+0.9*XYS(0)
	  DO I1=0,NHV(0)-1			!FOR ALL HOR. PAGES
	    DO I2=0,1
	      XYX(0,0)=XYP(0,I2)-0.25*OXY
	      XYX(1,0)=XYP(1,I2)
	      XYX(0,1)=XYP(0,I2)+0.25*OXY
	      XYX(1,1)=XYP(1,I2)
	      CALL WQPOLL(2,XYX)
	      XYX(0,0)=XYP(0,I2)
	      XYX(1,0)=XYP(1,I2)-0.25*OXY
	      XYX(0,1)=XYP(0,I2)
	      XYX(1,1)=XYP(1,I2)+0.25*OXY
	      CALL WQPOLL(2,XYX)
	      XYP(0,I2)=XYP(0,I2)+XYS(0)-OXY
	    END DO
	  END DO
	  DO I2=0,1
	    XYP(1,I2)=XYP(1,I2)-XYS(1)+OXY
	  END DO
	END DO
	XYP(0,0)=UXY(0,0)+XYS(0)-0.25*OXY	!X FIRST ++
	XYP(0,1)=XYP(0,0)
	DO I=1,NHV(0)-1				!HORIZONTAL +
	  XYP(1,0)=UXY(1,1)-0.1*XYS(1)		!Y FIRST ++
	  XYP(1,1)=UXY(1,1)-0.9*XYS(1)
	  DO I1=0,NHV(1)-1			!FOR ALL VERT. PAGES
	    DO I2=0,1
	      XYX(0,0)=XYP(0,I2)-0.25*OXY
	      XYX(1,0)=XYP(1,I2)
	      XYX(0,1)=XYP(0,I2)+0.25*OXY
	      XYX(1,1)=XYP(1,I2)
	      CALL WQPOLL(2,XYX)
	      XYX(0,0)=XYP(0,I2)
	      XYX(1,0)=XYP(1,I2)-0.25*OXY
	      XYX(0,1)=XYP(0,I2)
	      XYX(1,1)=XYP(1,I2)+0.25*OXY
	      CALL WQPOLL(2,XYX)
	      XYP(1,I2)=XYP(1,I2)-XYS(1)+OXY
	    END DO
	  END DO
	  DO I2=0,1
	    XYP(0,I2)=XYP(0,I2)+XYS(0)-OXY
	  END DO
	END DO
C
	RETURN
C
C MCLOSE
C
	ENTRY WQ_MCLOSE(DQID,NHV)
C
	WQ_MCLOSE=.TRUE.			!ASSUME OK
	DO I=0,NHV(0)*NHV(1)-1
	  CALL WQDVDA(DQID(I))			!DEACTIVATE
	  CALL WQDVCL(DQID(I))			!CLOSE
	END DO
C
	RETURN
C
C MDATE
C
	ENTRY WQ_MDATE(DQID,NHV,PLDEV)
C
	WQ_MDATE=.TRUE.
	DO I=0,NHV(0)-1				!HORIZONTAL
	  DO I1=0,NHV(1)-1			!VERTICAL
	    CALL WNCTXS(TXT,'!AS !UJ\.!UJ/!UJ\.!UJ',
	1		PLDEV,I,I1,NHV(0)-1,NHV(1)-1) !INCLUDE PAGE
	    J=WNCALN(TXT)
	    CALL WQ_DATE(DQID(I1*NHV(0)+I),TXT(1:J))
	  END DO
	END DO
C
	RETURN
C
C MPLR
C
	ENTRY WQ_MPLR(DQID,NHV,PLJ1,PLJ2,PLE1,PLJ3)
C
	DO I=0,NHV(0)*NHV(1)-1
	  CALL WQSPLR(DQID(I),PLJ1,PLJ2,PLE1,PLJ3)
	END DO
C
C
	END

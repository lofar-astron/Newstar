C+ WNQEL4.FOR
C  WNB 911218
C
C  Revisions:
C	WNB 920113	Error in message length
C	WNB 920129	Add file types
C	WNB 920129	Change output writing
C	WNB 921021	Add A3 entry points; delete LMG1* (not used)
C	WNB 921029	Correct A3 scale
C	HjV 921029	Correct A3 scale (=A4 scale * sqrt(2))
C	WNB 921124	Line thickness
C	HjV 930108	Add PageSize for A3-plots
C	HjV 930521	Line from x,y to same x,y not plotted
C	CMV 930824	Problem with message, A3 inside /Saveobject
C	WNB 930825	Change to WNCALX
C       HjV 940323      When Y-point polyline <0 , make it 0
C       HjV 950710	Change names of PS/EPS routines
C                       Add routines for A0/A1/A2-plotter
C	JPH 970827	Replace long-dashed line type 4 bydensely-dotted
C	AXC 010628      linux port (CARRIAGECONTROL && Parameter)
C
	SUBROUTINE WNQEL4(TYP,ID,VP)
C
C  Do device dependent actions for EPS
C
C  Result:
C
C	CALL WNQEL4( TYP_J:I, ID_J:I, VP_J(*):I)	EPS A4 landscape
C	CALL WNQEP4( TYP_J:I, ID_J:I, VP_J(*):I)	EPS A4 portrait
C	CALL WNQPL4( TYP_J:I, ID_J:I, VP_J(*):I)	PS A4 landscape
C	CALL WNQPP4( TYP_J:I, ID_J:I, VP_J(*):I)	PS A4 portrait
C	CALL WNQEL3( TYP_J:I, ID_J:I, VP_J(*):I)	EPS A3 landscape
C	CALL WNQEP3( TYP_J:I, ID_J:I, VP_J(*):I)	EPS A3 portrait
C	CALL WNQPL3( TYP_J:I, ID_J:I, VP_J(*):I)	PS A3 landscape
C	CALL WNQPP3( TYP_J:I, ID_J:I, VP_J(*):I)	PS A3 portrait
C	CALL WNQEL2( TYP_J:I, ID_J:I, VP_J(*):I)	EPS A2 landscape
C	CALL WNQEP2( TYP_J:I, ID_J:I, VP_J(*):I)	EPS A2 portrait
C	CALL WNQPL2( TYP_J:I, ID_J:I, VP_J(*):I)	PS A2 landscape
C	CALL WNQPP2( TYP_J:I, ID_J:I, VP_J(*):I)	PS A2 portrait
C	CALL WNQEL1( TYP_J:I, ID_J:I, VP_J(*):I)	EPS A1 landscape
C	CALL WNQEP1( TYP_J:I, ID_J:I, VP_J(*):I)	EPS A1 portrait
C	CALL WNQPL1( TYP_J:I, ID_J:I, VP_J(*):I)	PS A1 landscape
C	CALL WNQPP1( TYP_J:I, ID_J:I, VP_J(*):I)	PS A1 portrait
C	CALL WNQEL0( TYP_J:I, ID_J:I, VP_J(*):I)	EPS A0 landscape
C	CALL WNQEP0( TYP_J:I, ID_J:I, VP_J(*):I)	EPS A0 portrait
C	CALL WNQPL0( TYP_J:I, ID_J:I, VP_J(*):I)	PS A0 landscape
C	CALL WNQPP0( TYP_J:I, ID_J:I, VP_J(*):I)	PS A0 portrait
C				Do action specified by TYP, using the
C				area ID, and pointers/values in VP. TYP can be:
C					0:	open device
C						VP: -
C					1:	close device
C						VP: -
C					2:	(header) message
C						VP: 1: ptr msg; 2: length msg
C					3:	polyline
C						VP: 1: poly index; 2: ptr list
C					4:	polyline
C						VP: 2: ptr list; 3: line type
C						    4: line thickness
C					5:	clear screen
C						VP: -
C					6:	shading
C						VP: 1: type; 2: int. list
C						    3: ptr llhc, urhc total
C						    4: N int.
C						    5: dx,dy , box dx,dy, pos.
C
C  Include files:
C
	INCLUDE 'WNG_DEF'
	INCLUDE	'WQD_O_DEF'	!DEVICE AREA
C
C  Parameters:
C
	CHARACTER*1 CR
C	  PARAMETER (CR=CHAR(13))
	CHARACTER*1 LF
C	  PARAMETER (LF=CHAR(10))
	CHARACTER*2 CRLF
C	  PARAMETER (CRLF=CR//LF)
	INTEGER DEFPL		!DEFAULT POLYLINE IX
	  PARAMETER (DEFPL='0030')
	INTEGER LOPL		!MAX(INIT STRING, END STR, LMG0L+LMG1L+MGL)
	  PARAMETER (LOPL=300)
C
C  Arguments:
C
	INTEGER TYP		!TYPE TO DO
	INTEGER ID		!PTR TO AREA
	INTEGER VP(*)		!DATA LIST
C
C  Function references:
C
	INTEGER WNCALX		!STRING LENGTH
	REAL WNGGE		!GET E VALUE
	LOGICAL WNGGVM		!GET MEMORY
	CHARACTER*20 WNFFNM	!FILE NAME
	INTEGER WNMRNJ		!RANDOM J
C
C  Data declarations:
C
	CHARACTER*3 FTYP	!FILE TYPE
	LOGICAL LEPS		!EPS OR PS
	LOGICAL LZER		!ZERO SCREEN INDICATOR
	INTEGER FMTIDX		!PAPER-FORMAT INDEX
	REAL FMTSCL(0:4)	!SCALE FACTOR
	  DATA FMTSCL /0.956,0.676,0.478,0.338,0.239/
	INTEGER PB,PJ,PE	!POINTERS
	INTEGER PATN,PATS	!PATTERN SELECT, START
	INTEGER PATD,PATU	!PATTERN DOWN, UP
	INTEGER FIRST_I1,FIRST_I2	!SAVED X,Y
	INTEGER XB(0:1,0:1)	!SHADING BOX
	REAL XYC(0:1)		!X, Y START
	CHARACTER*(LOPL) LOPC
	  BYTE LOPB(LOPL)
	  EQUIVALENCE (LOPC,LOPB)
	CHARACTER*20 FNM	!FILE NAME
	INTEGER PLW		!PLOT LINE TYPE
	  BYTE PLW1(4)
	  EQUIVALENCE (PLW,PLW1)
	CHARACTER*64 THLC	!LINE THICKNESS
	  BYTE THL(2,0:31)
	  EQUIVALENCE (THLC,THL)
	  DATA THLC(1:40)/'0101020304050607080910111213141516171819'/
	  DATA THLC(41:64)/'202122232425262728293031'/
	BYTE IXTL(4)
	  DATA IXTL/1,2,3,4/
	CHARACTER*7 LIXTL(4)		!LINE TYPE INFO
	  DATA LIXTL/'[]','[16 16]','[03 13]','[03 05]'/	! JPH 970827
cc	  DATA LIXTL/'[]','[16 16]','[03 13]','[24 08]'/
	INTEGER IPLST(0:2,2:4)	!PATTERN LENGTH, DOWN, UP
	  DATA IPLST	/32,16,16,	!DASH
	1		 16,3,13,	! sparse DOT
	1		 8,3,5/		! dense DOT		! JPH 970827
cc	1		 32,24,8/	! LONG DASH
C-
C
C EL4
C
	FMTIDX=4					!SET FORMAT A4
	FTYP='EL4'
	GOTO 10
C
C EP4
C
	ENTRY WNQEP4(TYP,ID,VP)
C
	FMTIDX=4					!SET FORMAT A4
	FTYP='EP4'
	GOTO 10
C
C PL4
C
	ENTRY WNQPL4(TYP,ID,VP)
C
	FMTIDX=4					!SET FORMAT A4
	FTYP='PL4'
	GOTO 10
C
C PP4
C
	ENTRY WNQPP4(TYP,ID,VP)
C
	FMTIDX=4					!SET FORMAT A4
	FTYP='PP4'
	GOTO 10
C
C EL3
C
	ENTRY WNQEL3(TYP,ID,VP)
C
	FMTIDX=3					!SET FORMAT A3
	FTYP='EL3'
	GOTO 10
C
C EP3
C
	ENTRY WNQEP3(TYP,ID,VP)
C
	FMTIDX=3					!SET FORMAT A3
	FTYP='EP3'
	GOTO 10
C
C PL3
C
	ENTRY WNQPL3(TYP,ID,VP)
C
	FMTIDX=3					!SET FORMAT A3
	FTYP='PL3'
	GOTO 10
C
C PP3
C
	ENTRY WNQPP3(TYP,ID,VP)
C
	FMTIDX=3					!SET FORMAT A3
	FTYP='PP3'
	GOTO 10
C
C EL2
C
	ENTRY WNQEL2(TYP,ID,VP)
C
	FMTIDX=2					!SET FORMAT A2
	FTYP='EL2'
	GOTO 10
C
C EP2
C
	ENTRY WNQEP2(TYP,ID,VP)
C
	FMTIDX=2					!SET FORMAT A2
	FTYP='EP2'
	GOTO 10
C
C PL2
C
	ENTRY WNQPL2(TYP,ID,VP)
C
	FMTIDX=2					!SET FORMAT A2
	FTYP='PL2'
	GOTO 10
C
C PP2
C
	ENTRY WNQPP2(TYP,ID,VP)
C
	FMTIDX=2					!SET FORMAT A2
	FTYP='PP2'
	GOTO 10
C
C EL1
C
	ENTRY WNQEL1(TYP,ID,VP)
C
	FMTIDX=1					!SET FORMAT A1
	FTYP='EL1'
	GOTO 10
C
C EP1
C
	ENTRY WNQEP1(TYP,ID,VP)
C
	FMTIDX=1					!SET FORMAT A1
	FTYP='EP1'
	GOTO 10
C
C PL1
C
	ENTRY WNQPL1(TYP,ID,VP)
C
	FMTIDX=1					!SET FORMAT A1
	FTYP='PL1'
	GOTO 10
C
C PP1
C
	ENTRY WNQPP1(TYP,ID,VP)
C
	FMTIDX=1					!SET FORMAT A1
	FTYP='PP1'
	GOTO 10
C
C EL0
C
	ENTRY WNQEL0(TYP,ID,VP)
C
	FMTIDX=0					!SET FORMAT A0
	FTYP='EL0'
	GOTO 10
C
C EP0
C
	ENTRY WNQEP0(TYP,ID,VP)
C
	FMTIDX=0					!SET FORMAT A0
	FTYP='EP0'
	GOTO 10
C
C PL0
C
	ENTRY WNQPL0(TYP,ID,VP)
C
	FMTIDX=0					!SET FORMAT A0
	FTYP='PL0'
	GOTO 10
C
C PP0
C
	ENTRY WNQPP0(TYP,ID,VP)
C
	FMTIDX=0					!SET FORMAT A0
	FTYP='PP0'
	GOTO 10
C
C INIT
C
 10	CONTINUE
	CR=CHAR(13)
	LF=CHAR(10)
	CRLF=CR//LF
	IF (FTYP(1:1).EQ.'E') THEN
	  LEPS=.TRUE.				!SET EPS
	ELSE
	   LEPS=.FALSE.				!SET PS
	END IF
	LZER=.FALSE.				!NOT ZERO SCREEN
	PB=ID-A_OB				!BYTE POINTER
	PJ=(ID-A_OB)/LB_J			!J PTR
	PE=(ID-A_OB)/LB_E			!E PTR
C
C DISTRIBUTE
C
	IF (TYP.EQ.0) THEN			!OPEN
	  GOTO 1000
	ELSE IF (TYP.EQ.1) THEN			!CLOSE
	  GOTO 1100
	ELSE IF (TYP.EQ.2) THEN			!MESSAGE
	  GOTO 1200
	ELSE IF (TYP.EQ.3) THEN			!POLY LINE
	  PLW1(1)=IXTL(NINT(A_E(PE+WQD_PLIX_E+3*VP(1)))) !LINE TYPE
	  J=MIN(A_E(PE+WQD_MXPLS_E),A_E(PE+WQD_NMPLS_E)*
	1		A_E(PE+WQD_PLIX_E+3*VP(1)+1)) !THICKNESS
	  GOTO 1300
	ELSE IF (TYP.EQ.4) THEN			!POLY LINE
	  PLW1(1)=IXTL(NINT(WNGGE(VP(3))))	!LINE TYPE
	  J=MIN(A_E(PE+WQD_MXPLS_E),A_E(PE+WQD_NMPLS_E)*
	1		WNGGE(VP(4)))		!THICKNESS
	  GOTO 1300
	ELSE IF (TYP.EQ.5) THEN			!CLEAR SCREEN
	  LZER=.TRUE.				!INDICATE ZERO
	  GOTO 1100				!CLOSE AND REOPEN
	ELSE IF (TYP.EQ.6) THEN			!SHADING
	  GOTO 1600
	END IF
C
 900	CONTINUE
C
	RETURN					!UNKNOWN
C
C OPEN
C
 1000	CONTINUE
	FNM=WNFFNM(FTYP,'PLT')			!OUTPUT FILE NAME
	CALL WNGLUN(A_J(PJ+WQD_USE_J+2))	!GET LUN
#ifdef wn_li__
	OPEN(UNIT=A_J(PJ+WQD_USE_J+2),FILE=FNM,STATUS='NEW',
	1		FORM='FORMATTED',IOSTAT=J2) !OPEN OUTPUT
#else
	OPEN(UNIT=A_J(PJ+WQD_USE_J+2),FILE=FNM,STATUS='NEW',
	1		CARRIAGECONTROL='LIST',
	1		FORM='FORMATTED',IOSTAT=J2) !OPEN OUTPUT
#endif
	CALL WNGMFS(WQD_FILE_N,FNM,A_B(PB+WQD_FILE_1)) !SAVE FILE NAME
	WRITE (UNIT=A_J(PJ+WQD_USE_J+2),FMT=8000,ERR=900)
	1		'%!PS-Adobe-1.0'
	WRITE (UNIT=A_J(PJ+WQD_USE_J+2),FMT=8000,ERR=900)
	1		'% File produced by WNP system'
	WRITE (UNIT=A_J(PJ+WQD_USE_J+2),FMT=9012,ERR=900)
	1		INT(A_E(PE+WQD_XHI_E)*FMTSCL(FMTIDX)),
	1		INT(A_E(PE+WQD_YHI_E)*FMTSCL(FMTIDX))
 9012	FORMAT('%%BoundingBox: 0 0 ',I4.4,' ',I4.4)
	WRITE (UNIT=A_J(PJ+WQD_USE_J+2),FMT=8000,ERR=900)
	1		'%%Pages: 1'
	WRITE (UNIT=A_J(PJ+WQD_USE_J+2),FMT=8000,ERR=900)
	1		'%%Title: NPLOT'
	WRITE (UNIT=A_J(PJ+WQD_USE_J+2),FMT=8000,ERR=900)
	1		'%%Page: 0 1'
	IF (.NOT.LEPS) THEN
	  WRITE (UNIT=A_J(PJ+WQD_USE_J+2),FMT=8000,ERR=900)
	1		'/Saveobj save def'
	END IF
	IF (FMTIDX.EQ.3) THEN				!A3
	  WRITE (UNIT=A_J(PJ+WQD_USE_J+2),FMT=8000,ERR=900)
	1		'<</PageSize[842 1188]>>setpagedevice'
	ELSE IF (FMTIDX.EQ.2) THEN			!A2
	  WRITE (UNIT=A_J(PJ+WQD_USE_J+2),FMT=8000,ERR=900)
	1		'<</PageSize[1188 1684]>>setpagedevice'
	ELSE IF (FMTIDX.EQ.1) THEN			!A1
	  WRITE (UNIT=A_J(PJ+WQD_USE_J+2),FMT=8000,ERR=900)
	1		'<</PageSize[1684 2383]>>setpagedevice'
	ENDIF
	WRITE (UNIT=A_J(PJ+WQD_USE_J+2),FMT=8000,ERR=900)
	1		'/m {moveto} def'//
	1		CRLF//'/l {lineto} def'//
	1		CRLF//'/s {stroke} def'//
	1		CRLF//'/n {newpath} def'
	WRITE (UNIT=A_J(PJ+WQD_USE_J+2),FMT=8000,ERR=900)
	1		'/f {fill} def'//
	1		CRLF//'/c {closepath} def'//
	1		CRLF//'/sw {setlinewidth} def'//
	1		CRLF//'/sd {setdash} def'
	WRITE (UNIT=A_J(PJ+WQD_USE_J+2),FMT=8000,ERR=900)
	1		'/sg {setgray} def'//
	1		CRLF//'2 setlinejoin'//
	1		CRLF//'20 20 translate'
	WRITE (UNIT=A_J(PJ+WQD_USE_J+2),FMT=9013,ERR=900)
	1		FMTSCL(FMTIDX),FMTSCL(FMTIDX)
 9013	FORMAT(F4.3,1x,F4.3,' scale')
	IF (A_E(PE+WQD_YHI_E).LT.A_E(PE+WQD_XHI_E)) THEN !LANDSCAPE
	  WRITE (UNIT=A_J(PJ+WQD_USE_J+2),FMT=9014,ERR=900)
	1		INT(A_E(PE+WQD_YHI_E))
 9014	  FORMAT(I4.4,' 100 translate 90 rotate')
	END IF
 24	CONTINUE
	WRITE (UNIT=A_J(PJ+WQD_USE_J+2),FMT=8000,ERR=900)
	1		'3.0 setlinewidth'	!INIT STRING
	A_J(PJ+WQD_USE_J+0)=DEFPL		!POLYLINE INDEX
C
	RETURN
C
C CLOSE
C
 1100	CONTINUE
	WRITE (UNIT=A_J(PJ+WQD_USE_J+2),FMT=8000,ERR=900)
	1		'showpage'
	IF (LEPS) THEN				!EPS
	  LOPC='%%Trailer'
	ELSE
	  LOPC='Saveobj restore'
	END IF
	J=WNCALX(LOPC)
	WRITE (UNIT=A_J(PJ+WQD_USE_J+2),FMT=8000,ERR=900)
	1		LOPC(1:J)		!WRITE END
	CLOSE (UNIT=A_J(PJ+WQD_USE_J+2),STATUS='KEEP',IOSTAT=J2) !CLOSE FILE
	CALL WNGMTS(WQD_FILE_N,A_B(PB+WQD_FILE_1),FNM) !GET FILE NAME
	IF (.NOT.LEPS) THEN
	   IF (FMTIDX.EQ.3) THEN		!A3
	      CALL WNGSSP('WNGFEX A3',FNM,FNM,'D') !SPOOL AND DELETE
	   ELSE IF (FMTIDX.EQ.4) THEN		!A4
	      CALL WNGSSP('WNGFEX PS',FNM,FNM,'D') !SPOOL AND DELETE
	   ELSE					!A0/A1/A2
	      CALL WNGSSP('WNGFEX A0',FNM,FNM,'D') !SPOOL AND DELETE
	   END IF
	END IF
	IF (LZER) GOTO 1000			!REOPEN
C
	RETURN
C
C MESSAGE
C
 1200	CONTINUE
	WRITE(UNIT=A_J(PJ+WQD_USE_J+2),FMT=9040,ERR=1201) 
	1	CRLF,CRLF,CRLF,0,INT(A_E(PE+WQD_YHI_E)-20),CRLF
 9040	FORMAT(	'/Helvetica findfont',A2,
	1	'40 scalefont',A2,
	1	'setfont',A2,
	1	I4.4,' ',I4.4,' m',A2)
 1201	CONTINUE
	LOPC='('
	J0=MIN(VP(2),A_J(PJ+WQD_MGL_J))		!MESSAGE LENGTH
	CALL WNGMTS(J0,A_B(VP(1)-A_OB),LOPC(2:))	!MESSAGE
	LOPC(J0+2:)=') show'			!END MESSAGE
	J=WNCALX(LOPC)				!LENGTH MESSAGE
	WRITE (UNIT=A_J(PJ+WQD_USE_J+2),FMT=8000,ERR=900)
	1		LOPC(1:J)		!WRITE MSG
	A_J(PJ+WQD_USE_J+0)=DEFPL		!POLYLINE INDEX
C
	RETURN
C
C POLYLINE
C
 1300	CONTINUE
	PLW1(2)=THL(1,J)
	PLW1(3)=THL(2,J)
	PLW1(4)=0
	IF (PLW.NE.A_J(PJ+WQD_USE_J+0)) THEN	!CHANGED
	  A_J(PJ+WQD_USE_J+0)=PLW		!SAVE NEW
	  LOPC(1:18)=CHAR(PLW1(2))//CHAR(PLW1(3))//
	1		' sw '//LIXTL(PLW1(1))//' 0 sd'
	  WRITE (UNIT=A_J(PJ+WQD_USE_J+2),FMT=8000,ERR=900)
	1		LOPC(1:18)		!WRITE TYPE
	END IF
	WRITE (UNIT=A_J(PJ+WQD_USE_J+2),FMT=8000,ERR=900)
	1		'n'			!WRITE PATH
C
C DRAW LINES
C
	J2=1					!OUTPUT POINTER
	J=(VP(2)-A_OB)/LB_J			!J/E INPUT PTR
 20	CONTINUE				!DO PIECE
	J1=A_J(J)				!# OF POINTS
	J=J+1					!INPUT POINTER
	IF (J1.GT.0) THEN			!MORE
	  IF (PLW1(1).NE.1) THEN		!NOT FULL DRAWN
	    PATS=MOD(IAND(WNMRNJ()/8,31),IPLST(0,PLW1(1))) !PATTERN START
	    LOPC(1:19)=CHAR(PLW1(2))//CHAR(PLW1(3))//
	1		' sw '//LIXTL(PLW1(1))//' 00 sd'
	    WRITE(UNIT=LOPC(15:16),FMT=9015,ERR=1302) PATS
 9015	    FORMAT(I2.2)
 1302	    CONTINUE
	    WRITE (UNIT=A_J(PJ+WQD_USE_J+2),FMT=8000,ERR=900)
	1		LOPC(1:19)		!WRITE TYPE
	  END IF
	  FIRST_I1=A_E(J)			!START X
	  FIRST_I2=A_E(J+1)			!START Y
	  LOPC(10:11)=' m'			!POSITION FIRST
	  DO WHILE (J1.GT.0)			!ALL SEGMENTS
	    I1=A_E(J)				!X
	    I2=A_E(J+1)				!Y
	    J=J+2				!NEXT POINT
	    IF ((J1.EQ.1).AND.
	1	(I1.EQ.FIRST_I1).AND.(I2.EQ.FIRST_I2)) THEN
	      IF (I2.GT.0) I2=I2-1
	    ENDIF
	    WRITE (UNIT=LOPC(1:9),FMT=9000,ERR=21) I1,I2
 9000	    FORMAT(I4.4,' ',I4.4)
 21	    CONTINUE
	    WRITE (UNIT=A_J(PJ+WQD_USE_J+2),FMT=8000,ERR=900)
	1		LOPC(1:11)		!DRAW
	    LOPC(11:11)='l'			!DRAW
	    J1=J1-1				!COUNT
	  END DO
	  GOTO 20				!NEXT PIECE
	END IF
	WRITE (UNIT=A_J(PJ+WQD_USE_J+2),FMT=8000,ERR=900)
	1		's'			!WRITE DRAWING
C
	RETURN
C
C SHADING
C
 1600	CONTINUE
	J=(VP(3)-A_OB)/LB_E			!TOTAL BOX POINTER
	J4=(VP(5)-A_OB)/LB_E			!SINGLE BOX POINTER
	XB(0,0)=MAX(0.,A_E(J+0))		!BOX LIMITS
	XB(1,0)=MAX(0.,A_E(J+1))
	XB(0,1)=MIN(A_E(PE+WQD_XHI_E),A_E(J+2))
	XB(1,1)=MIN(A_E(PE+WQD_YHI_E),A_E(J+3))
C
C ALL SQUARES
C
	J0=(VP(2)-A_OB)/LB_E			!INT POINTER
	DO I=0,VP(4)-1				!ALL SQUARES
	  IF (A_E(J0+I).GE.0.) THEN		!NOT DELETED
	    DO I1=0,1				!GET X,Y START
	      XYC(I1)=A_E(J4+4+I1)+I*A_E(J4+I1)
	    END DO
	    R0=MIN(1.,A_E(J0+I))		!INT.
	    IF (VP(1).EQ.1) THEN		!REGULAR
	      R0=1.-(INT(R0*20.)/20.)
	    ELSE IF (VP(1).EQ.2) THEN		!PATTERN
	      R0=1.-(INT(R0*10.)/10.)
	    ELSE
	      R0=1.-R0				!CONTIN.
	    END IF
	    WRITE (UNIT=LOPC(1:62),FMT=9020,ERR=1601)
	1		INT(XYC(0)),INT(XYC(1)),
	1		INT(XYC(0)+A_E(J4+2)),INT(XYC(1)),
	1		INT(XYC(0)+A_E(J4+2)),INT(XYC(1)+A_E(J4+3)),
	1		INT(XYC(0)),INT(XYC(1)+A_E(J4+3)),R0,
	1		' sg f'
 9020	    FORMAT('n',2I5,' m',2I5,' l',2I5,' l',2I5,
	1		' l c',F6.2,A)
 1601	    CONTINUE
	    WRITE (UNIT=A_J(PJ+WQD_USE_J+2),FMT=8000,ERR=900)
	1		LOPC(1:62)		!DRAWING
	  END IF
	END DO
C
C READY
C
 910	CONTINUE
	WRITE (UNIT=A_J(PJ+WQD_USE_J+2),FMT=8000,ERR=900)
	1		'0 sg'			!RESET GRAY LEVEL
C
	RETURN
C
 8000	FORMAT(A)
C
C
	END

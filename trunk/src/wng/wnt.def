C+ Created from wnt.dsc on 970828 at 17:01:48 at daw18
C  WNT.DEF
C  WNB 970828
C
C  Revisions:
C
C       WNB 931216      New edit default for D/E unformatted items
C       WNB 930902      Make 32 array indices, 64 field length
C       WNB 930801      Original version
C                                                                             
C
C  Result:
C
C  WNT.DSC describes the include files (WNT_O.DEF[.inc],
C  	WNT.DEF [.inc]) for the WNTINC program.
C  	Most WNTI* routines need:
C  	INCLUDE 'WNT_O_DEF' and
C  	INCLUDE 'WNT_DEF'
C                                                                             
C
C  Data declarations:
C                                                                             
	CHARACTER*9 P__TXT(1:20)                ! Known (%) parameters
	  DATA P__TXT /'NAME ','DATE ',
	1      'USER ','VERSION ','SYSTEM ',
	1      'LIST ','NOLIST ','INSERT ',
	1      'LOCAL ','GLOBAL ','INCLUDE ',
	1      'REVISION ','COMMENT ','FORTRAN ',
	1      'CC ','PRINT ','NOPRINT ',
	1      'ALIGN ','NOALIGN ',' '/
	CHARACTER*10 PN__TXT(1:12)              ! Known (.) names
	  DATA PN__TXT /'DEFINE ','BEGIN ',
	1      'END ','PARAMETER ','DATA ',
	1      'COMMON ','OFFSET ','STRUCTURE ',
	1      'ALIGN ','MAP ','UNION ',
	1      ' '/
	CHARACTER*1 CD1(1:12)                   ! Letter codes for all
	  DATA CD1 /'B ','C ','L ','I ',        ! T_ data types
	1      'J ','K ','E ','D ','X ',
	1      'Y ','A ','S '/
	INTEGER CD2(1:12)                       ! Length for all
	  DATA CD2 /1,1,4,2,4,4,4,8,8,16,       ! T_ data types
	1      2,1/
	CHARACTER*17 CD(1:12)                   ! Code for all T_
	  DATA CD /'BYTE ','CHARACTER ',        ! data types
	1      'LOGICAL ','INTEGER*2 ',         ! in Fortran
	1      'INTEGER ','INTEGER*4 ',
	1      'REAL ','DOUBLE PRECISION ',
	1      'COMPLEX ','DOUBLE COMPLEX ',
	1      'CHARACTER ','BYTE '/
	CHARACTER*13 UD(1:12)                   ! Code for all T_
	  DATA UD /'char ','char ','unsigned int ', ! data types
	1      'short ','int ','long int ',     ! in C
	1      'float ','double ','float ',
	1      'double ','char ','struct '/
	INTEGER TCD(1:12)                       ! Translation types
	  DATA TCD /9,1,3,2,3,3,4,5,14,         ! for all T_ data types
	1      15,2,10/
	CHARACTER*10 ECD(1:12)                  ! Default edit types for
	  DATA ECD /'UB ','AL ','LL ','SI ',    ! all T_ types
	1      'SJ ','SK ','E12.6 ','D12.8 ',
	1      'EC12.6 ','DC12.8 ','AL ',
	1      'UB '/
C
C  WNT common data:
C                                                                             
	INTEGER DEP                             ! Structure depth
	LOGICAL LSTON                           ! List lines in log
	LOGICAL PRTON                           ! Print comments
	LOGICAL ALGON                           ! Align data
	INTEGER CATP                            ! Current area type
	INTEGER CALN                            ! Line were current area defined
	INTEGER CBTP                            ! Current block type
	INTEGER COFF                            ! Current offset
	INTEGER CALEN                           ! Current structure align length
	LOGICAL DEFSN                           ! .DEFINE seen
	LOGICAL BEGSN                           ! .BEGIN (=.STRUCT) seen
	LOGICAL PARSN                           ! .PARAMETER seen
	LOGICAL CINSN                           ! .COMMIN initialisation seen
	INTEGER UNID                            ! Counter for unique name
	CHARACTER*160 OINFIL                    ! Original input file
	CHARACTER*160 INFIL                     ! Current input file
	CHARACTER*8 PARM(1:5)                   ! Program parameters
	BYTE IBDES(0:23)                        ! Input lines
	  BYTE IBDES_B(0:23)
	  EQUIVALENCE (IBDES,IBDES_B)
	  LOGICAL IBDES_L(0:5)
	  EQUIVALENCE (IBDES,IBDES_L)
	  INTEGER*2 IBDES_I(0:11)
	  EQUIVALENCE (IBDES,IBDES_I)
	  INTEGER IBDES_J(0:5)
	  EQUIVALENCE (IBDES,IBDES_J)
	  INTEGER*4 IBDES_K(0:5)
	  EQUIVALENCE (IBDES,IBDES_K)
	  REAL IBDES_E(0:5)
	  EQUIVALENCE (IBDES,IBDES_E)
	  DOUBLE PRECISION IBDES_D(0:2)
	  EQUIVALENCE (IBDES,IBDES_D)
	  COMPLEX IBDES_X(0:2)
	  EQUIVALENCE (IBDES,IBDES_X)
	  CHARACTER*(24) IBDES_C
	  EQUIVALENCE (IBDES,IBDES_C)
	BYTE CBDES(0:23)                        ! Comment on lines
	  BYTE CBDES_B(0:23)
	  EQUIVALENCE (CBDES,CBDES_B)
	  LOGICAL CBDES_L(0:5)
	  EQUIVALENCE (CBDES,CBDES_L)
	  INTEGER*2 CBDES_I(0:11)
	  EQUIVALENCE (CBDES,CBDES_I)
	  INTEGER CBDES_J(0:5)
	  EQUIVALENCE (CBDES,CBDES_J)
	  INTEGER*4 CBDES_K(0:5)
	  EQUIVALENCE (CBDES,CBDES_K)
	  REAL CBDES_E(0:5)
	  EQUIVALENCE (CBDES,CBDES_E)
	  DOUBLE PRECISION CBDES_D(0:2)
	  EQUIVALENCE (CBDES,CBDES_D)
	  COMPLEX CBDES_X(0:2)
	  EQUIVALENCE (CBDES,CBDES_X)
	  CHARACTER*(24) CBDES_C
	  EQUIVALENCE (CBDES,CBDES_C)
	BYTE VBDES(0:23)                        ! Global/local values
	  BYTE VBDES_B(0:23)
	  EQUIVALENCE (VBDES,VBDES_B)
	  LOGICAL VBDES_L(0:5)
	  EQUIVALENCE (VBDES,VBDES_L)
	  INTEGER*2 VBDES_I(0:11)
	  EQUIVALENCE (VBDES,VBDES_I)
	  INTEGER VBDES_J(0:5)
	  EQUIVALENCE (VBDES,VBDES_J)
	  INTEGER*4 VBDES_K(0:5)
	  EQUIVALENCE (VBDES,VBDES_K)
	  REAL VBDES_E(0:5)
	  EQUIVALENCE (VBDES,VBDES_E)
	  DOUBLE PRECISION VBDES_D(0:2)
	  EQUIVALENCE (VBDES,VBDES_D)
	  COMPLEX VBDES_X(0:2)
	  EQUIVALENCE (VBDES,VBDES_X)
	  CHARACTER*(24) VBDES_C
	  EQUIVALENCE (VBDES,VBDES_C)
	BYTE RBDES(0:23)                        ! %REVISION data
	  BYTE RBDES_B(0:23)
	  EQUIVALENCE (RBDES,RBDES_B)
	  LOGICAL RBDES_L(0:5)
	  EQUIVALENCE (RBDES,RBDES_L)
	  INTEGER*2 RBDES_I(0:11)
	  EQUIVALENCE (RBDES,RBDES_I)
	  INTEGER RBDES_J(0:5)
	  EQUIVALENCE (RBDES,RBDES_J)
	  INTEGER*4 RBDES_K(0:5)
	  EQUIVALENCE (RBDES,RBDES_K)
	  REAL RBDES_E(0:5)
	  EQUIVALENCE (RBDES,RBDES_E)
	  DOUBLE PRECISION RBDES_D(0:2)
	  EQUIVALENCE (RBDES,RBDES_D)
	  COMPLEX RBDES_X(0:2)
	  EQUIVALENCE (RBDES,RBDES_X)
	  CHARACTER*(24) RBDES_C
	  EQUIVALENCE (RBDES,RBDES_C)
	BYTE CMDES(0:23)                        ! %COMMENT data
	  BYTE CMDES_B(0:23)
	  EQUIVALENCE (CMDES,CMDES_B)
	  LOGICAL CMDES_L(0:5)
	  EQUIVALENCE (CMDES,CMDES_L)
	  INTEGER*2 CMDES_I(0:11)
	  EQUIVALENCE (CMDES,CMDES_I)
	  INTEGER CMDES_J(0:5)
	  EQUIVALENCE (CMDES,CMDES_J)
	  INTEGER*4 CMDES_K(0:5)
	  EQUIVALENCE (CMDES,CMDES_K)
	  REAL CMDES_E(0:5)
	  EQUIVALENCE (CMDES,CMDES_E)
	  DOUBLE PRECISION CMDES_D(0:2)
	  EQUIVALENCE (CMDES,CMDES_D)
	  COMPLEX CMDES_X(0:2)
	  EQUIVALENCE (CMDES,CMDES_X)
	  CHARACTER*(24) CMDES_C
	  EQUIVALENCE (CMDES,CMDES_C)
	BYTE FMDES(0:23)                        ! %FORTRAN data
	  BYTE FMDES_B(0:23)
	  EQUIVALENCE (FMDES,FMDES_B)
	  LOGICAL FMDES_L(0:5)
	  EQUIVALENCE (FMDES,FMDES_L)
	  INTEGER*2 FMDES_I(0:11)
	  EQUIVALENCE (FMDES,FMDES_I)
	  INTEGER FMDES_J(0:5)
	  EQUIVALENCE (FMDES,FMDES_J)
	  INTEGER*4 FMDES_K(0:5)
	  EQUIVALENCE (FMDES,FMDES_K)
	  REAL FMDES_E(0:5)
	  EQUIVALENCE (FMDES,FMDES_E)
	  DOUBLE PRECISION FMDES_D(0:2)
	  EQUIVALENCE (FMDES,FMDES_D)
	  COMPLEX FMDES_X(0:2)
	  EQUIVALENCE (FMDES,FMDES_X)
	  CHARACTER*(24) FMDES_C
	  EQUIVALENCE (FMDES,FMDES_C)
	BYTE CCDES(0:23)                        ! %CC data
	  BYTE CCDES_B(0:23)
	  EQUIVALENCE (CCDES,CCDES_B)
	  LOGICAL CCDES_L(0:5)
	  EQUIVALENCE (CCDES,CCDES_L)
	  INTEGER*2 CCDES_I(0:11)
	  EQUIVALENCE (CCDES,CCDES_I)
	  INTEGER CCDES_J(0:5)
	  EQUIVALENCE (CCDES,CCDES_J)
	  INTEGER*4 CCDES_K(0:5)
	  EQUIVALENCE (CCDES,CCDES_K)
	  REAL CCDES_E(0:5)
	  EQUIVALENCE (CCDES,CCDES_E)
	  DOUBLE PRECISION CCDES_D(0:2)
	  EQUIVALENCE (CCDES,CCDES_D)
	  COMPLEX CCDES_X(0:2)
	  EQUIVALENCE (CCDES,CCDES_X)
	  CHARACTER*(24) CCDES_C
	  EQUIVALENCE (CCDES,CCDES_C)
	BYTE FEDES(0:23)                        ! Embedded %FORTRAN data
	  BYTE FEDES_B(0:23)
	  EQUIVALENCE (FEDES,FEDES_B)
	  LOGICAL FEDES_L(0:5)
	  EQUIVALENCE (FEDES,FEDES_L)
	  INTEGER*2 FEDES_I(0:11)
	  EQUIVALENCE (FEDES,FEDES_I)
	  INTEGER FEDES_J(0:5)
	  EQUIVALENCE (FEDES,FEDES_J)
	  INTEGER*4 FEDES_K(0:5)
	  EQUIVALENCE (FEDES,FEDES_K)
	  REAL FEDES_E(0:5)
	  EQUIVALENCE (FEDES,FEDES_E)
	  DOUBLE PRECISION FEDES_D(0:2)
	  EQUIVALENCE (FEDES,FEDES_D)
	  COMPLEX FEDES_X(0:2)
	  EQUIVALENCE (FEDES,FEDES_X)
	  CHARACTER*(24) FEDES_C
	  EQUIVALENCE (FEDES,FEDES_C)
	BYTE CEDES(0:23)                        ! Embedded %CC data
	  BYTE CEDES_B(0:23)
	  EQUIVALENCE (CEDES,CEDES_B)
	  LOGICAL CEDES_L(0:5)
	  EQUIVALENCE (CEDES,CEDES_L)
	  INTEGER*2 CEDES_I(0:11)
	  EQUIVALENCE (CEDES,CEDES_I)
	  INTEGER CEDES_J(0:5)
	  EQUIVALENCE (CEDES,CEDES_J)
	  INTEGER*4 CEDES_K(0:5)
	  EQUIVALENCE (CEDES,CEDES_K)
	  REAL CEDES_E(0:5)
	  EQUIVALENCE (CEDES,CEDES_E)
	  DOUBLE PRECISION CEDES_D(0:2)
	  EQUIVALENCE (CEDES,CEDES_D)
	  COMPLEX CEDES_X(0:2)
	  EQUIVALENCE (CEDES,CEDES_X)
	  CHARACTER*(24) CEDES_C
	  EQUIVALENCE (CEDES,CEDES_C)
	BYTE XFDES(0:23)                        ! Formatted data
	  BYTE XFDES_B(0:23)
	  EQUIVALENCE (XFDES,XFDES_B)
	  LOGICAL XFDES_L(0:5)
	  EQUIVALENCE (XFDES,XFDES_L)
	  INTEGER*2 XFDES_I(0:11)
	  EQUIVALENCE (XFDES,XFDES_I)
	  INTEGER XFDES_J(0:5)
	  EQUIVALENCE (XFDES,XFDES_J)
	  INTEGER*4 XFDES_K(0:5)
	  EQUIVALENCE (XFDES,XFDES_K)
	  REAL XFDES_E(0:5)
	  EQUIVALENCE (XFDES,XFDES_E)
	  DOUBLE PRECISION XFDES_D(0:2)
	  EQUIVALENCE (XFDES,XFDES_D)
	  COMPLEX XFDES_X(0:2)
	  EQUIVALENCE (XFDES,XFDES_X)
	  CHARACTER*(24) XFDES_C
	  EQUIVALENCE (XFDES,XFDES_C)
	BYTE DFDES(0:23)                        ! Initialisation data
	  BYTE DFDES_B(0:23)
	  EQUIVALENCE (DFDES,DFDES_B)
	  LOGICAL DFDES_L(0:5)
	  EQUIVALENCE (DFDES,DFDES_L)
	  INTEGER*2 DFDES_I(0:11)
	  EQUIVALENCE (DFDES,DFDES_I)
	  INTEGER DFDES_J(0:5)
	  EQUIVALENCE (DFDES,DFDES_J)
	  INTEGER*4 DFDES_K(0:5)
	  EQUIVALENCE (DFDES,DFDES_K)
	  REAL DFDES_E(0:5)
	  EQUIVALENCE (DFDES,DFDES_E)
	  DOUBLE PRECISION DFDES_D(0:2)
	  EQUIVALENCE (DFDES,DFDES_D)
	  COMPLEX DFDES_X(0:2)
	  EQUIVALENCE (DFDES,DFDES_X)
	  CHARACTER*(24) DFDES_C
	  EQUIVALENCE (DFDES,DFDES_C)
	BYTE EFDES(0:23)                        ! Edit data
	  BYTE EFDES_B(0:23)
	  EQUIVALENCE (EFDES,EFDES_B)
	  LOGICAL EFDES_L(0:5)
	  EQUIVALENCE (EFDES,EFDES_L)
	  INTEGER*2 EFDES_I(0:11)
	  EQUIVALENCE (EFDES,EFDES_I)
	  INTEGER EFDES_J(0:5)
	  EQUIVALENCE (EFDES,EFDES_J)
	  INTEGER*4 EFDES_K(0:5)
	  EQUIVALENCE (EFDES,EFDES_K)
	  REAL EFDES_E(0:5)
	  EQUIVALENCE (EFDES,EFDES_E)
	  DOUBLE PRECISION EFDES_D(0:2)
	  EQUIVALENCE (EFDES,EFDES_D)
	  COMPLEX EFDES_X(0:2)
	  EQUIVALENCE (EFDES,EFDES_X)
	  CHARACTER*(24) EFDES_C
	  EQUIVALENCE (EFDES,EFDES_C)
C
C  WNT common block:
C                                                                             
	COMMON /WNT_COM/ DEP,LSTON,PRTON,
	1              ALGON,CATP,CALN,CBTP,
	1              COFF,CALEN,DEFSN,
	1              BEGSN,PARSN,CINSN,
	1              UNID,OINFIL,INFIL,
	1              PARM,IBDES,CBDES,
	1              VBDES,RBDES,CMDES,
	1              FMDES,CCDES,FEDES,
	1              CEDES,XFDES,DFDES,
	1              EFDES
C
C  Given statements:
C                                                                             
C-                                                                            

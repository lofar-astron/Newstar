C+ WNTIO2.FOR
C  WNB 930501
C
C  Revisions:
C
	SUBROUTINE WNTIO2(TP,F,FENTB,FENTJ,CNAM)
C
C  Output data line
C
C  Result:
C
C	CALL WNTIO2( TP_J:I, F(0:1)_J:I, FENTB_S:I, FENTJ_S:I, CNAM_C*:I)
C			Output a data line for Fortran(TP=0) or C (TP=1) on
C			device F(TP) using data structure FENT and common
C			block name CNAM
C	CALL WNTIO3( TP_J:I, F(0:1)_J:I, FENTB_S:I, FENTJ_S:I, CNAM_C*:I)
C			Output data line including initialisation data
C	CALL WNTIO4( TP_J:I, F(0:1)_J:I, FENTB_S:I, FENTJ_S:I, CNAM_C*:I)
C			Output comment only line
C
C  Include files:
C
	INCLUDE 'WNG_DEF'
	INCLUDE 'WNT_O_DEF'
	INCLUDE 'WNT_DEF'
C
C  Parameters:
C
C
C  Arguments:
C
	INTEGER TP		!FORTRAN/C
	INTEGER F(0:1)		!FORTRAN/C FILE
	BYTE FENTB(0:*)		!DATA STRUCTURE
	INTEGER FENTJ(0:*)
	CHARACTER*(*) CNAM	!COMMON NAME
C
C  Function references:
C
	INTEGER WNCALN		!STRING LENGTH
	INTEGER WNTIBR		!READ DATA ENTRY
C
C  Data declarations:
C
	LOGICAL IO3		!DO DATA INIT OUTPUT
	INTEGER NCOM		!COMMENT LINE COUNT
	CHARACTER*80 LIN1	!LINE
	CHARACTER*(MXLNAM) LNAM	!ARRAY STRING
	CHARACTER*(MXLNAM) LNAM1,LNAM2 !ENTITY NAME
	CHARACTER*(MXLNAM) LCNAM !LC NAME
	BYTE DENTB(0:WNTDHDL-1)	!DATA INIT ENTRY
	  INTEGER DENTJ(0:WNTDHDL/LB_J-1)
	  EQUIVALENCE (DENTB,DENTJ)
	BYTE LFENTB(0:WNTFHDL-1) !DATA ENTRY
	  INTEGER LFENTJ(0:WNTFHDL/LB_J-1)
	  EQUIVALENCE (LFENTB,LFENTJ)
	BYTE LIENTB(0:WNTIHDL-1) !LINE ENTRY
	  INTEGER LIENTJ(0:WNTIHDL/LB_J-1)
	  EQUIVALENCE (LIENTB,LIENTJ)
	BYTE LCENTB(0:MXSLIN-1)	!COMMENT ENTRY
	  CHARACTER*(MXSLIN) LCENTC
	  EQUIVALENCE (LCENTB,LCENTC)
C-
C
C IO2
C
	IO3=.FALSE.				!NO INIT
	GOTO 10
C
C IO3
C
	ENTRY WNTIO3(TP,F,FENTB,FENTJ,CNAM)
C
	IO3=.TRUE.
	GOTO 10
C
C OUTPUT
C
 10	CONTINUE
	IF (FENTJ(WNTF_DTP_J).EQ.0) GOTO 20	!COMMENT ONLY
	CALL WNTIO0(TP,FENTJ,LNAM)		!GET ARRAY INDICES
	CALL WNTIO1(TP,FENTB,CNAM,LNAM1,LCNAM)	!GET NAME
	NCOM=0					!COMMENT COUNT
	IF (FENTJ(WNTF_DTP_J).EQ.T_S) THEN	!STRUCTURE
	  I2=WNTIBR(XFDES,LFENTB,FENTJ(WNTF_SREF_J)) !GET REF. RECORD
	  IF (TP.EQ.0) THEN			!FORTRAN
	    IF (LNAM.EQ.' ') THEN
	      LNAM=')'				!MAKE SURE )
	    ELSE
	      LNAM(1:1)=','
	    END IF
	    CALL WNCTXS(LCENTC,'!@!AS  !AS(0:!UJ!AS',
	1		CD(FENTJ(WNTF_DTP_J)),
	1		LNAM1,LFENTJ(WNTF_TLEN_J)-1,LNAM)
	    CALL WNTIO6(F,TP,LCENTC,FENTJ,LIENTB,NCOM) !SHOW WITH COMMENT
	    DO I=1,T__N-1			!ALL EQUIVALENCES
	      IF (LFENTJ(WNTF_TLEN_J).GE.CD2(I) .AND.
	1		CD2(I).NE.0 .AND.
	1		CD1(I).NE.'S' .AND. CD1(I).NE.'C' .AND.
	1		CD1(I).NE.'A') THEN
	       IF (MOD(LFENTJ(WNTF_TLEN_J),CD2(I)).EQ.0) THEN
	        CALL WNCTXS(LCENTC,'!@  !AS  !AS_!AS(0:!UJ!AS',
	1		CD(I),
	1		LNAM1,CD1(I),LFENTJ(WNTF_TLEN_J)/CD2(I)-1,LNAM)
	        CALL WNTIO6(F,TP,LCENTC,FENTJ,LIENTB,NCOM) !SHOW WITH COMMENT
	        CALL WNCTXS(LCENTC,'!@  EQUIVALENCE '//
	1		'(!AS,!AS_!AS)',
	1		LNAM1,LNAM1,CD1(I))
	        CALL WNTIO6(F,TP,LCENTC,FENTJ,LIENTB,NCOM) !SHOW WITH COMMENT
	       END IF
	      END IF
	    END DO
	    IF (LNAM.EQ.')') THEN
	      LNAM=' '
	    ELSE
	      LNAM(1:1)='('
	    END IF
	    CALL WNCTXS(LCENTC,'!@  CHARACTER*(!UJ) !AS_!AS!AS',
	1		LFENTJ(WNTF_TLEN_J),
	1		LNAM1,'C',LNAM)
	    CALL WNTIO6(F,TP,LCENTC,FENTJ,LIENTB,NCOM) !SHOW WITH COMMENT
	    CALL WNCTXS(LCENTC,'!@  EQUIVALENCE '//
	1		'(!AS,!AS_!AS)',
	1		LNAM1,LNAM1,'C')
	    CALL WNTIO6(F,TP,LCENTC,FENTJ,LIENTB,NCOM) !SHOW WITH COMMENT
	    IF (IO3 .AND. FENTJ(WNTF_NINI_J).GT.0) THEN	!DATA INIT
	    END IF				!!DATA INIT
	  ELSE					!C
	    CALL WNTIO1(TP,LFENTB,CNAM,LNAM1,LNAM2) !GET REFERENCE NAME
	    CALL WNCTXS(LCENTC,'!@!AS  !AS !AS!AS;',
	1		UD(FENTJ(WNTF_DTP_J)),
	1		LNAM2,LCNAM,LNAM)
	    CALL WNTIO6(F,TP,LCENTC,FENTJ,LIENTB,NCOM) !SHOW WITH COMMENT
	    IF (IO3 .AND. FENTJ(WNTF_NINI_J).GT.0) THEN	!DATA INIT
	    END IF				!!DATA INIT
	  END IF				!FORTRAN/C
	  CALL WNTIO7(F,TP,LCENTC,FENTJ,LIENTB,NCOM) !FINAL COMMENTS
	ELSE IF (FENTJ(WNTF_DTP_J).NE.T_C) THEN	!NUMERIC
	  IF (TP.EQ.0) THEN			!FORTRAN
	    CALL WNCTXS(LCENTC,'!@!AS  !AS!AS',
	1		CD(FENTJ(WNTF_DTP_J)),
	1		LNAM1,LNAM)
	    CALL WNTIO6(F,TP,LCENTC,FENTJ,LIENTB,NCOM) !SHOW WITH COMMENT
	    IF (IO3 .AND. FENTJ(WNTF_NINI_J).GT.0) THEN	!DATA INIT
	      CALL WNCTXS(LIN1,'!@  DATA !AS /',
	1		LNAM1)
	      I4=WNCALN(LIN1)			!LENGTH FILLED
	      DO I3=FENTJ(WNTF_INIP_J),FENTJ(WNTF_INIP_J)+
	1		FENTJ(WNTF_NINI_J)-1	!DO ALL ENTRIES
	        I2=WNTIBR(DFDES,DENTB,I3)	!GET DATA
	        IF (I4.GE.COMPOS-10) THEN	!MORE LINES
	          CALL WNTIO6(F,TP,LIN1,FENTJ,LIENTB,NCOM) !SHOW WITH COMMENT
		  CALL WNCTXS(LIN1,'!@&!_,')
		  I4=WNCALN(LIN1)-1
	        END IF
	        IF (DENTJ(WNTD_REP_J).GT.1) THEN !SET REPEAT
	          CALL WNCTXS(LIN1(I4+1:),'!UJ$*',
	1			DENTJ(WNTD_REP_J))
		  I4=WNCALN(LIN1)
	        END IF
	        CALL WNCTXS(LIN1(I4+1:),'!AD,',
	1			DENTB(WNTD_STR_1),WNTD_STR_N) !VALUE
	        I4=WNCALN(LIN1)
	      END DO
	      LIN1(I4:I4)='/'			!LAST LINE
	      CALL WNTIO6(F,TP,LIN1,FENTJ,LIENTB,NCOM) !SHOW WITH COMMENT
	    END IF
	  ELSE				!C
	    IF (IO3 .AND. FENTJ(WNTF_NINI_J).GT.0) THEN !DATA INIT
	      CALL WNCTXS(LIN1,'	static !AS  !AS!AS = {',
	1		UD(FENTJ(WNTF_DTP_J)),
	1		LCNAM,LNAM)
	      I4=WNCALN(LIN1)			!LENGTH FILLED
	      DO I3=FENTJ(WNTF_INIP_J),FENTJ(WNTF_INIP_J)+
	1		FENTJ(WNTF_NINI_J)-1	!DO ALL ENTRIES
	        I2=WNTIBR(DFDES,DENTB,I3)	!GET DATA
	        DO I2=1,DENTJ(WNTD_REP_J)	!SET REPEAT
	          IF (I4.GE.COMPOS-10) THEN	!MORE LINES
	            CALL WNTIO6(F,TP,LIN1,FENTJ,LIENTB,NCOM) !SHOW COMMENT
		    CALL WNCTXS(LIN1,'!@!_$,')
		    I4=WNCALN(LIN1)-1
	          END IF
	          CALL WNCTXS(LIN1(I4+1:),'!AD,',
	1			DENTB(WNTD_STR_1),WNTD_STR_N) !VALUE
	          I4=WNCALN(LIN1)
		END DO
	      END DO
	      LIN1(I4:)='};'			!LAST LINE
	      CALL WNTIO6(F,TP,LIN1,FENTJ,LIENTB,NCOM) !SHOW WITH COMMENT
	    ELSE				!NO INIT
	      CALL WNCTXS(LCENTC,'!@!AS  !AS!AS$;',
	1		UD(FENTJ(WNTF_DTP_J)),
	1		LCNAM,LNAM)
	      CALL WNTIO6(F,TP,LCENTC,FENTJ,LIENTB,NCOM) !SHOW WITH COMMENT
	    END IF				!DATA INIT
	  END IF				!FORTRAN/C
	  CALL WNTIO7(F,TP,LCENTC,FENTJ,LIENTB,NCOM) !FINAL COMMENTS
	ELSE					!CHARACTER
	  IF (TP.EQ.0) THEN			!FORTRAN
	    CALL WNCTXS(LCENTC,'!@!AS$*!UJ  !AS!AS',
	1		CD(FENTJ(WNTF_DTP_J)),
	1		FENTJ(WNTF_SLEN_J),LNAM1,LNAM)
	    CALL WNTIO6(F,TP,LCENTC,FENTJ,LIENTB,NCOM) !SHOW WITH COMMENT
	    IF (IO3 .AND. FENTJ(WNTF_NINI_J).GT.0) THEN !DATA INIT
	      CALL WNCTXS(LIN1,'!@  DATA !AS /',
	1		LNAM1)
	      I4=WNCALN(LIN1)			!LENGTH FILLED
	      DO I3=FENTJ(WNTF_INIP_J),FENTJ(WNTF_INIP_J)+
	1		FENTJ(WNTF_NINI_J)-1	!DO ALL ENTRIES
	        I2=WNTIBR(DFDES,DENTB,I3)	!GET DATA
		IF (I4.GE.COMPOS-10) THEN	!MORE LINES
	          CALL WNTIO6(F,TP,LIN1,FENTJ,LIENTB,NCOM) !SHOW WITH COMMENT
		  CALL WNCTXS(LIN1,'!@&!_,')
		  I4=WNCALN(LIN1)-1
		END IF
		IF (DENTJ(WNTD_REP_J).GT.1) THEN !SET REPEAT
		  CALL WNCTXS(LIN1(I4+1:),'!UJ$*',
	1			DENTJ(WNTD_REP_J))
		  I4=WNCALN(LIN1)
		END IF
		CALL WNCTXS(LIN1(I4+1:),'''!AD '',',
	1			DENTB(WNTD_STR_1),WNTD_STR_N) !VALUE
		I4=WNCALN(LIN1)
	      END DO
	      LIN1(I4:I4)='/'			!LAST LINE
	      CALL WNTIO6(F,TP,LIN1,FENTJ,LIENTB,NCOM) !SHOW WITH COMMENT
	    END IF
	  ELSE				!C
	    IF (IO3 .AND. FENTJ(WNTF_NINI_J).GT.0) THEN !DATA INIT
	      CALL WNCTXS(LIN1,'	static !AS  !AS!AS$[!UJ] = {',
	1		UD(FENTJ(WNTF_DTP_J)),
	1		LCNAM,LNAM,FENTJ(WNTF_SLEN_J))
	      I4=WNCALN(LIN1)			!LENGTH FILLED
	      DO I3=FENTJ(WNTF_INIP_J),FENTJ(WNTF_INIP_J)+
	1		FENTJ(WNTF_NINI_J)-1	!DO ALL ENTRIES
	        I2=WNTIBR(DFDES,DENTB,I3)	!GET DATA
	        DO I2=1,DENTJ(WNTD_REP_J)	!SET REPEAT
	          IF (I4.GE.COMPOS-10) THEN	!MORE LINES
	            CALL WNTIO6(F,TP,LIN1,FENTJ,LIENTB,NCOM) !SHOW COMMENT
		    CALL WNCTXS(LIN1,'!@!_$,')
		    I4=WNCALN(LIN1)-1
	          END IF
	          CALL WNCTXS(LIN1(I4+1:),'"!AD ",',
	1			DENTB(WNTD_STR_1),WNTD_STR_N) !VALUE
	          I4=WNCALN(LIN1)
		END DO
	      END DO
	      LIN1(I4:)='};'			!LAST LINE
	      CALL WNTIO6(F,TP,LIN1,FENTJ,LIENTB,NCOM) !SHOW WITH COMMENT
	    ELSE				!NO INIT
	      CALL WNCTXS(LCENTC,'!@!AS  !AS!AS$[!UJ];',
	1		UD(FENTJ(WNTF_DTP_J)),
	1		LCNAM,LNAM,FENTJ(WNTF_SLEN_J))
	      CALL WNTIO6(F,TP,LCENTC,FENTJ,LIENTB,NCOM) !SHOW WITH COMMENT
	    END IF				!DATA INIT
	  END IF
	  CALL WNTIO7(F,TP,LCENTC,FENTJ,LIENTB,NCOM) !FINAL COMMENTS
	END IF					!NUMERIC/CHARACTER
C
C READY
C
	RETURN
C
C IO4
C
	ENTRY WNTIO4(TP,F,FENTB,FENTJ,CNAM)
C
C READ LINE ENTRY
C
 20	CONTINUE
	I2=WNTIBR(IBDES,LIENTB,FENTJ(WNTF_REFP_J))
	IF (LIENTJ(WNTI_LCOM_J).EQ.0) THEN	!BLANK LINE
	  IF (TP.EQ.0) THEN			!FORTRAN
	    CALL WNCTXT(F(TP),'C')
	  ELSE					!C
	    CALL WNCTXT(F(TP),'/*!78C */')
	  END IF
	ELSE
	  I2=WNTIBR(CBDES,LCENTB,LIENTJ(WNTI_PCOM_J)) !READ COMMENT
	  IF (TP.EQ.0) THEN			!FORTRAN
	    CALL WNCTXT(F(TP),'C !AD',LCENTB,LIENTJ(WNTI_LCOM_J))
	  ELSE					!C
	    CALL WNCTXT(F(TP),'/* !AD!78C */',LCENTB,LIENTJ(WNTI_LCOM_J))
	  END IF
	END IF
C
	RETURN
C
C
	END

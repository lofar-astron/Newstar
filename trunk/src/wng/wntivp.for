C+ WNTIVP.FOR
C  WNB 930501
C
C  Revisions:
C
	LOGICAL FUNCTION WNTIVP(STR,PT,NAM,GI)
C
C  Put a value in a local variable
C
C  Result:
C
C	WNTIVP_L = WNTIVP( STR_C*:I, PT_J:IO, NAM_C*:I, GI_L:I)
C				Put value from STR in NAM. GI is the global
C				indicator
C
C  Include files:
C
	INCLUDE 'WNG_DEF'
	INCLUDE 'WNT_O_DEF'
	INCLUDE 'WNT_DEF'
C
C  Parameters:
C
C
C  Arguments:
C
	CHARACTER*(*) STR		!INPUT STRING
	INTEGER PT			!POINTER INTO STRING
	CHARACTER*(*) NAM		!NAME OF VALUE
	LOGICAL GI			!GLOBAL INDICATOR
C
C  Function references:
C
	LOGICAL WNTIVG			!GET VALUE
	INTEGER WNTIBP,WNTIBW		!SAVE BUFFER LINE
	LOGICAL WNCAFS			!GET FIELD
C
C  Data declarations:
C
	CHARACTER*(WNTV_STR_N) LVAL	!VALUE
	BYTE VALB(0:WNTVHDL-1)		!FULL VALUE
	  INTEGER VALJ(0:WNTVHDL/LB_J-1)
	  EQUIVALENCE (VALB,VALJ)
C-
C
C MAKE VALUE
C
	WNTIVP=.TRUE.				!ASSUME OK
	IF (.NOT.WNTIVG(STR,PT,JS,I,LVAL)) GOTO 900 !GET VALUE TO PUT
	CALL WNGMFS(WNTV_NAM_N,NAM,VALB(WNTV_NAM_1)) !SAVE NAME
	IF (JS) THEN				!INTEGER
	  IF (GI) THEN				!GLOBAL
	    VALJ(WNTV_TYP_J)=+2
	  ELSE					!LOCAL
	    VALJ(WNTV_TYP_J)=+1
	  END IF
	ELSE					!CHARACTER
	  IF (GI) THEN				!GLOBAL
	    VALJ(WNTV_TYP_J)=-2
	  ELSE					!LOCAL
	    VALJ(WNTV_TYP_J)=-1
	  END IF
	END IF
	VALJ(WNTV_VAL_J)=I			!VALUE
	CALL WNGMFS(WNTV_STR_N,LVAL,VALB(WNTV_STR_1))
C
C SET IN LIST
C
	DO I=0,VBDES_J(WNTB_CNT_J)-1		!CHECK EXISTING NAMES
	  CALL WNGMTS(WNTV_NAM_N,
	1		A_B(VBDES_J(WNTB_BPTR_J)+I*WNTVHDL+WNTV_NAM_1),
	1		LVAL)			!READ NAME
	  IF (LVAL.EQ.NAM) THEN			!EXISTING
	    I1=WNTIBW(VBDES,VALB,I)		!OVERWRITE VALUE
	    GOTO 800				!READY
	  END IF
	END DO
	I1=WNTIBP(VBDES,VALB)			!SET VALUE
C
C READY
C
 800	CONTINUE
C
	RETURN
C
C ERROR
C
 900	WNTIVP=.FALSE.
C
	RETURN
C
C
	END
